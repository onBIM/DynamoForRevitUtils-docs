{
  "api/DynamoForRevitNodeModels.Attributes.DefaultValues.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.DefaultValues.html",
    "title": "Class DefaultValues | DynamoForRevitUtils - Docs",
    "summary": "Class DefaultValues Class containing all default values for the custom node models attributes. Inheritance object DefaultValues Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class DefaultValues Fields OVERALL_NODES_CATEGORY Default node model category. Declaration public const string OVERALL_NODES_CATEGORY = \"onBIM Nodes\" Field Value Type Description string SEARCH_TAGS Default node models search tags. Declaration public const string SEARCH_TAGS = \"onBIM, onBIMNodes, onBIM Nodes, Nodes, \" Field Value Type Description string"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelCategoryAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelCategoryAttribute.html",
    "title": "Class NodeModelCategoryAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelCategoryAttribute Attribute used to define the node model category. Inheritance object Attribute NodeCategoryAttribute NodeModelCategoryAttribute Inherited Members NodeCategoryAttribute.ElementCategory Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelCategoryAttribute : NodeCategoryAttribute Constructors NodeModelCategoryAttribute(Type, Type) Constructor. Declaration public NodeModelCategoryAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelDescriptionAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelDescriptionAttribute.html",
    "title": "Class NodeModelDescriptionAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelDescriptionAttribute Attribute used to define the node model description. Inheritance object Attribute NodeDescriptionAttribute NodeModelDescriptionAttribute Inherited Members NodeDescriptionAttribute.ElementDescription Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelDescriptionAttribute : NodeDescriptionAttribute Constructors NodeModelDescriptionAttribute(Type, Type) Constructor. Declaration public NodeModelDescriptionAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelDisplayNameAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelDisplayNameAttribute.html",
    "title": "Class NodeModelDisplayNameAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelDisplayNameAttribute Attribute used to define the node model name. Inheritance object Attribute NodeNameAttribute NodeModelDisplayNameAttribute Inherited Members NodeNameAttribute.Name Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelDisplayNameAttribute : NodeNameAttribute Constructors NodeModelDisplayNameAttribute(Type, Type) Constructor. Declaration public NodeModelDisplayNameAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelInPortsDescriptionsAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelInPortsDescriptionsAttribute.html",
    "title": "Class NodeModelInPortsDescriptionsAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelInPortsDescriptionsAttribute Attribute used to define the node model IN ports descriptions. Inheritance object Attribute InPortDescriptionsAttribute NodeModelInPortsDescriptionsAttribute Inherited Members InPortDescriptionsAttribute.PortDescriptions Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelInPortsDescriptionsAttribute : InPortDescriptionsAttribute Constructors NodeModelInPortsDescriptionsAttribute(Type, Type) Constructor. Declaration public NodeModelInPortsDescriptionsAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelInPortsNamesAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelInPortsNamesAttribute.html",
    "title": "Class NodeModelInPortsNamesAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelInPortsNamesAttribute Attribute used to define the node model IN ports names. Inheritance object Attribute InPortNamesAttribute NodeModelInPortsNamesAttribute Inherited Members InPortNamesAttribute.PortNames Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelInPortsNamesAttribute : InPortNamesAttribute Constructors NodeModelInPortsNamesAttribute(Type, Type) Constructor. Declaration public NodeModelInPortsNamesAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelInPortsTypesAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelInPortsTypesAttribute.html",
    "title": "Class NodeModelInPortsTypesAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelInPortsTypesAttribute Attribute used to define the node model IN ports types. Inheritance object Attribute InPortTypesAttribute NodeModelInPortsTypesAttribute Inherited Members InPortTypesAttribute.PortTypes Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelInPortsTypesAttribute : InPortTypesAttribute Constructors NodeModelInPortsTypesAttribute(Type, Type) Constructor. Declaration public NodeModelInPortsTypesAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelOutPortsDescriptionsAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelOutPortsDescriptionsAttribute.html",
    "title": "Class NodeModelOutPortsDescriptionsAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelOutPortsDescriptionsAttribute Attribute used to define the node model OUT ports descriptions. Inheritance object Attribute OutPortDescriptionsAttribute NodeModelOutPortsDescriptionsAttribute Inherited Members OutPortDescriptionsAttribute.PortDescriptions Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelOutPortsDescriptionsAttribute : OutPortDescriptionsAttribute Constructors NodeModelOutPortsDescriptionsAttribute(Type, Type) Constructor. Declaration public NodeModelOutPortsDescriptionsAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelOutPortsNamesAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelOutPortsNamesAttribute.html",
    "title": "Class NodeModelOutPortsNamesAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelOutPortsNamesAttribute Attribute used to define the node model OUT ports names. Inheritance object Attribute OutPortNamesAttribute NodeModelOutPortsNamesAttribute Inherited Members OutPortNamesAttribute.PortNames Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelOutPortsNamesAttribute : OutPortNamesAttribute Constructors NodeModelOutPortsNamesAttribute(Type, Type) Constructor. Declaration public NodeModelOutPortsNamesAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelOutPortsTypesAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelOutPortsTypesAttribute.html",
    "title": "Class NodeModelOutPortsTypesAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelOutPortsTypesAttribute Attribute used to define the node model OUT ports types. Inheritance object Attribute OutPortTypesAttribute NodeModelOutPortsTypesAttribute Inherited Members OutPortTypesAttribute.PortTypes Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelOutPortsTypesAttribute : OutPortTypesAttribute Constructors NodeModelOutPortsTypesAttribute(Type, Type) Constructor. Declaration public NodeModelOutPortsTypesAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.NodeModelSearchTagsAttribute.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.NodeModelSearchTagsAttribute.html",
    "title": "Class NodeModelSearchTagsAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelSearchTagsAttribute Attribute used to define the node model search tags. Inheritance object Attribute NodeSearchTagsAttribute NodeModelSearchTagsAttribute Inherited Members NodeSearchTagsAttribute.Tags Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitNodeModels.Attributes Assembly: DynamoForRevitNodeModels.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class NodeModelSearchTagsAttribute : NodeSearchTagsAttribute Constructors NodeModelSearchTagsAttribute(Type, Type) Constructor. Declaration public NodeModelSearchTagsAttribute(Type nodeType, Type resourceType) Parameters Type Name Description Type nodeType The type of NodeModel Type resourceType Localized Resource type used to build node model Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Attributes.html": {
    "href": "api/DynamoForRevitNodeModels.Attributes.html",
    "title": "Namespace DynamoForRevitNodeModels.Attributes | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.Attributes Classes DefaultValues Class containing all default values for the custom node models attributes. NodeModelCategoryAttribute Attribute used to define the node model category. NodeModelDescriptionAttribute Attribute used to define the node model description. NodeModelDisplayNameAttribute Attribute used to define the node model name. NodeModelInPortsDescriptionsAttribute Attribute used to define the node model IN ports descriptions. NodeModelInPortsNamesAttribute Attribute used to define the node model IN ports names. NodeModelInPortsTypesAttribute Attribute used to define the node model IN ports types. NodeModelOutPortsDescriptionsAttribute Attribute used to define the node model OUT ports descriptions. NodeModelOutPortsNamesAttribute Attribute used to define the node model OUT ports names. NodeModelOutPortsTypesAttribute Attribute used to define the node model OUT ports types. NodeModelSearchTagsAttribute Attribute used to define the node model search tags."
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.ElementTypesDropDownBase-1.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.ElementTypesDropDownBase-1.html",
    "title": "Class ElementTypesDropDownBase<TElementType> | DynamoForRevitUtils - Docs",
    "summary": "Class ElementTypesDropDownBase<TElementType> Enum drop down for Revit ElementTypes Collectors Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<TElementType> ElementTypesDropDownBase<TElementType> DimensionTypesDropDown ElevationViewFamilyTypesDropDown FilledRegionTypesDropDown GridTypesDropDown SectionViewFamilyTypesDropDown TextNoteTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementsDropDownBase<TElementType>.LoadDropDownItems() ElementsDropDownBase<TElementType>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<TElementType>.BuildOutputNode() ElementsDropDownBase<TElementType>.ItemNameOverrider NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes Assembly: DynamoForRevitNodeModels.dll Syntax public abstract class ElementTypesDropDownBase<TElementType> : ElementsDropDownBase<TElementType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable where TElementType : ElementType Type Parameters Name Description TElementType Constructors ElementTypesDropDownBase(string) Constructor of ElementType drop down NodeModel used by Dynamo UI. Declaration public ElementTypesDropDownBase(string outportName) Parameters Type Name Description string outportName ElementTypesDropDownBase(string, IEnumerable<PortModel>, IEnumerable<PortModel>) Constructor of ElementType drop down NodeModel used to create node in .dyn file which is in json format. Declaration [JsonConstructor] public ElementTypesDropDownBase(string outportName, IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description string outportName IEnumerable<PortModel> inPorts Obtained automatically by Dynamo Engine. No need to set in child. IEnumerable<PortModel> outPorts Obtained automatically by Dynamo Engine. No need to set in child. Properties CollectedElements Elements to show in the drop down menu Declaration protected override List<TElementType> CollectedElements { get; } Property Value Type Description List<TElementType> Overrides ElementsDropDownBase<TElementType>.CollectedElements Filter Function to be used as a filter to be applied to collected elements. Leave null to collect all elements. Declaration protected abstract Func<TElementType, bool>? Filter { get; } Property Value Type Description Func<TElementType, bool> NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override abstract string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementsDropDownBase<TElementType>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.ElementsDropDownBase-1.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.ElementsDropDownBase-1.html",
    "title": "Class ElementsDropDownBase<T> | DynamoForRevitUtils - Docs",
    "summary": "Class ElementsDropDownBase<T> Base class for ElementTypes drop down menu Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<T> ElementTypesDropDownBase<TElementType> LineStylesDropDown TagTypesDropDown ViewPortTypesDropDown ViewTemplatesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes Assembly: DynamoForRevitNodeModels.dll Syntax public abstract class ElementsDropDownBase<T> : NodeModelDropDownBase, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable where T : Element Type Parameters Name Description T Constructors ElementsDropDownBase(string) Constructor of ElementType drop down NodeModel used by Dynamo UI. Declaration public ElementsDropDownBase(string outportName) Parameters Type Name Description string outportName ElementsDropDownBase(string, IEnumerable<PortModel>, IEnumerable<PortModel>) Constructor of ElementType drop down NodeModel used to create node in .dyn file which is in json format. Declaration [JsonConstructor] public ElementsDropDownBase(string outportName, IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description string outportName IEnumerable<PortModel> inPorts Obtained automatically by Dynamo Engine. No need to set in child. IEnumerable<PortModel> outPorts Obtained automatically by Dynamo Engine. No need to set in child. Properties CollectedElements Elements to show in the drop down menu Declaration protected abstract List<T> CollectedElements { get; } Property Value Type Description List<T> ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected abstract IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected abstract string NoItemsPrompt { get; } Property Value Type Description string Methods BuildOutputAst(List<AssociativeNode>) Assigns the selected value to the output ports Declaration public override IEnumerable<AssociativeNode> BuildOutputAst(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Returns Type Description IEnumerable<AssociativeNode> Overrides NodeModel.BuildOutputAst(List<AssociativeNode>) BuildOutputNode() Builds and returns the output node for the drop-down node model. Declaration protected override AssociativeNode BuildOutputNode() Returns Type Description AssociativeNode The output node. Overrides NodeModelDropDownBase.BuildOutputNode() LoadDropDownItems() Populate Items in Drop down menu Declaration protected override void LoadDropDownItems() Overrides NodeModelDropDownBase.LoadDropDownItems() Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.EnumDropDownBase-1.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.EnumDropDownBase-1.html",
    "title": "Class EnumDropDownBase<T> | DynamoForRevitUtils - Docs",
    "summary": "Class EnumDropDownBase<T> Enum drop downs base class Reference: \"https://github.com/DynamoDS/DynamoRevit/blob/master/src/Libraries/RevitNodesUI/RevitDropDown.cs\" Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase EnumDropDownBase<T> ParameterDataTypeDropDown ParameterKindDropDown BuiltInCategoryDropDown BuiltInParameterDropDown ViewTypesDropDown SelectionMethodDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes Assembly: DynamoForRevitNodeModels.dll Syntax public abstract class EnumDropDownBase<T> : NodeModelDropDownBase, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable where T : struct, IConvertible, IComparable, IFormattable Type Parameters Name Description T Enum Type Constructors EnumDropDownBase(string) Node Model constructor used by Dynamo UI Declaration protected EnumDropDownBase(string outputName) Parameters Type Name Description string outputName Name of the output port EnumDropDownBase(string, IEnumerable<PortModel>, IEnumerable<PortModel>) Node Model constructor used to add it to .dyn file which is in json format Declaration [JsonConstructor] protected EnumDropDownBase(string outputName, IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description string outputName Name of the output port IEnumerable<PortModel> inPorts Input ports IEnumerable<PortModel> outPorts Output ports Methods BuildOutputAst(List<AssociativeNode>) Assign the selected Enumeration value to the output Declaration public override IEnumerable<AssociativeNode> BuildOutputAst(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Returns Type Description IEnumerable<AssociativeNode> Overrides NodeModel.BuildOutputAst(List<AssociativeNode>) BuildOutputNode() Builds and returns the output node for the drop-down node model. Declaration protected override AssociativeNode BuildOutputNode() Returns Type Description AssociativeNode The output node. Overrides NodeModelDropDownBase.BuildOutputNode() LoadDropDownItems() Override this method in child classes to load drop down items Declaration protected override void LoadDropDownItems() Overrides NodeModelDropDownBase.LoadDropDownItems() PopulateItemsCore(string) Call this method to allow derived classes to populate the drop down list items. An existing selection is provided as an argument so that it can be retained after drop down items are regenerated. Declaration protected override DSDropDownBase.SelectionState PopulateItemsCore(string currentSelection) Parameters Type Name Description string currentSelection Item text of an existing selected drop down item, or string.Empty if there is no existing selection. Returns Type Description DSDropDownBase.SelectionState See SelectionState for more information. Overrides NodeModelDropDownBase.PopulateItemsCore(string) Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.NodeModelDropDownBase.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.NodeModelDropDownBase.html",
    "title": "Class NodeModelDropDownBase | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelDropDownBase Abstract base class for node models that represent drop-down Nodes. Inherits from DSDropDownBase. Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<T> EnumDropDownBase<T> CultureInfoDropDown EncodingDropDown BasicColorsDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.BuildOutputAst(List<AssociativeNode>) NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes Assembly: DynamoForRevitNodeModels.dll Syntax public abstract class NodeModelDropDownBase : DSDropDownBase, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors NodeModelDropDownBase(string) Node Model constructor used by Dynamo UI Declaration protected NodeModelDropDownBase(string outputName) Parameters Type Name Description string outputName Name of the output port NodeModelDropDownBase(string, IEnumerable<PortModel>, IEnumerable<PortModel>) Node Model constructor used to add it to .dyn file which is in json format Declaration [JsonConstructor] protected NodeModelDropDownBase(string outputName, IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description string outputName Name of the output port IEnumerable<PortModel> inPorts Input ports IEnumerable<PortModel> outPorts Output ports Methods BuildOutputNode() Builds and returns the output node for the drop-down node model. Declaration protected abstract AssociativeNode BuildOutputNode() Returns Type Description AssociativeNode The output node. CanBuildOutputAst(string?, string?) Whether it have valid Enumeration values to the output Declaration protected bool CanBuildOutputAst(string? itemValueToIgnore = null, string? selectedValueToIgnore = null) Parameters Type Name Description string itemValueToIgnore string selectedValueToIgnore Returns Type Description bool true is that there are valid values to output,false is that only a null value to output Remarks This is needed because Items property changes are triggered several times. Even when user clicks on down arrow. Method extracted from link below https://github.com/DynamoDS/DynamoRevit/blob/master/src/Libraries/RevitNodesUI/RevitDropDown.cs To resolve the issue https://github.com/DynamoDS/Dynamo/issues/10935 Issue solution https://github.com/DynamoDS/DynamoRevit/pull/2349 GetOutputName(Type, Type) Retrieves the name of the output port for a node model using the provided types. Declaration protected static string GetOutputName(Type NodeModelType, Type ResourceType) Parameters Type Name Description Type NodeModelType The type of the node model. Type ResourceType The type of the resource containing metadata for the node model. Returns Type Description string The name of the output port as a string. LoadDropDownItems() Override this method in child classes to load drop down items Declaration protected abstract void LoadDropDownItems() PopulateItemsCore(string) Call this method to allow derived classes to populate the drop down list items. An existing selection is provided as an argument so that it can be retained after drop down items are regenerated. Declaration protected override DSDropDownBase.SelectionState PopulateItemsCore(string currentSelection) Parameters Type Name Description string currentSelection Item text of an existing selected drop down item, or string.Empty if there is no existing selection. Returns Type Description DSDropDownBase.SelectionState See SelectionState for more information. Overrides DSDropDownBase.PopulateItemsCore(string) Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes.html",
    "title": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownBaseNodes Classes ElementTypesDropDownBase<TElementType> Enum drop down for Revit ElementTypes Collectors ElementsDropDownBase<T> Base class for ElementTypes drop down menu EnumDropDownBase<T> Enum drop downs base class Reference: \"https://github.com/DynamoDS/DynamoRevit/blob/master/src/Libraries/RevitNodesUI/RevitDropDown.cs\" NodeModelDropDownBase Abstract base class for node models that represent drop-down Nodes. Inherits from DSDropDownBase."
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes.ParameterDataTypeDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes.ParameterDataTypeDropDown.html",
    "title": "Class ParameterDataTypeDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class ParameterDataTypeDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase EnumDropDownBase<ParameterDataType> ParameterDataTypeDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members EnumDropDownBase<ParameterDataType>.PopulateItemsCore(string) EnumDropDownBase<ParameterDataType>.LoadDropDownItems() EnumDropDownBase<ParameterDataType>.BuildOutputAst(List<AssociativeNode>) EnumDropDownBase<ParameterDataType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(ParameterDataTypeDropDown), typeof(DropDownElementParameterNodesResources))] [NodeModelOutPortsTypes(typeof(ParameterDataTypeDropDown), typeof(DropDownElementParameterNodesResources))] [NodeModelOutPortsNames(typeof(ParameterDataTypeDropDown), typeof(DropDownElementParameterNodesResources))] [NodeModelDescription(typeof(ParameterDataTypeDropDown), typeof(DropDownElementParameterNodesResources))] [NodeName(\"ParameterDataType\")] [NodeCategory(\"onBIM Nodes.ElementParameter\")] [NodeModelSearchTags(typeof(ParameterDataTypeDropDown), typeof(DropDownElementParameterNodesResources))] public class ParameterDataTypeDropDown : EnumDropDownBase<ParameterDataType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ParameterDataTypeDropDown() Declaration public ParameterDataTypeDropDown() ParameterDataTypeDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public ParameterDataTypeDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes.ParameterKindDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes.ParameterKindDropDown.html",
    "title": "Class ParameterKindDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class ParameterKindDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase EnumDropDownBase<ParameterKind> ParameterKindDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members EnumDropDownBase<ParameterKind>.PopulateItemsCore(string) EnumDropDownBase<ParameterKind>.LoadDropDownItems() EnumDropDownBase<ParameterKind>.BuildOutputAst(List<AssociativeNode>) EnumDropDownBase<ParameterKind>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsTypes(typeof(ParameterKindDropDown), typeof(DropDownElementParameterNodesResources))] [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(ParameterKindDropDown), typeof(DropDownElementParameterNodesResources))] [NodeModelOutPortsNames(typeof(ParameterKindDropDown), typeof(DropDownElementParameterNodesResources))] [NodeModelDescription(typeof(ParameterKindDropDown), typeof(DropDownElementParameterNodesResources))] [NodeName(\"ParameterKind\")] [NodeCategory(\"onBIM Nodes.ElementParameter\")] [NodeModelSearchTags(typeof(ParameterKindDropDown), typeof(DropDownElementParameterNodesResources))] public class ParameterKindDropDown : EnumDropDownBase<ParameterKind>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ParameterKindDropDown() Declaration public ParameterKindDropDown() ParameterKindDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public ParameterKindDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes.html",
    "title": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownElementParameterNodes Classes ParameterDataTypeDropDown ParameterKindDropDown"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes.CultureInfoDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes.CultureInfoDropDown.html",
    "title": "Class CultureInfoDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class CultureInfoDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase CultureInfoDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(CultureInfoDropDown), typeof(DropDownOtherNodesResources))] [NodeModelOutPortsTypes(typeof(CultureInfoDropDown), typeof(DropDownOtherNodesResources))] [NodeModelOutPortsNames(typeof(CultureInfoDropDown), typeof(DropDownOtherNodesResources))] [NodeModelSearchTags(typeof(CultureInfoDropDown), typeof(DropDownOtherNodesResources))] [NodeModelDescription(typeof(CultureInfoDropDown), typeof(DropDownOtherNodesResources))] [NodeCategory(\"onBIM Nodes.String\")] [NodeName(\"CultureInfo\")] public class CultureInfoDropDown : NodeModelDropDownBase, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors CultureInfoDropDown() Declaration public CultureInfoDropDown() CultureInfoDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public CultureInfoDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Methods BuildOutputAst(List<AssociativeNode>) Assign the selected Enumeration value to the output Declaration public override IEnumerable<AssociativeNode> BuildOutputAst(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Returns Type Description IEnumerable<AssociativeNode> Overrides NodeModel.BuildOutputAst(List<AssociativeNode>) BuildOutputNode() Builds and returns the output node for the drop-down node model. Declaration protected override AssociativeNode BuildOutputNode() Returns Type Description AssociativeNode The output node. Overrides NodeModelDropDownBase.BuildOutputNode() LoadDropDownItems() Override this method in child classes to load drop down items Declaration protected override void LoadDropDownItems() Overrides NodeModelDropDownBase.LoadDropDownItems() PopulateItemsCore(string) Call this method to allow derived classes to populate the drop down list items. An existing selection is provided as an argument so that it can be retained after drop down items are regenerated. Declaration protected override DSDropDownBase.SelectionState PopulateItemsCore(string currentSelection) Parameters Type Name Description string currentSelection Item text of an existing selected drop down item, or string.Empty if there is no existing selection. Returns Type Description DSDropDownBase.SelectionState See SelectionState for more information. Overrides NodeModelDropDownBase.PopulateItemsCore(string) Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes.EncodingDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes.EncodingDropDown.html",
    "title": "Class EncodingDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class EncodingDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase EncodingDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(EncodingDropDown), typeof(DropDownOtherNodesResources))] [NodeModelOutPortsTypes(typeof(EncodingDropDown), typeof(DropDownOtherNodesResources))] [NodeModelOutPortsNames(typeof(EncodingDropDown), typeof(DropDownOtherNodesResources))] [NodeModelDescription(typeof(EncodingDropDown), typeof(DropDownOtherNodesResources))] [NodeModelSearchTags(typeof(EncodingDropDown), typeof(DropDownOtherNodesResources))] [NodeCategory(\"onBIM Nodes.String\")] [NodeName(\"Encoding\")] public class EncodingDropDown : NodeModelDropDownBase, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors EncodingDropDown() Declaration public EncodingDropDown() EncodingDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public EncodingDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Methods BuildOutputAst(List<AssociativeNode>) Assign the selected Enumeration value to the output Declaration public override IEnumerable<AssociativeNode> BuildOutputAst(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Returns Type Description IEnumerable<AssociativeNode> Overrides NodeModel.BuildOutputAst(List<AssociativeNode>) BuildOutputNode() Builds and returns the output node for the drop-down node model. Declaration protected override AssociativeNode BuildOutputNode() Returns Type Description AssociativeNode The output node. Overrides NodeModelDropDownBase.BuildOutputNode() LoadDropDownItems() Override this method in child classes to load drop down items Declaration protected override void LoadDropDownItems() Overrides NodeModelDropDownBase.LoadDropDownItems() PopulateItemsCore(string) Call this method to allow derived classes to populate the drop down list items. An existing selection is provided as an argument so that it can be retained after drop down items are regenerated. Declaration protected override DSDropDownBase.SelectionState PopulateItemsCore(string currentSelection) Parameters Type Name Description string currentSelection Item text of an existing selected drop down item, or string.Empty if there is no existing selection. Returns Type Description DSDropDownBase.SelectionState See SelectionState for more information. Overrides NodeModelDropDownBase.PopulateItemsCore(string) Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes.html",
    "title": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownOtherNodes Classes CultureInfoDropDown EncodingDropDown"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.BuiltInCategoryDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.BuiltInCategoryDropDown.html",
    "title": "Class BuiltInCategoryDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class BuiltInCategoryDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase EnumDropDownBase<BuiltInCategory> BuiltInCategoryDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members EnumDropDownBase<BuiltInCategory>.PopulateItemsCore(string) EnumDropDownBase<BuiltInCategory>.LoadDropDownItems() EnumDropDownBase<BuiltInCategory>.BuildOutputAst(List<AssociativeNode>) EnumDropDownBase<BuiltInCategory>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeCategory(\"onBIM Nodes.Revit.BuiltInCategory\")] [NodeModelDescription(typeof(BuiltInCategoryDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(BuiltInCategoryDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(BuiltInCategoryDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(BuiltInCategoryDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsDescriptions(typeof(BuiltInCategoryDropDown), typeof(DropDownRevitNodesResources))] [NodeName(\"BuiltInCategories\")] [IsDesignScriptCompatible] public class BuiltInCategoryDropDown : EnumDropDownBase<BuiltInCategory>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors BuiltInCategoryDropDown() Declaration public BuiltInCategoryDropDown() BuiltInCategoryDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public BuiltInCategoryDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.BuiltInParameterDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.BuiltInParameterDropDown.html",
    "title": "Class BuiltInParameterDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class BuiltInParameterDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase EnumDropDownBase<BuiltInParameter> BuiltInParameterDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members EnumDropDownBase<BuiltInParameter>.PopulateItemsCore(string) EnumDropDownBase<BuiltInParameter>.LoadDropDownItems() EnumDropDownBase<BuiltInParameter>.BuildOutputAst(List<AssociativeNode>) EnumDropDownBase<BuiltInParameter>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelSearchTags(typeof(BuiltInParameterDropDown), typeof(DropDownRevitNodesResources))] [NodeCategory(\"onBIM Nodes.Revit.BuiltInParameter\")] [NodeName(\"BuiltInParameters\")] [NodeModelDescription(typeof(BuiltInParameterDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(BuiltInParameterDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(BuiltInParameterDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsDescriptions(typeof(BuiltInParameterDropDown), typeof(DropDownRevitNodesResources))] [IsDesignScriptCompatible] public class BuiltInParameterDropDown : EnumDropDownBase<BuiltInParameter>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors BuiltInParameterDropDown() Declaration public BuiltInParameterDropDown() BuiltInParameterDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public BuiltInParameterDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.DimensionTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.DimensionTypesDropDown.html",
    "title": "Class DimensionTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class DimensionTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<DimensionType> ElementTypesDropDownBase<DimensionType> DimensionTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementTypesDropDownBase<DimensionType>.CollectedElements ElementsDropDownBase<DimensionType>.LoadDropDownItems() ElementsDropDownBase<DimensionType>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<DimensionType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsDescriptions(typeof(DimensionTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [NodeModelOutPortsNames(typeof(DimensionTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(DimensionTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeName(\"Dimension Types\")] [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(DimensionTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelDescription(typeof(DimensionTypesDropDown), typeof(DropDownRevitNodesResources))] public class DimensionTypesDropDown : ElementTypesDropDownBase<DimensionType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors DimensionTypesDropDown() Declaration public DimensionTypesDropDown() DimensionTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public DimensionTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties Filter Function to be used as a filter to be applied to collected elements. Leave null to collect all elements. Declaration protected override Func<DimensionType, bool>? Filter { get; } Property Value Type Description Func<DimensionType, bool> Overrides ElementTypesDropDownBase<DimensionType>.Filter ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<DimensionType>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementTypesDropDownBase<DimensionType>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.ElevationViewFamilyTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.ElevationViewFamilyTypesDropDown.html",
    "title": "Class ElevationViewFamilyTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class ElevationViewFamilyTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<ViewFamilyType> ElementTypesDropDownBase<ViewFamilyType> ElevationViewFamilyTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementTypesDropDownBase<ViewFamilyType>.CollectedElements ElementsDropDownBase<ViewFamilyType>.LoadDropDownItems() ElementsDropDownBase<ViewFamilyType>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<ViewFamilyType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelDescription(typeof(ElevationViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(ElevationViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(ElevationViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeName(\"Elevation ViewFamilyTypes\")] [NodeModelOutPortsNames(typeof(ElevationViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(ElevationViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeCategory(\"onBIM Nodes.Revit.Selection\")] public class ElevationViewFamilyTypesDropDown : ElementTypesDropDownBase<ViewFamilyType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ElevationViewFamilyTypesDropDown() Declaration public ElevationViewFamilyTypesDropDown() ElevationViewFamilyTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public ElevationViewFamilyTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties Filter Function to be used as a filter to be applied to collected elements. Leave null to collect all elements. Declaration protected override Func<ViewFamilyType, bool> Filter { get; } Property Value Type Description Func<ViewFamilyType, bool> Overrides ElementTypesDropDownBase<ViewFamilyType>.Filter ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<ViewFamilyType>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementTypesDropDownBase<ViewFamilyType>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.FilledRegionTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.FilledRegionTypesDropDown.html",
    "title": "Class FilledRegionTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class FilledRegionTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<FilledRegionType> ElementTypesDropDownBase<FilledRegionType> FilledRegionTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementTypesDropDownBase<FilledRegionType>.CollectedElements ElementsDropDownBase<FilledRegionType>.LoadDropDownItems() ElementsDropDownBase<FilledRegionType>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<FilledRegionType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsDescriptions(typeof(FilledRegionTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [NodeName(\"Filled Region Types\")] [NodeModelDescription(typeof(FilledRegionTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(FilledRegionTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(FilledRegionTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(FilledRegionTypesDropDown), typeof(DropDownRevitNodesResources))] [IsDesignScriptCompatible] public class FilledRegionTypesDropDown : ElementTypesDropDownBase<FilledRegionType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors FilledRegionTypesDropDown() Declaration public FilledRegionTypesDropDown() FilledRegionTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public FilledRegionTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties Filter Function to be used as a filter to be applied to collected elements. Leave null to collect all elements. Declaration protected override Func<FilledRegionType, bool>? Filter { get; } Property Value Type Description Func<FilledRegionType, bool> Overrides ElementTypesDropDownBase<FilledRegionType>.Filter ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<FilledRegionType>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementTypesDropDownBase<FilledRegionType>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.GridTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.GridTypesDropDown.html",
    "title": "Class GridTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class GridTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<GridType> ElementTypesDropDownBase<GridType> GridTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementTypesDropDownBase<GridType>.CollectedElements ElementsDropDownBase<GridType>.LoadDropDownItems() ElementsDropDownBase<GridType>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<GridType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(GridTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(GridTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(GridTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelDescription(typeof(GridTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeName(\"Grid Types\")] [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [NodeModelOutPortsDescriptions(typeof(GridTypesDropDown), typeof(DropDownRevitNodesResources))] public class GridTypesDropDown : ElementTypesDropDownBase<GridType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors GridTypesDropDown() Declaration public GridTypesDropDown() GridTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public GridTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties Filter Function to be used as a filter to be applied to collected elements. Leave null to collect all elements. Declaration protected override Func<GridType, bool>? Filter { get; } Property Value Type Description Func<GridType, bool> Overrides ElementTypesDropDownBase<GridType>.Filter ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<GridType>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementTypesDropDownBase<GridType>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.LineStylesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.LineStylesDropDown.html",
    "title": "Class LineStylesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class LineStylesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<GraphicsStyle> LineStylesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementsDropDownBase<GraphicsStyle>.LoadDropDownItems() ElementsDropDownBase<GraphicsStyle>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<GraphicsStyle>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsNames(typeof(LineStylesDropDown), typeof(DropDownRevitNodesResources))] [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [NodeName(\"Line Styles\")] [NodeModelSearchTags(typeof(LineStylesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelDescription(typeof(LineStylesDropDown), typeof(DropDownRevitNodesResources))] [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(LineStylesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(LineStylesDropDown), typeof(DropDownRevitNodesResources))] public class LineStylesDropDown : ElementsDropDownBase<GraphicsStyle>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors LineStylesDropDown() Declaration public LineStylesDropDown() LineStylesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public LineStylesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties CollectedElements Elements to show in the drop down menu Declaration protected override List<GraphicsStyle> CollectedElements { get; } Property Value Type Description List<GraphicsStyle> Overrides ElementsDropDownBase<GraphicsStyle>.CollectedElements ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<GraphicsStyle>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementsDropDownBase<GraphicsStyle>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.SectionViewFamilyTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.SectionViewFamilyTypesDropDown.html",
    "title": "Class SectionViewFamilyTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class SectionViewFamilyTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<ViewFamilyType> ElementTypesDropDownBase<ViewFamilyType> SectionViewFamilyTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementTypesDropDownBase<ViewFamilyType>.CollectedElements ElementsDropDownBase<ViewFamilyType>.LoadDropDownItems() ElementsDropDownBase<ViewFamilyType>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<ViewFamilyType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [NodeModelDescription(typeof(SectionViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(SectionViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(SectionViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(SectionViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsDescriptions(typeof(SectionViewFamilyTypesDropDown), typeof(DropDownRevitNodesResources))] [IsDesignScriptCompatible] [NodeName(\"Section ViewFamilyTypes\")] public class SectionViewFamilyTypesDropDown : ElementTypesDropDownBase<ViewFamilyType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors SectionViewFamilyTypesDropDown() Declaration public SectionViewFamilyTypesDropDown() SectionViewFamilyTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public SectionViewFamilyTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties Filter Function to be used as a filter to be applied to collected elements. Leave null to collect all elements. Declaration protected override Func<ViewFamilyType, bool> Filter { get; } Property Value Type Description Func<ViewFamilyType, bool> Overrides ElementTypesDropDownBase<ViewFamilyType>.Filter ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<ViewFamilyType>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementTypesDropDownBase<ViewFamilyType>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.TagTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.TagTypesDropDown.html",
    "title": "Class TagTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class TagTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<FamilySymbol> TagTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementsDropDownBase<FamilySymbol>.LoadDropDownItems() ElementsDropDownBase<FamilySymbol>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<FamilySymbol>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(TagTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(TagTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(TagTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelDescription(typeof(TagTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(TagTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeName(\"Tag Types\")] public class TagTypesDropDown : ElementsDropDownBase<FamilySymbol>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors TagTypesDropDown() Declaration public TagTypesDropDown() TagTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public TagTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties CollectedElements Elements to show in the drop down menu Declaration protected override List<FamilySymbol> CollectedElements { get; } Property Value Type Description List<FamilySymbol> Overrides ElementsDropDownBase<FamilySymbol>.CollectedElements ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<FamilySymbol>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementsDropDownBase<FamilySymbol>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.TextNoteTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.TextNoteTypesDropDown.html",
    "title": "Class TextNoteTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class TextNoteTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<TextNoteType> ElementTypesDropDownBase<TextNoteType> TextNoteTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementTypesDropDownBase<TextNoteType>.CollectedElements ElementsDropDownBase<TextNoteType>.LoadDropDownItems() ElementsDropDownBase<TextNoteType>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<TextNoteType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [NodeName(\"TextNote Types\")] [NodeModelDescription(typeof(TextNoteTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(TextNoteTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(TextNoteTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(TextNoteTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsDescriptions(typeof(TextNoteTypesDropDown), typeof(DropDownRevitNodesResources))] [IsDesignScriptCompatible] public class TextNoteTypesDropDown : ElementTypesDropDownBase<TextNoteType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors TextNoteTypesDropDown() Declaration public TextNoteTypesDropDown() TextNoteTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public TextNoteTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties Filter Function to be used as a filter to be applied to collected elements. Leave null to collect all elements. Declaration protected override Func<TextNoteType, bool>? Filter { get; } Property Value Type Description Func<TextNoteType, bool> Overrides ElementTypesDropDownBase<TextNoteType>.Filter ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<TextNoteType>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementTypesDropDownBase<TextNoteType>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.ViewPortTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.ViewPortTypesDropDown.html",
    "title": "Class ViewPortTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class ViewPortTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<ElementType> ViewPortTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementsDropDownBase<ElementType>.LoadDropDownItems() ElementsDropDownBase<ElementType>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<ElementType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsNames(typeof(ViewPortTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(ViewPortTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelDescription(typeof(ViewPortTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeName(\"Viewport Types\")] [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [NodeModelOutPortsDescriptions(typeof(ViewPortTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(ViewPortTypesDropDown), typeof(DropDownRevitNodesResources))] [IsDesignScriptCompatible] public class ViewPortTypesDropDown : ElementsDropDownBase<ElementType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ViewPortTypesDropDown() Declaration public ViewPortTypesDropDown() ViewPortTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public ViewPortTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties CollectedElements Elements to show in the drop down menu Declaration protected override List<ElementType> CollectedElements { get; } Property Value Type Description List<ElementType> Overrides ElementsDropDownBase<ElementType>.CollectedElements ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<ElementType>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementsDropDownBase<ElementType>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.ViewTemplatesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.ViewTemplatesDropDown.html",
    "title": "Class ViewTemplatesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class ViewTemplatesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase ElementsDropDownBase<View> ViewTemplatesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members ElementsDropDownBase<View>.LoadDropDownItems() ElementsDropDownBase<View>.BuildOutputAst(List<AssociativeNode>) ElementsDropDownBase<View>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelSearchTags(typeof(ViewTemplatesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(ViewTemplatesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsDescriptions(typeof(ViewTemplatesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelDescription(typeof(ViewTemplatesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsTypes(typeof(ViewTemplatesDropDown), typeof(DropDownRevitNodesResources))] [NodeName(\"View Templates\")] [IsDesignScriptCompatible] [NodeCategory(\"onBIM Nodes.Revit.Selection\")] public class ViewTemplatesDropDown : ElementsDropDownBase<View>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ViewTemplatesDropDown() Declaration public ViewTemplatesDropDown() ViewTemplatesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public ViewTemplatesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties CollectedElements Elements to show in the drop down menu Declaration protected override List<View> CollectedElements { get; } Property Value Type Description List<View> Overrides ElementsDropDownBase<View>.CollectedElements ItemNameOverrider Item name overrider. Leave null to show element name as it is. Declaration protected override IDropDownItemNameOverrider? ItemNameOverrider { get; } Property Value Type Description IDropDownItemNameOverrider Overrides ElementsDropDownBase<View>.ItemNameOverrider NoItemsPrompt No items prompt in case collector returns empty list Declaration protected override string NoItemsPrompt { get; } Property Value Type Description string Overrides ElementsDropDownBase<View>.NoItemsPrompt Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.ViewTypesDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.ViewTypesDropDown.html",
    "title": "Class ViewTypesDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class ViewTypesDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase EnumDropDownBase<ViewType> ViewTypesDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members EnumDropDownBase<ViewType>.PopulateItemsCore(string) EnumDropDownBase<ViewType>.LoadDropDownItems() EnumDropDownBase<ViewType>.BuildOutputAst(List<AssociativeNode>) EnumDropDownBase<ViewType>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(ViewTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelOutPortsNames(typeof(ViewTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelSearchTags(typeof(ViewTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeModelDescription(typeof(ViewTypesDropDown), typeof(DropDownRevitNodesResources))] [NodeName(\"ViewTypes\")] [NodeCategory(\"onBIM Nodes.Revit.Selection\")] [NodeModelOutPortsTypes(typeof(ViewTypesDropDown), typeof(DropDownRevitNodesResources))] public class ViewTypesDropDown : EnumDropDownBase<ViewType>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ViewTypesDropDown() Declaration public ViewTypesDropDown() ViewTypesDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public ViewTypesDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes.html",
    "title": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownRevitNodes Classes BuiltInCategoryDropDown BuiltInParameterDropDown DimensionTypesDropDown ElevationViewFamilyTypesDropDown FilledRegionTypesDropDown GridTypesDropDown LineStylesDropDown SectionViewFamilyTypesDropDown TagTypesDropDown TextNoteTypesDropDown ViewPortTypesDropDown ViewTemplatesDropDown ViewTypesDropDown"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes.BasicColorsDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes.BasicColorsDropDown.html",
    "title": "Class BasicColorsDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class BasicColorsDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase BasicColorsDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.PopulateItemsCore(string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsDescriptions(typeof(BasicColorsDropDown), typeof(DropDownSelectionNodesResources))] [NodeCategory(\"onBIM Nodes.Selection\")] [NodeName(\"Basic Colors\")] [NodeModelDescription(typeof(BasicColorsDropDown), typeof(DropDownSelectionNodesResources))] [NodeModelSearchTags(typeof(BasicColorsDropDown), typeof(DropDownSelectionNodesResources))] [NodeModelOutPortsNames(typeof(BasicColorsDropDown), typeof(DropDownSelectionNodesResources))] [NodeModelOutPortsTypes(typeof(BasicColorsDropDown), typeof(DropDownSelectionNodesResources))] [IsDesignScriptCompatible] public class BasicColorsDropDown : NodeModelDropDownBase, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors BasicColorsDropDown() Constructor of Basic Colors drop down NodeModel used by Dynamo UI. Declaration public BasicColorsDropDown() BasicColorsDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructor of ElementType drop down NodeModel used to create node in .dyn file which is in json format. Declaration [JsonConstructor] public BasicColorsDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts Obtained automatically by Dynamo Engine. No need to set in child. IEnumerable<PortModel> outPorts Obtained automatically by Dynamo Engine. No need to set in child. Methods BuildOutputAst(List<AssociativeNode>) Assigns the selected value to the output ports Declaration public override IEnumerable<AssociativeNode> BuildOutputAst(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Returns Type Description IEnumerable<AssociativeNode> Overrides NodeModel.BuildOutputAst(List<AssociativeNode>) BuildOutputNode() Builds and returns the output node for the drop-down node model. Declaration protected override AssociativeNode BuildOutputNode() Returns Type Description AssociativeNode The output node. Overrides NodeModelDropDownBase.BuildOutputNode() LoadDropDownItems() Override this method in child classes to load drop down items Declaration protected override void LoadDropDownItems() Overrides NodeModelDropDownBase.LoadDropDownItems() Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes.SelectionMethodDropDown.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes.SelectionMethodDropDown.html",
    "title": "Class SelectionMethodDropDown | DynamoForRevitUtils - Docs",
    "summary": "Class SelectionMethodDropDown Inheritance object NotificationObject ModelBase NodeModel DSDropDownBase NodeModelDropDownBase EnumDropDownBase<SelectionMethod> SelectionMethodDropDown Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members EnumDropDownBase<SelectionMethod>.PopulateItemsCore(string) EnumDropDownBase<SelectionMethod>.LoadDropDownItems() EnumDropDownBase<SelectionMethod>.BuildOutputAst(List<AssociativeNode>) EnumDropDownBase<SelectionMethod>.BuildOutputNode() NodeModelDropDownBase.CanBuildOutputAst(string, string) NodeModelDropDownBase.GetOutputName(Type, Type) DSDropDownBase.SerializeCore(XmlElement, SaveContext) DSDropDownBase.DeserializeCore(XmlElement, SaveContext) DSDropDownBase.UpdateValueCore(UpdateValueParams) DSDropDownBase.ParseSelectedIndex(string, IList<DynamoDropDownItem>) DSDropDownBase.ParseSelectedIndexImpl(string, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndex(int, IList<DynamoDropDownItem>) DSDropDownBase.SaveSelectedIndexImpl(int, IList<DynamoDropDownItem>) DSDropDownBase.XmlEscape(string) DSDropDownBase.XmlUnescape(string) DSDropDownBase.GetSelectedStringFromItem(DynamoDropDownItem) DSDropDownBase.PopulateItems() DSDropDownBase.Items DSDropDownBase.InputData DSDropDownBase.SelectedIndex DSDropDownBase.SelectedString NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.OnSave() NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsNames(typeof(SelectionMethodDropDown), typeof(DropDownSelectionNodesResources))] [NodeName(\"SelectionMethod\")] [NodeCategory(\"onBIM Nodes.Selection\")] [NodeModelOutPortsTypes(typeof(SelectionMethodDropDown), typeof(DropDownSelectionNodesResources))] [NodeModelOutPortsDescriptions(typeof(SelectionMethodDropDown), typeof(DropDownSelectionNodesResources))] [IsDesignScriptCompatible] [NodeModelSearchTags(typeof(SelectionMethodDropDown), typeof(DropDownSelectionNodesResources))] [NodeModelDescription(typeof(SelectionMethodDropDown), typeof(DropDownSelectionNodesResources))] public class SelectionMethodDropDown : EnumDropDownBase<SelectionMethod>, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors SelectionMethodDropDown() Declaration public SelectionMethodDropDown() SelectionMethodDropDown(IEnumerable<PortModel>, IEnumerable<PortModel>) Declaration [JsonConstructor] public SelectionMethodDropDown(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes.html": {
    "href": "api/DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes.html",
    "title": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.DropDownNodes.DropDownSelectionNodes Classes BasicColorsDropDown SelectionMethodDropDown"
  },
  "api/DynamoForRevitNodeModels.Enumerations.NodeModelMetadataType.html": {
    "href": "api/DynamoForRevitNodeModels.Enumerations.NodeModelMetadataType.html",
    "title": "Enum NodeModelMetadataType | DynamoForRevitUtils - Docs",
    "summary": "Enum NodeModelMetadataType Enum that defines the attribute resource type Used for searching resources in resx files that contains attributes values for NodeModels Namespace: DynamoForRevitNodeModels.Enumerations Assembly: DynamoForRevitNodeModels.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum NodeModelMetadataType Fields Name Description InPortDescription Node input port description attribute InPortName Node input port name attribute InPortType Node input port type attribute NodeCategory Node category attribute NodeDescription Node description attribute NodeName Node name attribute NodeSearchTags Node search tags attribute OutPortDescription Node output port description attribute OutPortName Node output port name attribute OutPortType"
  },
  "api/DynamoForRevitNodeModels.Enumerations.html": {
    "href": "api/DynamoForRevitNodeModels.Enumerations.html",
    "title": "Namespace DynamoForRevitNodeModels.Enumerations | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.Enumerations Enums NodeModelMetadataType Enum that defines the attribute resource type Used for searching resources in resx files that contains attributes values for NodeModels"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.BoundingBoxViewer.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.BoundingBoxViewer.html",
    "title": "Class BoundingBoxViewer | DynamoForRevitUtils - Docs",
    "summary": "Class BoundingBoxViewer Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources BoundingBoxViewer Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelInPortsDescriptions(typeof(BoundingBoxViewer), typeof(AbstractGeometryNodesResources))] [NodeModelInPortsNames(typeof(BoundingBoxViewer), typeof(AbstractGeometryNodesResources))] [NodeModelSearchTags(typeof(BoundingBoxViewer), typeof(AbstractGeometryNodesResources))] [NodeModelDescription(typeof(BoundingBoxViewer), typeof(AbstractGeometryNodesResources))] [NodeName(\"BoundingBoxViewer\")] [NodeCategory(\"onBIM Nodes.Geometry.Abstract\")] [NodeModelOutPortsNames(typeof(BoundingBoxViewer), typeof(AbstractGeometryNodesResources))] [NodeModelOutPortsTypes(typeof(BoundingBoxViewer), typeof(AbstractGeometryNodesResources))] [NodeModelOutPortsDescriptions(typeof(BoundingBoxViewer), typeof(AbstractGeometryNodesResources))] [NodeModelInPortsTypes(typeof(BoundingBoxViewer), typeof(AbstractGeometryNodesResources))] [IsDesignScriptCompatible] public class BoundingBoxViewer : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors BoundingBoxViewer() Node Constructor to Dynamo Engine Declaration public BoundingBoxViewer() BoundingBoxViewer(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public BoundingBoxViewer(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.BuiltInCategoryToDynamoCategory.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.BuiltInCategoryToDynamoCategory.html",
    "title": "Class BuiltInCategoryToDynamoCategory | DynamoForRevitUtils - Docs",
    "summary": "Class BuiltInCategoryToDynamoCategory Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources BuiltInCategoryToDynamoCategory Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(BuiltInCategoryToDynamoCategory), typeof(RevitNodesResources))] [NodeModelOutPortsNames(typeof(BuiltInCategoryToDynamoCategory), typeof(RevitNodesResources))] [NodeModelOutPortsDescriptions(typeof(BuiltInCategoryToDynamoCategory), typeof(RevitNodesResources))] [NodeModelInPortsDescriptions(typeof(BuiltInCategoryToDynamoCategory), typeof(RevitNodesResources))] [NodeCategory(\"onBIM Nodes.Revit\")] [NodeModelInPortsTypes(typeof(BuiltInCategoryToDynamoCategory), typeof(RevitNodesResources))] [NodeModelDescription(typeof(BuiltInCategoryToDynamoCategory), typeof(RevitNodesResources))] [NodeModelSearchTags(typeof(BuiltInCategoryToDynamoCategory), typeof(RevitNodesResources))] [NodeName(\"BuiltInCategory.ToDynamoCategory\")] [NodeModelInPortsNames(typeof(BuiltInCategoryToDynamoCategory), typeof(RevitNodesResources))] public class BuiltInCategoryToDynamoCategory : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors BuiltInCategoryToDynamoCategory() Node Constructor to Dynamo Engine Declaration public BuiltInCategoryToDynamoCategory() BuiltInCategoryToDynamoCategory(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public BuiltInCategoryToDynamoCategory(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.BuiltInToUIName.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.BuiltInToUIName.html",
    "title": "Class BuiltInToUIName | DynamoForRevitUtils - Docs",
    "summary": "Class BuiltInToUIName Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources BuiltInToUIName Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsDescriptions(typeof(BuiltInToUIName), typeof(RevitNodesResources))] [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(BuiltInToUIName), typeof(RevitNodesResources))] [NodeModelOutPortsNames(typeof(BuiltInToUIName), typeof(RevitNodesResources))] [NodeModelInPortsDescriptions(typeof(BuiltInToUIName), typeof(RevitNodesResources))] [NodeModelInPortsNames(typeof(BuiltInToUIName), typeof(RevitNodesResources))] [NodeModelSearchTags(typeof(BuiltInToUIName), typeof(RevitNodesResources))] [NodeModelDescription(typeof(BuiltInToUIName), typeof(RevitNodesResources))] [NodeName(\"BuiltInEntity.GetUIName\")] [NodeCategory(\"onBIM Nodes.Revit\")] [NodeModelInPortsTypes(typeof(BuiltInToUIName), typeof(RevitNodesResources))] public class BuiltInToUIName : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors BuiltInToUIName() Node Constructor to Dynamo Engine Declaration public BuiltInToUIName() BuiltInToUIName(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public BuiltInToUIName(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.CSVRead.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.CSVRead.html",
    "title": "Class CSVRead | DynamoForRevitUtils - Docs",
    "summary": "Class CSVRead Node Model to read CSV file Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources CSVRead Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(CSVRead), typeof(CSVNodesResources))] [NodeModelOutPortsTypes(typeof(CSVRead), typeof(CSVNodesResources))] [NodeModelOutPortsNames(typeof(CSVRead), typeof(CSVNodesResources))] [NodeModelInPortsDescriptions(typeof(CSVRead), typeof(CSVNodesResources))] [NodeModelInPortsTypes(typeof(CSVRead), typeof(CSVNodesResources))] [NodeModelInPortsNames(typeof(CSVRead), typeof(CSVNodesResources))] [NodeModelDescription(typeof(CSVRead), typeof(CSVNodesResources))] [NodeName(\"CSV.Read\")] [NodeCategory(\"onBIM Nodes\")] [NodeModelSearchTags(typeof(CSVRead), typeof(CSVNodesResources))] public class CSVRead : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors CSVRead() Node Constructor to Dynamo Engine Declaration public CSVRead() CSVRead(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public CSVRead(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.CSVWrite.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.CSVWrite.html",
    "title": "Class CSVWrite | DynamoForRevitUtils - Docs",
    "summary": "Class CSVWrite Node Model to write CSV file Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources CSVWrite Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelInPortsTypes(typeof(CSVWrite), typeof(CSVNodesResources))] [NodeModelOutPortsDescriptions(typeof(CSVWrite), typeof(CSVNodesResources))] [NodeModelOutPortsTypes(typeof(CSVWrite), typeof(CSVNodesResources))] [NodeModelOutPortsNames(typeof(CSVWrite), typeof(CSVNodesResources))] [NodeModelInPortsDescriptions(typeof(CSVWrite), typeof(CSVNodesResources))] [NodeModelInPortsNames(typeof(CSVWrite), typeof(CSVNodesResources))] [IsDesignScriptCompatible] [NodeModelDescription(typeof(CSVWrite), typeof(CSVNodesResources))] [NodeName(\"CSV.Write\")] [NodeCategory(\"onBIM Nodes\")] [NodeModelSearchTags(typeof(CSVWrite), typeof(CSVNodesResources))] public class CSVWrite : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors CSVWrite() Node Constructor to Dynamo Engine Declaration public CSVWrite() CSVWrite(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public CSVWrite(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.CoordinateSystemViewer.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.CoordinateSystemViewer.html",
    "title": "Class CoordinateSystemViewer | DynamoForRevitUtils - Docs",
    "summary": "Class CoordinateSystemViewer Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources CoordinateSystemViewer Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelSearchTags(typeof(CoordinateSystemViewer), typeof(AbstractGeometryNodesResources))] [NodeModelInPortsNames(typeof(CoordinateSystemViewer), typeof(AbstractGeometryNodesResources))] [NodeModelInPortsDescriptions(typeof(CoordinateSystemViewer), typeof(AbstractGeometryNodesResources))] [NodeModelInPortsTypes(typeof(CoordinateSystemViewer), typeof(AbstractGeometryNodesResources))] [NodeModelOutPortsNames(typeof(CoordinateSystemViewer), typeof(AbstractGeometryNodesResources))] [NodeModelOutPortsDescriptions(typeof(CoordinateSystemViewer), typeof(AbstractGeometryNodesResources))] [IsDesignScriptCompatible] [NodeModelDescription(typeof(CoordinateSystemViewer), typeof(AbstractGeometryNodesResources))] [NodeName(\"CoordinateSystemViewer\")] [NodeModelOutPortsTypes(typeof(CoordinateSystemViewer), typeof(AbstractGeometryNodesResources))] [NodeCategory(\"onBIM Nodes.Geometry.Abstract\")] public class CoordinateSystemViewer : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors CoordinateSystemViewer() Node Constructor to Dynamo Engine Declaration public CoordinateSystemViewer() CoordinateSystemViewer(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public CoordinateSystemViewer(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterCreateByBuiltInParameter.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterCreateByBuiltInParameter.html",
    "title": "Class ElementParameterCreateByBuiltInParameter | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterCreateByBuiltInParameter Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources ElementParameterCreateByBuiltInParameter Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(ElementParameterCreateByBuiltInParameter), typeof(ElementParameterNodesResources))] [NodeModelOutPortsDescriptions(typeof(ElementParameterCreateByBuiltInParameter), typeof(ElementParameterNodesResources))] [NodeModelOutPortsNames(typeof(ElementParameterCreateByBuiltInParameter), typeof(ElementParameterNodesResources))] [NodeModelInPortsTypes(typeof(ElementParameterCreateByBuiltInParameter), typeof(ElementParameterNodesResources))] [NodeModelInPortsDescriptions(typeof(ElementParameterCreateByBuiltInParameter), typeof(ElementParameterNodesResources))] [NodeModelInPortsNames(typeof(ElementParameterCreateByBuiltInParameter), typeof(ElementParameterNodesResources))] [NodeModelSearchTags(typeof(ElementParameterCreateByBuiltInParameter), typeof(ElementParameterNodesResources))] [NodeModelDescription(typeof(ElementParameterCreateByBuiltInParameter), typeof(ElementParameterNodesResources))] [NodeName(\"ElementParameter.CreateByBuiltInParameter\")] [NodeCategory(\"onBIM Nodes\")] public class ElementParameterCreateByBuiltInParameter : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ElementParameterCreateByBuiltInParameter() Node Constructor to Dynamo Engine Declaration public ElementParameterCreateByBuiltInParameter() ElementParameterCreateByBuiltInParameter(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected ElementParameterCreateByBuiltInParameter(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterCreateByName.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterCreateByName.html",
    "title": "Class ElementParameterCreateByName | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterCreateByName Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources ElementParameterCreateByName Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(ElementParameterCreateByName), typeof(ElementParameterNodesResources))] [NodeModelOutPortsDescriptions(typeof(ElementParameterCreateByName), typeof(ElementParameterNodesResources))] [NodeModelOutPortsNames(typeof(ElementParameterCreateByName), typeof(ElementParameterNodesResources))] [NodeModelInPortsTypes(typeof(ElementParameterCreateByName), typeof(ElementParameterNodesResources))] [NodeModelInPortsDescriptions(typeof(ElementParameterCreateByName), typeof(ElementParameterNodesResources))] [NodeModelInPortsNames(typeof(ElementParameterCreateByName), typeof(ElementParameterNodesResources))] [NodeModelSearchTags(typeof(ElementParameterCreateByName), typeof(ElementParameterNodesResources))] [NodeModelDescription(typeof(ElementParameterCreateByName), typeof(ElementParameterNodesResources))] [NodeName(\"ElementParameter.CreateByName\")] [NodeCategory(\"onBIM Nodes\")] public class ElementParameterCreateByName : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ElementParameterCreateByName() Node Constructor to Dynamo Engine Declaration public ElementParameterCreateByName() ElementParameterCreateByName(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected ElementParameterCreateByName(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterDataType.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterDataType.html",
    "title": "Class ElementParameterDataType | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterDataType Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources ElementParameterDataType Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(ElementParameterDataType), typeof(ElementParameterNodesResources))] [NodeModelOutPortsDescriptions(typeof(ElementParameterDataType), typeof(ElementParameterNodesResources))] [NodeModelOutPortsNames(typeof(ElementParameterDataType), typeof(ElementParameterNodesResources))] [NodeModelInPortsTypes(typeof(ElementParameterDataType), typeof(ElementParameterNodesResources))] [NodeModelInPortsDescriptions(typeof(ElementParameterDataType), typeof(ElementParameterNodesResources))] [NodeCategory(\"onBIM Nodes\")] [NodeModelSearchTags(typeof(ElementParameterDataType), typeof(ElementParameterNodesResources))] [NodeModelInPortsNames(typeof(ElementParameterDataType), typeof(ElementParameterNodesResources))] [NodeName(\"ElementParameter.DataType\")] [NodeModelDescription(typeof(ElementParameterDataType), typeof(ElementParameterNodesResources))] public class ElementParameterDataType : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ElementParameterDataType() Node Constructor to Dynamo Engine Declaration public ElementParameterDataType() ElementParameterDataType(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected ElementParameterDataType(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterKind.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterKind.html",
    "title": "Class ElementParameterKind | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterKind Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources ElementParameterKind Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(ElementParameterKind), typeof(ElementParameterNodesResources))] [NodeModelOutPortsNames(typeof(ElementParameterKind), typeof(ElementParameterNodesResources))] [NodeModelInPortsTypes(typeof(ElementParameterKind), typeof(ElementParameterNodesResources))] [NodeModelInPortsDescriptions(typeof(ElementParameterKind), typeof(ElementParameterNodesResources))] [NodeModelOutPortsTypes(typeof(ElementParameterKind), typeof(ElementParameterNodesResources))] [NodeModelSearchTags(typeof(ElementParameterKind), typeof(ElementParameterNodesResources))] [NodeModelDescription(typeof(ElementParameterKind), typeof(ElementParameterNodesResources))] [NodeName(\"ElementParameter.Kind\")] [NodeCategory(\"onBIM Nodes\")] [NodeModelInPortsNames(typeof(ElementParameterKind), typeof(ElementParameterNodesResources))] public class ElementParameterKind : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ElementParameterKind() Node Constructor to Dynamo Engine Declaration public ElementParameterKind() ElementParameterKind(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected ElementParameterKind(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterName.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterName.html",
    "title": "Class ElementParameterName | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterName Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources ElementParameterName Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(ElementParameterName), typeof(ElementParameterNodesResources))] [NodeModelOutPortsDescriptions(typeof(ElementParameterName), typeof(ElementParameterNodesResources))] [NodeModelOutPortsNames(typeof(ElementParameterName), typeof(ElementParameterNodesResources))] [NodeModelInPortsTypes(typeof(ElementParameterName), typeof(ElementParameterNodesResources))] [NodeModelInPortsDescriptions(typeof(ElementParameterName), typeof(ElementParameterNodesResources))] [NodeModelSearchTags(typeof(ElementParameterName), typeof(ElementParameterNodesResources))] [NodeModelDescription(typeof(ElementParameterName), typeof(ElementParameterNodesResources))] [NodeCategory(\"onBIM Nodes\")] [NodeModelInPortsNames(typeof(ElementParameterName), typeof(ElementParameterNodesResources))] [NodeName(\"ElementParameter.Name\")] public class ElementParameterName : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ElementParameterName() Node Constructor to Dynamo Engine Declaration public ElementParameterName() ElementParameterName(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected ElementParameterName(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterValue.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.ElementParameterValue.html",
    "title": "Class ElementParameterValue | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterValue Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources ElementParameterValue Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelInPortsDescriptions(typeof(ElementParameterValue), typeof(ElementParameterNodesResources))] [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(ElementParameterValue), typeof(ElementParameterNodesResources))] [NodeModelOutPortsDescriptions(typeof(ElementParameterValue), typeof(ElementParameterNodesResources))] [NodeModelOutPortsNames(typeof(ElementParameterValue), typeof(ElementParameterNodesResources))] [NodeModelInPortsTypes(typeof(ElementParameterValue), typeof(ElementParameterNodesResources))] [NodeModelInPortsNames(typeof(ElementParameterValue), typeof(ElementParameterNodesResources))] [NodeModelDescription(typeof(ElementParameterValue), typeof(ElementParameterNodesResources))] [NodeName(\"ElementParameter.Value\")] [NodeCategory(\"onBIM Nodes\")] [NodeModelSearchTags(typeof(ElementParameterValue), typeof(ElementParameterNodesResources))] public class ElementParameterValue : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ElementParameterValue() Node Constructor to Dynamo Engine Declaration public ElementParameterValue() ElementParameterValue(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected ElementParameterValue(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.GetSelectionResultsData.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.GetSelectionResultsData.html",
    "title": "Class GetSelectionResultsData | DynamoForRevitUtils - Docs",
    "summary": "Class GetSelectionResultsData Node model for getting selection results data. Inheritance object NotificationObject ModelBase NodeModel MultiReturnNodeModelBase GetSelectionResultsData Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsDescriptions(typeof(GetSelectionResultsData), typeof(SelectionNodesResources))] [IsDesignScriptCompatible] [NodeCategory(\"onBIM Nodes\")] [NodeName(\"Selection.GetResultsData\")] [NodeModelDescription(typeof(GetSelectionResultsData), typeof(SelectionNodesResources))] [NodeModelSearchTags(typeof(GetSelectionResultsData), typeof(SelectionNodesResources))] [NodeModelInPortsNames(typeof(GetSelectionResultsData), typeof(SelectionNodesResources))] [NodeModelInPortsDescriptions(typeof(GetSelectionResultsData), typeof(SelectionNodesResources))] [NodeModelInPortsTypes(typeof(GetSelectionResultsData), typeof(SelectionNodesResources))] [NodeModelOutPortsTypes(typeof(GetSelectionResultsData), typeof(SelectionNodesResources))] [NodeModelOutPortsNames(typeof(GetSelectionResultsData), typeof(SelectionNodesResources))] public class GetSelectionResultsData : MultiReturnNodeModelBase, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors GetSelectionResultsData() Node Constructor to Dynamo Engine Declaration public GetSelectionResultsData() GetSelectionResultsData(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public GetSelectionResultsData(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides MultiReturnNodeModelBase.InputPortsData NodeFunctions Functions used to node execution Declaration protected override List<Delegate> NodeFunctions { get; } Property Value Type Description List<Delegate> Overrides MultiReturnNodeModelBase.NodeFunctions NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides MultiReturnNodeModelBase.NodeModelType OutPortsData Data to create Output ports Declaration protected override List<PortData> OutPortsData { get; } Property Value Type Description List<PortData> Overrides MultiReturnNodeModelBase.OutPortsData ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides MultiReturnNodeModelBase.ResourceType Methods BuildOutputAst(List<AssociativeNode>) Build results to output ports Declaration public override IEnumerable<AssociativeNode> BuildOutputAst(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Returns Type Description IEnumerable<AssociativeNode> Overrides MultiReturnNodeModelBase.BuildOutputAst(List<AssociativeNode>) Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.MultiReturnNodeModelBase.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.MultiReturnNodeModelBase.html",
    "title": "Class MultiReturnNodeModelBase | DynamoForRevitUtils - Docs",
    "summary": "Class MultiReturnNodeModelBase Base class for DynamoForRevit NodeModels that are functions like f(x1, x2, ..., xN) -> y1, y2, ..., yM The functions assigment to each output port must be implemented on child classes by overriding BuildOutputAst method Inheritance object NotificationObject ModelBase NodeModel MultiReturnNodeModelBase GetSelectionResultsData Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax public abstract class MultiReturnNodeModelBase : NodeModel, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors MultiReturnNodeModelBase() Node Constructor to Dynamo Engine Declaration protected MultiReturnNodeModelBase() MultiReturnNodeModelBase(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected MultiReturnNodeModelBase(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected abstract List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> NodeFunctions Functions used to node execution Declaration protected abstract List<Delegate> NodeFunctions { get; } Property Value Type Description List<Delegate> NodeModelType Type that represents the Node Model Declaration protected abstract Type NodeModelType { get; } Property Value Type Description Type OutPortsData Data to create Output ports Declaration protected abstract List<PortData> OutPortsData { get; } Property Value Type Description List<PortData> ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected abstract Type ResourceType { get; } Property Value Type Description Type Methods BuildOutputAst(List<AssociativeNode>) Build results to output ports Declaration public override abstract IEnumerable<AssociativeNode> BuildOutputAst(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Returns Type Description IEnumerable<AssociativeNode> Overrides NodeModel.BuildOutputAst(List<AssociativeNode>) Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.SelectionBySelectionMethodAndCategories.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.SelectionBySelectionMethodAndCategories.html",
    "title": "Class SelectionBySelectionMethodAndCategories | DynamoForRevitUtils - Docs",
    "summary": "Class SelectionBySelectionMethodAndCategories Node model for Selection.ByMethodAndCategories node Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources SelectionBySelectionMethodAndCategories Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(SelectionBySelectionMethodAndCategories), typeof(SelectionNodesResources))] [NodeModelInPortsNames(typeof(SelectionBySelectionMethodAndCategories), typeof(SelectionNodesResources))] [NodeModelOutPortsNames(typeof(SelectionBySelectionMethodAndCategories), typeof(SelectionNodesResources))] [NodeModelInPortsTypes(typeof(SelectionBySelectionMethodAndCategories), typeof(SelectionNodesResources))] [NodeModelInPortsDescriptions(typeof(SelectionBySelectionMethodAndCategories), typeof(SelectionNodesResources))] [NodeModelSearchTags(typeof(SelectionBySelectionMethodAndCategories), typeof(SelectionNodesResources))] [NodeModelDescription(typeof(SelectionBySelectionMethodAndCategories), typeof(SelectionNodesResources))] [NodeCategory(\"onBIM Nodes\")] [NodeModelOutPortsDescriptions(typeof(SelectionBySelectionMethodAndCategories), typeof(SelectionNodesResources))] [NodeName(\"Selection.ByMethodAndCategories\")] public class SelectionBySelectionMethodAndCategories : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors SelectionBySelectionMethodAndCategories() Node Constructor to Dynamo Engine Declaration public SelectionBySelectionMethodAndCategories() SelectionBySelectionMethodAndCategories(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public SelectionBySelectionMethodAndCategories(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.SelectionBySelectionMethodAndCategory.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.SelectionBySelectionMethodAndCategory.html",
    "title": "Class SelectionBySelectionMethodAndCategory | DynamoForRevitUtils - Docs",
    "summary": "Class SelectionBySelectionMethodAndCategory Node model for Selection.ByMethod node Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources SelectionBySelectionMethodAndCategory Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelOutPortsTypes(typeof(SelectionBySelectionMethodAndCategory), typeof(SelectionNodesResources))] [NodeModelOutPortsDescriptions(typeof(SelectionBySelectionMethodAndCategory), typeof(SelectionNodesResources))] [IsDesignScriptCompatible] [NodeModelInPortsTypes(typeof(SelectionBySelectionMethodAndCategory), typeof(SelectionNodesResources))] [NodeModelInPortsDescriptions(typeof(SelectionBySelectionMethodAndCategory), typeof(SelectionNodesResources))] [NodeModelInPortsNames(typeof(SelectionBySelectionMethodAndCategory), typeof(SelectionNodesResources))] [NodeModelSearchTags(typeof(SelectionBySelectionMethodAndCategory), typeof(SelectionNodesResources))] [NodeModelDescription(typeof(SelectionBySelectionMethodAndCategory), typeof(SelectionNodesResources))] [NodeName(\"Selection.ByMethodAndCategory\")] [NodeCategory(\"onBIM Nodes\")] [NodeModelOutPortsNames(typeof(SelectionBySelectionMethodAndCategory), typeof(SelectionNodesResources))] public class SelectionBySelectionMethodAndCategory : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors SelectionBySelectionMethodAndCategory() Node Constructor to Dynamo Engine Declaration public SelectionBySelectionMethodAndCategory() SelectionBySelectionMethodAndCategory(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public SelectionBySelectionMethodAndCategory(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.StandardNodeModelBase.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.StandardNodeModelBase.html",
    "title": "Class StandardNodeModelBase | DynamoForRevitUtils - Docs",
    "summary": "Class StandardNodeModelBase Base class for DynamoForRevit NodeModels that are functions like f(x1, x2, ..., xN) -> result Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax public abstract class StandardNodeModelBase : NodeModel, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors StandardNodeModelBase() Node Constructor to Dynamo Engine Declaration protected StandardNodeModelBase() StandardNodeModelBase(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected StandardNodeModelBase(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected abstract List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> NodeFunction Function used to node execution Declaration protected abstract Delegate NodeFunction { get; } Property Value Type Description Delegate OutPortData Data to create Output ports Declaration protected abstract PortData OutPortData { get; } Property Value Type Description PortData Methods BuildOutputAst(List<AssociativeNode>) Build results to output ports Declaration public override IEnumerable<AssociativeNode> BuildOutputAst(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Returns Type Description IEnumerable<AssociativeNode> Overrides NodeModel.BuildOutputAst(List<AssociativeNode>) Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.StandardNodeModelBaseByResources.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.StandardNodeModelBaseByResources.html",
    "title": "Class StandardNodeModelBaseByResources | DynamoForRevitUtils - Docs",
    "summary": "Class StandardNodeModelBaseByResources Base class for DynamoForRevit NodeModels that are functions like f(x1, x2, ..., xN) -> result Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources BoundingBoxViewer BuiltInCategoryToDynamoCategory BuiltInToUIName CSVRead CSVWrite CoordinateSystemViewer ElementParameterCreateByBuiltInParameter ElementParameterCreateByName ElementParameterDataType ElementParameterKind ElementParameterName ElementParameterValue SelectionBySelectionMethodAndCategories SelectionBySelectionMethodAndCategory StringFilterByRegex TopographyGetSurfaces VectorViewer ViewCollector Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax public abstract class StandardNodeModelBaseByResources : StandardNodeModelBase, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Remarks This class uses resource files (resx) to build ports Constructors StandardNodeModelBaseByResources() Node Constructor to Dynamo Engine Declaration protected StandardNodeModelBaseByResources() StandardNodeModelBaseByResources(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] protected StandardNodeModelBaseByResources(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override abstract List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBase.InputPortsData NodeFunction Function used to node execution Declaration protected override abstract Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBase.NodeFunction NodeModelType Type that represents the Node Model Declaration protected abstract Type NodeModelType { get; } Property Value Type Description Type OutPortData Data to create Output ports Declaration protected override PortData OutPortData { get; } Property Value Type Description PortData Overrides StandardNodeModelBase.OutPortData ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected abstract Type ResourceType { get; } Property Value Type Description Type Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.StringFilterByRegex.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.StringFilterByRegex.html",
    "title": "Class StringFilterByRegex | DynamoForRevitUtils - Docs",
    "summary": "Class StringFilterByRegex Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources StringFilterByRegex Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelInPortsDescriptions(typeof(StringFilterByRegex), typeof(TextNodesResources))] [NodeModelInPortsNames(typeof(StringFilterByRegex), typeof(TextNodesResources))] [NodeCategory(\"onBIM Nodes\")] [NodeName(\"String.FilterByRegex\")] [NodeModelDescription(typeof(StringFilterByRegex), typeof(TextNodesResources))] [NodeModelSearchTags(typeof(StringFilterByRegex), typeof(TextNodesResources))] [NodeModelOutPortsTypes(typeof(StringFilterByRegex), typeof(TextNodesResources))] [NodeModelOutPortsDescriptions(typeof(StringFilterByRegex), typeof(TextNodesResources))] [NodeModelOutPortsNames(typeof(StringFilterByRegex), typeof(TextNodesResources))] [NodeModelInPortsTypes(typeof(StringFilterByRegex), typeof(TextNodesResources))] [IsDesignScriptCompatible] public class StringFilterByRegex : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors StringFilterByRegex() Node Constructor to Dynamo Engine Declaration public StringFilterByRegex() StringFilterByRegex(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public StringFilterByRegex(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.TopographyGetSurfaces.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.TopographyGetSurfaces.html",
    "title": "Class TopographyGetSurfaces | DynamoForRevitUtils - Docs",
    "summary": "Class TopographyGetSurfaces Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources TopographyGetSurfaces Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeModelInPortsNames(typeof(TopographyGetSurfaces), typeof(TopographyNodesResources))] [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(TopographyGetSurfaces), typeof(TopographyNodesResources))] [NodeModelOutPortsDescriptions(typeof(TopographyGetSurfaces), typeof(TopographyNodesResources))] [NodeModelOutPortsNames(typeof(TopographyGetSurfaces), typeof(TopographyNodesResources))] [NodeModelInPortsTypes(typeof(TopographyGetSurfaces), typeof(TopographyNodesResources))] [NodeModelInPortsDescriptions(typeof(TopographyGetSurfaces), typeof(TopographyNodesResources))] [NodeModelSearchTags(typeof(TopographyGetSurfaces), typeof(TopographyNodesResources))] [NodeModelDescription(typeof(TopographyGetSurfaces), typeof(TopographyNodesResources))] [NodeName(\"Topography.GetSurfaces\")] [NodeCategory(\"onBIM Nodes.Revit\")] public class TopographyGetSurfaces : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors TopographyGetSurfaces() Node Constructor to Dynamo Engine Declaration public TopographyGetSurfaces() TopographyGetSurfaces(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public TopographyGetSurfaces(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.VectorViewer.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.VectorViewer.html",
    "title": "Class VectorViewer | DynamoForRevitUtils - Docs",
    "summary": "Class VectorViewer Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources VectorViewer Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [IsDesignScriptCompatible] [NodeModelOutPortsDescriptions(typeof(VectorViewer), typeof(AbstractGeometryNodesResources))] [NodeModelOutPortsTypes(typeof(VectorViewer), typeof(AbstractGeometryNodesResources))] [NodeModelOutPortsNames(typeof(VectorViewer), typeof(AbstractGeometryNodesResources))] [NodeModelInPortsTypes(typeof(VectorViewer), typeof(AbstractGeometryNodesResources))] [NodeModelInPortsDescriptions(typeof(VectorViewer), typeof(AbstractGeometryNodesResources))] [NodeModelInPortsNames(typeof(VectorViewer), typeof(AbstractGeometryNodesResources))] [NodeModelSearchTags(typeof(VectorViewer), typeof(AbstractGeometryNodesResources))] [NodeModelDescription(typeof(VectorViewer), typeof(AbstractGeometryNodesResources))] [NodeCategory(\"onBIM Nodes.Geometry.Abstract\")] [NodeName(\"VectorViewer\")] public class VectorViewer : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors VectorViewer() Node Constructor to Dynamo Engine Declaration public VectorViewer() VectorViewer(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public VectorViewer(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.ViewCollector.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.ViewCollector.html",
    "title": "Class ViewCollector | DynamoForRevitUtils - Docs",
    "summary": "Class ViewCollector Inheritance object NotificationObject ModelBase NodeModel StandardNodeModelBase StandardNodeModelBaseByResources ViewCollector Implements INotifyPropertyChanged ISelectable ILocatable ILogSource IRenderPackageSource<NodeModel> IDisposable Inherited Members StandardNodeModelBaseByResources.OutPortData StandardNodeModelBase.BuildOutputAst(List<AssociativeNode>) NodeModel.DispatchOnUIThread(Action) NodeModel.GetDescriptionStringFromAttributes() NodeModel.GetAstIdentifierForOutputIndex(int) NodeModel.GetTypeHintForOutput(int) NodeModel.ShouldSerializeX() NodeModel.ShouldSerializeY() NodeModel.GetValue(int, EngineController) NodeModel.SetNameFromNodeNameAttribute() NodeModel.OnNodeModified(bool) NodeModel.OnUpdateASTCollection() NodeModel.OnBuilt() NodeModel.UseLevelAndReplicationGuide(List<AssociativeNode>) NodeModel.OnConnectorAdded(ConnectorModel) NodeModel.TryGetInput(int, out Tuple<int, NodeModel>) NodeModel.TryGetOutput(int, out HashSet<Tuple<int, NodeModel>>) NodeModel.ClearErrorsAndWarnings() NodeModel.ClearInfoMessages() NodeModel.SelectNeighbors() NodeModel.SelectDownstreamNeighbours() NodeModel.SelectUpstreamNeighbours() NodeModel.SelectUpstreamAndDownstreamNeighbours() NodeModel.SetNodeStateBasedOnConnectionAndDefaults() NodeModel.Error(string) NodeModel.Info(string, bool) NodeModel.Warning(string, bool) NodeModel.NotifyAstBuildBroken(string) NodeModel.RegisterInputPorts(IEnumerable<PortData>) NodeModel.RegisterOutputPorts(IEnumerable<PortData>) NodeModel.ConfigureSnapEdges(IList<PortModel>) NodeModel.RegisterAllPorts() NodeModel.Deselect() NodeModel.UpdateValueCore(UpdateValueParams) NodeModel.OnSave() NodeModel.SerializeCore(XmlElement, SaveContext) NodeModel.DeserializeCore(XmlElement, SaveContext) NodeModel.MarkNodeAsModified(bool) NodeModel.ClearDirtyFlag() NodeModel.GetExecutionHintsCore() NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool) NodeModel.RequestVisualUpdateAsync(IScheduler, EngineController, IRenderPackageFactory, bool, bool) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string) NodeModel.MigrateToDsFunction(NodeMigrationData, string, string, string) NodeModel.MigrateToDsVarArgFunction(NodeMigrationData, string, string, string) NodeModel.MigrateShortestLacingToAutoLacing(NodeMigrationData) NodeModel.CreationName NodeModel.NodeType NodeModel.GUID NodeModel.AllConnectors NodeModel.IsCustomFunction NodeModel.IsVisible NodeModel.IsInputNode NodeModel.IsSetAsInput NodeModel.IsOutputNode NodeModel.IsSetAsOutput NodeModel.State NodeModel.IsInErrorState NodeModel.PreviewPinned NodeModel.NodeInfos NodeModel.Name NodeModel.InPorts NodeModel.OutPorts NodeModel.InputNodes NodeModel.OutputNodes NodeModel.ArgumentLacing NodeModel.Category NodeModel.DictionaryLink NodeModel.CachedValue NodeModel.Tags NodeModel.Description NodeModel.CanUpdatePeriodically NodeModel.AstIdentifierForPreview NodeModel.IsConvertible NodeModel.AstIdentifierBase NodeModel.AstIdentifierGuid NodeModel.DisplayLabels NodeModel.IsPartiallyApplied NodeModel.AreAllOutputsConnected NodeModel.IsFrozen NodeModel.InputData NodeModel.OutputData NodeModel.DismissedAlerts NodeModel.DismissedAlertsCount NodeModel.RaisesModificationEvents NodeModel.IsTopMostNode NodeModel.IsModified NodeModel.NeedsForceExecution NodeModel.ShouldDisplayPreview NodeModel.ShouldDisplayPreviewCore NodeModel.PortConnected NodeModel.PortDisconnected NodeModel.NodeExecutionBegin NodeModel.NodeMessagesClearing NodeModel.NodeInfoMessagesClearing NodeModel.NodeExecutionEnd NodeModel.Modified NodeModel.UpdateASTCollection NodeModel.ConnectorAdded NodeModel.RequestRenderPackages NodeModel.RenderPackagesUpdated ModelBase.Select() ModelBase.ReportPosition() ModelBase.SetSize(double, double) ModelBase.Dispose() ModelBase.OnDeletionStarted(CancelEventArgs) ModelBase.UpdateValue(UpdateValueParams) ModelBase.Serialize(XmlDocument, SaveContext) ModelBase.Deserialize(XmlElement, SaveContext) ModelBase.CreateElement(XmlDocument, SaveContext) ModelBase.Log(ILogMessage) ModelBase.Log(string) ModelBase.Log(string, WarningLevel) ModelBase.CenterX ModelBase.CenterY ModelBase.X ModelBase.Y ModelBase.Position ModelBase.Height ModelBase.Width ModelBase.Rect ModelBase.IsSelected ModelBase.Disposed ModelBase.DeletionStarted ModelBase.MessageLogged NotificationObject.RaisePropertyChanged(string) NotificationObject.RaisePropertyChanged(params string[]) NotificationObject.PropertyChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.FunctionNodes Assembly: DynamoForRevitNodeModels.dll Syntax [NodeName(\"View Collector\")] [NodeModelInPortsTypes(typeof(ViewCollector), typeof(SelectionNodesResources))] [NodeModelInPortsDescriptions(typeof(ViewCollector), typeof(SelectionNodesResources))] [NodeModelOutPortsNames(typeof(ViewCollector), typeof(SelectionNodesResources))] [NodeCategory(\"onBIM Nodes.Selection\")] [NodeModelDescription(typeof(ViewCollector), typeof(SelectionNodesResources))] [NodeModelSearchTags(typeof(ViewCollector), typeof(SelectionNodesResources))] [NodeModelInPortsNames(typeof(ViewCollector), typeof(SelectionNodesResources))] [IsDesignScriptCompatible] [NodeModelOutPortsTypes(typeof(ViewCollector), typeof(SelectionNodesResources))] [NodeModelOutPortsDescriptions(typeof(ViewCollector), typeof(SelectionNodesResources))] public class ViewCollector : StandardNodeModelBaseByResources, INotifyPropertyChanged, ISelectable, ILocatable, ILogSource, IRenderPackageSource<NodeModel>, IDisposable Constructors ViewCollector() Node Constructor to Dynamo Engine Declaration public ViewCollector() ViewCollector(IEnumerable<PortModel>, IEnumerable<PortModel>) Constructs Node on DYN file, which is in JSON format. Parameters cannot be renamed, since Dynamo Core uses they. Declaration [JsonConstructor] public ViewCollector(IEnumerable<PortModel> inPorts, IEnumerable<PortModel> outPorts) Parameters Type Name Description IEnumerable<PortModel> inPorts IEnumerable<PortModel> outPorts Properties InputPortsData Data to create Input ports Declaration protected override List<PortData> InputPortsData { get; } Property Value Type Description List<PortData> Overrides StandardNodeModelBaseByResources.InputPortsData NodeFunction Function used to node execution Declaration protected override Delegate NodeFunction { get; } Property Value Type Description Delegate Overrides StandardNodeModelBaseByResources.NodeFunction NodeModelType Type that represents the Node Model Declaration protected override Type NodeModelType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.NodeModelType ResourceType Represents the type of resource used to define the Nodel Data, like node name, description, and ports data. Declaration protected override Type ResourceType { get; } Property Value Type Description Type Overrides StandardNodeModelBaseByResources.ResourceType Implements INotifyPropertyChanged Dynamo.Selection.ISelectable Dynamo.Graph.ILocatable Dynamo.Logging.ILogSource Dynamo.Visualization.IRenderPackageSource<T> IDisposable Extension Methods NodeModelsServices.AddPorts(NodeModel, List<PortData>, PortType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.FunctionNodes.html": {
    "href": "api/DynamoForRevitNodeModels.FunctionNodes.html",
    "title": "Namespace DynamoForRevitNodeModels.FunctionNodes | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.FunctionNodes Classes BoundingBoxViewer BuiltInCategoryToDynamoCategory BuiltInToUIName CSVRead Node Model to read CSV file CSVWrite Node Model to write CSV file CoordinateSystemViewer ElementParameterCreateByBuiltInParameter ElementParameterCreateByName ElementParameterDataType ElementParameterKind ElementParameterName ElementParameterValue GetSelectionResultsData Node model for getting selection results data. MultiReturnNodeModelBase Base class for DynamoForRevit NodeModels that are functions like f(x1, x2, ..., xN) -> y1, y2, ..., yM The functions assigment to each output port must be implemented on child classes by overriding BuildOutputAst method SelectionBySelectionMethodAndCategories Node model for Selection.ByMethodAndCategories node SelectionBySelectionMethodAndCategory Node model for Selection.ByMethod node StandardNodeModelBase Base class for DynamoForRevit NodeModels that are functions like f(x1, x2, ..., xN) -> result StandardNodeModelBaseByResources Base class for DynamoForRevit NodeModels that are functions like f(x1, x2, ..., xN) -> result StringFilterByRegex TopographyGetSurfaces VectorViewer ViewCollector"
  },
  "api/DynamoForRevitNodeModels.Services.DimensionTypeNameOverrider.html": {
    "href": "api/DynamoForRevitNodeModels.Services.DimensionTypeNameOverrider.html",
    "title": "Class DimensionTypeNameOverrider | DynamoForRevitUtils - Docs",
    "summary": "Class DimensionTypeNameOverrider Class containing methods to overrides DimensionType name in the DropDown node Inheritance object DimensionTypeNameOverrider Implements IDropDownItemNameOverrider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.Services Assembly: DynamoForRevitNodeModels.dll Syntax [IsVisibleInDynamoLibrary(false)] public class DimensionTypeNameOverrider : IDropDownItemNameOverrider Constructors DimensionTypeNameOverrider() Declaration public DimensionTypeNameOverrider() Methods Override(object) Overrides the object name Declaration public string Override(object item) Parameters Type Name Description object item Object to override name Returns Type Description string RemoveOverrides(object) Remove overrides from object name Declaration public string RemoveOverrides(object item) Parameters Type Name Description object item Object to get original name Returns Type Description string Implements IDropDownItemNameOverrider Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Services.IDropDownItemNameOverrider.html": {
    "href": "api/DynamoForRevitNodeModels.Services.IDropDownItemNameOverrider.html",
    "title": "Interface IDropDownItemNameOverrider | DynamoForRevitUtils - Docs",
    "summary": "Interface IDropDownItemNameOverrider Interface to override the name of the element in the drop down menu Namespace: DynamoForRevitNodeModels.Services Assembly: DynamoForRevitNodeModels.dll Syntax [IsVisibleInDynamoLibrary(false)] public interface IDropDownItemNameOverrider Methods Override(object) Overrides the object name Declaration string Override(object item) Parameters Type Name Description object item Object to override name Returns Type Description string RemoveOverrides(object) Remove overrides from object name Declaration string RemoveOverrides(object item) Parameters Type Name Description object item Object to get original name Returns Type Description string Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Services.NodeModelsServices.html": {
    "href": "api/DynamoForRevitNodeModels.Services.NodeModelsServices.html",
    "title": "Class NodeModelsServices | DynamoForRevitUtils - Docs",
    "summary": "Class NodeModelsServices Several utilities for NodeModels Inheritance object NodeModelsServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.Services Assembly: DynamoForRevitNodeModels.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class NodeModelsServices Methods AddPorts(NodeModel, List<PortData>, PortType) Add ports to NodeModel Declaration public static void AddPorts(this NodeModel ownerNode, List<PortData> portsData, PortType type) Parameters Type Name Description NodeModel ownerNode List<PortData> portsData PortType type BuildInputDescription(PortData) Creates input port description in Dynamo fashion way Declaration public static PortData BuildInputDescription(this PortData port) Parameters Type Name Description PortData port Returns Type Description PortData BuildPortsByResources(Type, Type, PortType, int) Build NodeModel ports by resources Declaration public static List<PortData> BuildPortsByResources(Type nodeType, Type resourceType, PortType portType, int numberOfPorts = 1) Parameters Type Name Description Type nodeType Type resourceType PortType portType int numberOfPorts Returns Type Description List<PortData> GetNodeFunctionArgsFromInputPorts(List<AssociativeNode>) Get NodeModel function arguments from input ports Input ports must be ordered in the same order of the function arguments Declaration public static List<AssociativeNode> GetNodeFunctionArgsFromInputPorts(List<AssociativeNode> inputAstNodes) Parameters Type Name Description List<AssociativeNode> inputAstNodes Input ports as Associative nodes Returns Type Description List<AssociativeNode> LoadNodeResources(Type, Type, NodeModelMetadataType) Load resources to be used in NodeModels attributes Declaration public static string[] LoadNodeResources(Type nodeType, Type resourceType, NodeModelMetadataType metadataType) Parameters Type Name Description Type nodeType Type of the NodeModel Type resourceType Type of resource used to create ports NodeModelMetadataType metadataType Enum that defines the node attribute used by resource Returns Type Description string[] Array of strings containing the resources. If the resource type is not found, an empty array is returned. Remarks Resources keys are not culture variable and they are in the format: <nodeTypeName>_<attributeType>_[portIndex] To make this method works properly is needed to order ports by index. LoadPortResourceByIndex(Type, Type, NodeModelMetadataType, int) Load NodeModel Port resource by index Declaration public static string LoadPortResourceByIndex(Type nodeType, Type resourceType, NodeModelMetadataType metadataType, int portIndex) Parameters Type Name Description Type nodeType Type of the NodeModel Type resourceType Type of resource used to create ports NodeModelMetadataType metadataType Enum that defines the node attribute used by resource int portIndex In/out port zero based index Returns Type Description string String containing the resource. If the resource type is not found, an empty string is returned. Remarks Resources keys are not culture variable and they are in the format: <nodeTypeName>_<attributeType>_[portIndex] SetJsonNodeInputPortsDefaultValues(IEnumerable<PortModel>, List<PortData>) Method used by JSON constructor to set default values to input ports Default values are made by using Associative Nodes in Dynamo API Declaration public static void SetJsonNodeInputPortsDefaultValues(IEnumerable<PortModel> jsonNodeInputPorts, List<PortData> inputPortsData) Parameters Type Name Description IEnumerable<PortModel> jsonNodeInputPorts Input ports from dyn file, which is in JSON format. List<PortData> inputPortsData Input ports data from NodeModel class"
  },
  "api/DynamoForRevitNodeModels.Services.TagTypeNameOverrider.html": {
    "href": "api/DynamoForRevitNodeModels.Services.TagTypeNameOverrider.html",
    "title": "Class TagTypeNameOverrider | DynamoForRevitUtils - Docs",
    "summary": "Class TagTypeNameOverrider Class containing methods to overrides TagType name in the DropDown node Inheritance object TagTypeNameOverrider Implements IDropDownItemNameOverrider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitNodeModels.Services Assembly: DynamoForRevitNodeModels.dll Syntax [IsVisibleInDynamoLibrary(false)] public class TagTypeNameOverrider : IDropDownItemNameOverrider Constructors TagTypeNameOverrider() Declaration public TagTypeNameOverrider() Methods Override(object) Overrides the object name Declaration public string Override(object item) Parameters Type Name Description object item Object to override name Returns Type Description string RemoveOverrides(object) Remove overrides from object name Declaration public string RemoveOverrides(object item) Parameters Type Name Description object item Object to get original name Returns Type Description string Implements IDropDownItemNameOverrider Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitNodeModels.Services.html": {
    "href": "api/DynamoForRevitNodeModels.Services.html",
    "title": "Namespace DynamoForRevitNodeModels.Services | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitNodeModels.Services Classes DimensionTypeNameOverrider Class containing methods to overrides DimensionType name in the DropDown node NodeModelsServices Several utilities for NodeModels TagTypeNameOverrider Class containing methods to overrides TagType name in the DropDown node Interfaces IDropDownItemNameOverrider Interface to override the name of the element in the drop down menu"
  },
  "api/DynamoForRevitUtils.Attributes.AssociatedParameterNameAttribute.html": {
    "href": "api/DynamoForRevitUtils.Attributes.AssociatedParameterNameAttribute.html",
    "title": "Class AssociatedParameterNameAttribute | DynamoForRevitUtils - Docs",
    "summary": "Class AssociatedParameterNameAttribute An attribute to associate a property with a parameter. Inheritance object Attribute AssociatedParameterNameAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitUtils.Attributes Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)] public class AssociatedParameterNameAttribute : Attribute Constructors AssociatedParameterNameAttribute(string) Used to link a property with another property in a ElementParameterMap object that will be used to retrieve parameter values from a Revit element. Declaration public AssociatedParameterNameAttribute(string propertyName) Parameters Type Name Description string propertyName The name of the property to be associated with. Associated Property on ElementParameterMap must be of type ElementParameter. Properties PropertyName Gets the name of the parameter property associated with the property. Declaration public string PropertyName { get; } Property Value Type Description string Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Attributes.html": {
    "href": "api/DynamoForRevitUtils.Attributes.html",
    "title": "Namespace DynamoForRevitUtils.Attributes | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Attributes Classes AssociatedParameterNameAttribute An attribute to associate a property with a parameter."
  },
  "api/DynamoForRevitUtils.Constants.Common.html": {
    "href": "api/DynamoForRevitUtils.Constants.Common.html",
    "title": "Class Common | DynamoForRevitUtils - Docs",
    "summary": "Class Common Common Constants Inheritance object Common Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Constants Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class Common Fields ERROR_TITLE Default error title used on Task Dialogs Declaration public static readonly string ERROR_TITLE Field Value Type Description string PACKAGE_NAME Package Name Declaration public static readonly string PACKAGE_NAME Field Value Type Description string"
  },
  "api/DynamoForRevitUtils.Constants.html": {
    "href": "api/DynamoForRevitUtils.Constants.html",
    "title": "Namespace DynamoForRevitUtils.Constants | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Constants Classes Common Common Constants"
  },
  "api/DynamoForRevitUtils.Entities.AbstractGeometry.AbstractBoundingBox.html": {
    "href": "api/DynamoForRevitUtils.Entities.AbstractGeometry.AbstractBoundingBox.html",
    "title": "Class AbstractBoundingBox | DynamoForRevitUtils - Docs",
    "summary": "Class AbstractBoundingBox Abstract class for Abstract Bounding Box Inheritance object AbstractGeometryBase<BoundingBox> AbstractBoundingBox Implements IAbstractGeometry Inherited Members AbstractGeometryBase<BoundingBox>.abstractObject object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.AbstractGeometry Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class AbstractBoundingBox : AbstractGeometryBase<BoundingBox>, IAbstractGeometry Constructors AbstractBoundingBox(BoundingBox) Constructor for Abstract Bounding Box Declaration public AbstractBoundingBox(BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Methods Visualize(Point?, double, Color?, bool, bool) Method to visualize abstract geometry in Dynamo Declaration public override List<GeometryColor> Visualize(Point? origin = null, double size = 1, Color? color = null, bool showNormal = false, bool wireFrame = false) Parameters Type Name Description Point origin Point that represents the abstract geometry double size Size of abstract geometry Color color Color of abstract geometry bool showNormal Show plane normal as vector visualization bool wireFrame Choose whether show bounding box as wire frame Returns Type Description List<GeometryColor> Overrides AbstractGeometryBase<BoundingBox>.Visualize(Point, double, Color, bool, bool) Implements IAbstractGeometry Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.AbstractGeometry.AbstractCoordinateSystem.html": {
    "href": "api/DynamoForRevitUtils.Entities.AbstractGeometry.AbstractCoordinateSystem.html",
    "title": "Class AbstractCoordinateSystem | DynamoForRevitUtils - Docs",
    "summary": "Class AbstractCoordinateSystem Abstract class for Abstract Coordinate System Inheritance object AbstractGeometryBase<CoordinateSystem> AbstractCoordinateSystem Implements IAbstractGeometry Inherited Members AbstractGeometryBase<CoordinateSystem>.abstractObject object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.AbstractGeometry Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class AbstractCoordinateSystem : AbstractGeometryBase<CoordinateSystem>, IAbstractGeometry Constructors AbstractCoordinateSystem(CoordinateSystem) Constructor for Abstract Coordinate System Declaration public AbstractCoordinateSystem(CoordinateSystem cs) Parameters Type Name Description CoordinateSystem cs Methods Visualize(Point?, double, Color?, bool, bool) Method to visualize abstract geometry in Dynamo Declaration public override List<GeometryColor> Visualize(Point? origin = null, double size = 1, Color? color = null, bool showNormal = false, bool wireFrame = false) Parameters Type Name Description Point origin Point that represents the abstract geometry double size Size of abstract geometry Color color Color of abstract geometry bool showNormal Show plane normal as vector visualization bool wireFrame Choose whether show bounding box as wire frame Returns Type Description List<GeometryColor> Overrides AbstractGeometryBase<CoordinateSystem>.Visualize(Point, double, Color, bool, bool) Implements IAbstractGeometry Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.AbstractGeometry.AbstractGeometryBase-1.html": {
    "href": "api/DynamoForRevitUtils.Entities.AbstractGeometry.AbstractGeometryBase-1.html",
    "title": "Class AbstractGeometryBase<T> | DynamoForRevitUtils - Docs",
    "summary": "Class AbstractGeometryBase<T> Abstract class for Abstract Geometry Inheritance object AbstractGeometryBase<T> AbstractBoundingBox AbstractCoordinateSystem AbstractVector Implements IAbstractGeometry Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.AbstractGeometry Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public abstract class AbstractGeometryBase<T> : IAbstractGeometry where T : DesignScriptEntity Type Parameters Name Description T Fields abstractObject Abstract object Declaration protected readonly T abstractObject Field Value Type Description T Methods Visualize(Point?, double, Color?, bool, bool) Method to visualize abstract geometry in Dynamo Declaration public abstract List<GeometryColor> Visualize(Point? origin = null, double size = 1, Color? color = null, bool showNormal = false, bool wireFrame = false) Parameters Type Name Description Point origin Point that represents the abstract geometry double size Size of abstract geometry Color color Color of abstract geometry bool showNormal Show plane normal as vector visualization bool wireFrame Choose whether show bounding box as wire frame Returns Type Description List<GeometryColor> Implements IAbstractGeometry Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.AbstractGeometry.AbstractVector.html": {
    "href": "api/DynamoForRevitUtils.Entities.AbstractGeometry.AbstractVector.html",
    "title": "Class AbstractVector | DynamoForRevitUtils - Docs",
    "summary": "Class AbstractVector Abstract class for Abstract Vector Inheritance object AbstractGeometryBase<Vector> AbstractVector Implements IAbstractGeometry Inherited Members AbstractGeometryBase<Vector>.abstractObject object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.AbstractGeometry Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class AbstractVector : AbstractGeometryBase<Vector>, IAbstractGeometry Constructors AbstractVector(Vector) Using the base class constructor Declaration public AbstractVector(Vector vector) Parameters Type Name Description Vector vector Methods Visualize(Point?, double, Color?, bool, bool) Method to visualize abstract geometry in Dynamo Declaration public override List<GeometryColor> Visualize(Point? origin = null, double size = 1, Color? color = null, bool showNormal = false, bool wireFrame = false) Parameters Type Name Description Point origin Point that represents the abstract geometry double size Size of abstract geometry Color color Color of abstract geometry bool showNormal Show plane normal as vector visualization bool wireFrame Choose whether show bounding box as wire frame Returns Type Description List<GeometryColor> Overrides AbstractGeometryBase<Vector>.Visualize(Point, double, Color, bool, bool) Implements IAbstractGeometry Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.AbstractGeometry.IAbstractGeometry.html": {
    "href": "api/DynamoForRevitUtils.Entities.AbstractGeometry.IAbstractGeometry.html",
    "title": "Interface IAbstractGeometry | DynamoForRevitUtils - Docs",
    "summary": "Interface IAbstractGeometry Interface for abstract geometry Namespace: DynamoForRevitUtils.Entities.AbstractGeometry Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public interface IAbstractGeometry Methods Visualize(Point?, double, Color?, bool, bool) Method to visualize abstract geometry in Dynamo Declaration List<GeometryColor> Visualize(Point? origin = null, double size = 1, Color? color = null, bool showNormal = false, bool wireFrame = false) Parameters Type Name Description Point origin Point that represents the abstract geometry double size Size of abstract geometry Color color Color of abstract geometry bool showNormal Show plane normal as vector visualization bool wireFrame Choose whether show bounding box as wire frame Returns Type Description List<GeometryColor> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.AbstractGeometry.html": {
    "href": "api/DynamoForRevitUtils.Entities.AbstractGeometry.html",
    "title": "Namespace DynamoForRevitUtils.Entities.AbstractGeometry | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Entities.AbstractGeometry Classes AbstractBoundingBox Abstract class for Abstract Bounding Box AbstractCoordinateSystem Abstract class for Abstract Coordinate System AbstractGeometryBase<T> Abstract class for Abstract Geometry AbstractVector Abstract class for Abstract Vector Interfaces IAbstractGeometry Interface for abstract geometry"
  },
  "api/DynamoForRevitUtils.Entities.Axis.html": {
    "href": "api/DynamoForRevitUtils.Entities.Axis.html",
    "title": "Class Axis | DynamoForRevitUtils - Docs",
    "summary": "Class Axis Represents an axis in the DynamoForRevitUtils library. Inheritance object Axis Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class Axis Remarks Axis are used to create Section Views in Revit. Constructors Axis(string, Line) Constructs an Axis object by it's Dynamo Line representation Declaration public Axis(string name, Line line) Parameters Type Name Description string name Axis name Line line Axis Dynamo Line Axis(string, Point, Point) Constructs an Axis object by Start Point, End Point Declaration public Axis(string name, Point startPoint, Point endPoint) Parameters Type Name Description string name Axis name Point startPoint Axis start point Point endPoint Axis end point Axis(string, double, double, double, double, double) Constructs an Axis object by it's extremities coordinates Declaration public Axis(string name, double x1, double y1, double x2, double y2, double elevation = 0) Parameters Type Name Description string name Axis name double x1 Start point X coordinate in Revit Document Display Units double y1 Start point Y coordinate in Revit Document Display Units double x2 End point X coordinate in Revit Document Display Units double y2 End point Y coordinate in Revit Document Display Units double elevation Axis elevation in Revit Document Display Units Properties CoordinateSystem Dynamo representation of the Axis coordinate system Declaration public CoordinateSystem CoordinateSystem { get; set; } Property Value Type Description CoordinateSystem Direction Axis direction Declaration public Vector Direction { get; set; } Property Value Type Description Vector Elevation Axis elevation (Z value) Declaration public double Elevation { get; set; } Property Value Type Description double EndPoint Axis end point Declaration public Point EndPoint { get; set; } Property Value Type Description Point IsPerpendicular Indicates if the Axis is perpendicular Declaration public bool IsPerpendicular { get; set; } Property Value Type Description bool IsTranslated Indicates if the Axis is translated Declaration public bool IsTranslated { get; set; } Property Value Type Description bool Length Axis length in Revit Document Display Units Declaration public double Length { get; set; } Property Value Type Description double Line Dynamo representation of the Axis Declaration public Line Line { get; set; } Property Value Type Description Line Name Axis name Declaration public string Name { get; set; } Property Value Type Description string Normal Dynamo representation of the Axis Normal Declaration public Vector Normal { get; set; } Property Value Type Description Vector StartPoint Axis start point Declaration public Point StartPoint { get; set; } Property Value Type Description Point Methods Perpendicular(double, double?, bool, double, double) Perpendicular Axis from original axis Declaration public Axis Perpendicular(double parameter = 0, double? length = null, bool reverse = false, double xOffset = 0, double yOffset = 0) Parameters Type Name Description double parameter A value between 0 and 1, representing the position of the Perpendicular Axis along the original axis double? length The length of the Perpendicular Axis bool reverse Reverse the Perpendicular Axis double xOffset Perpendicular Axis offset on original axis normal direction double yOffset Perpendicular Axis offset on original axis direction Returns Type Description Axis Perpendicular Axis Translate(Vector, double) Translates the Axis Declaration public Axis Translate(Vector direction, double distance = 0) Parameters Type Name Description Vector direction Dynamo Vector representing the translation direction double distance Translation distance Returns Type Description Axis Translated Axis Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.CompoundStructureLayersInfo.html": {
    "href": "api/DynamoForRevitUtils.Entities.CompoundStructureLayersInfo.html",
    "title": "Class CompoundStructureLayersInfo | DynamoForRevitUtils - Docs",
    "summary": "Class CompoundStructureLayersInfo Class for storing information about Autodesk.Revit.DB.WallType layers Inheritance object CompoundStructureLayersInfo Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class CompoundStructureLayersInfo Remarks Reference: https://apidocs.co/apps/revit/2020/dc1a081e-8dab-565f-145d-a429098d353c.htm Constructors CompoundStructureLayersInfo(BuildingPad) Construct CompoundStructureLayersInfo from BuildingPad Declaration public CompoundStructureLayersInfo(BuildingPad buildingPad) Parameters Type Name Description BuildingPad buildingPad CompoundStructureLayersInfo(Ceiling) Construct CompoundStructureLayersInfo from Ceiling Declaration public CompoundStructureLayersInfo(Ceiling ceiling) Parameters Type Name Description Ceiling ceiling CompoundStructureLayersInfo(Floor) Construct CompoundStructureLayersInfo from Floor Declaration public CompoundStructureLayersInfo(Floor floor) Parameters Type Name Description Floor floor CompoundStructureLayersInfo(HostObjAttributes) Construct CompoundStructureLayersInfo from HostObjAttributes Declaration public CompoundStructureLayersInfo(HostObjAttributes hostObjAttrib) Parameters Type Name Description HostObjAttributes hostObjAttrib CompoundStructureLayersInfo(RoofBase) Construct CompoundStructureLayersInfo from Roof Declaration public CompoundStructureLayersInfo(RoofBase roofBase) Parameters Type Name Description RoofBase roofBase CompoundStructureLayersInfo(Wall) Construct CompoundStructureLayersInfo from Wall Declaration public CompoundStructureLayersInfo(Wall wall) Parameters Type Name Description Wall wall Properties CoreLayers Core layers Declaration public List<CompoundStructureLayer> CoreLayers { get; } Property Value Type Description List<CompoundStructureLayer> CoreLayersAmount Core layers quantity Declaration public int CoreLayersAmount { get; } Property Value Type Description int CoreLayersFunctions Core layers functions Declaration public List<MaterialFunctionAssignment> CoreLayersFunctions { get; } Property Value Type Description List<MaterialFunctionAssignment> CoreLayersWidth Sum of core layers width Declaration public double CoreLayersWidth { get; } Property Value Type Description double CoreMaterials Core layers materials Declaration public List<Material> CoreMaterials { get; } Property Value Type Description List<Material> CoreMaterialsNames Core layers materials names Declaration public List<string> CoreMaterialsNames { get; } Property Value Type Description List<string> ExteriorLayers Exterior layers Declaration public List<CompoundStructureLayer> ExteriorLayers { get; } Property Value Type Description List<CompoundStructureLayer> ExteriorLayersAmount Exterior layers quantity Declaration public int ExteriorLayersAmount { get; } Property Value Type Description int ExteriorLayersFunctions Exterior layers functions Declaration public List<MaterialFunctionAssignment> ExteriorLayersFunctions { get; } Property Value Type Description List<MaterialFunctionAssignment> ExteriorLayersWidth Sum of exterior layers width Declaration public double ExteriorLayersWidth { get; } Property Value Type Description double ExteriorMaterials Exterior layers materials Declaration public List<Material> ExteriorMaterials { get; } Property Value Type Description List<Material> ExteriorMaterialsNames Exterior layers materials names Declaration public List<string> ExteriorMaterialsNames { get; } Property Value Type Description List<string> FirstCoreLayerIndex Compound structure first core layer index Declaration public int FirstCoreLayerIndex { get; } Property Value Type Description int InteriorLayers Interior layers Declaration public List<CompoundStructureLayer> InteriorLayers { get; } Property Value Type Description List<CompoundStructureLayer> InteriorLayersAmount Interior layers quantity Declaration public int InteriorLayersAmount { get; } Property Value Type Description int InteriorLayersFunctions Interior layers functions Declaration public List<MaterialFunctionAssignment> InteriorLayersFunctions { get; } Property Value Type Description List<MaterialFunctionAssignment> InteriorLayersWidth Sum of interior layers width Declaration public double InteriorLayersWidth { get; } Property Value Type Description double InteriorMaterials Interior layers materials Declaration public List<Material> InteriorMaterials { get; } Property Value Type Description List<Material> InteriorMaterialsNames Interior layers materials names Declaration public List<string> InteriorMaterialsNames { get; } Property Value Type Description List<string> LastCoreLayerIndex Compound structure last core layer index Declaration public int LastCoreLayerIndex { get; } Property Value Type Description int Layers Wall Layers Declaration public List<CompoundStructureLayer> Layers { get; } Property Value Type Description List<CompoundStructureLayer> Structure WallType compound structure Declaration public CompoundStructure Structure { get; } Property Value Type Description CompoundStructure TotalWidth Total layers width Declaration public double TotalWidth { get; } Property Value Type Description double Methods ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.CropRegionOffsetSettings.html": {
    "href": "api/DynamoForRevitUtils.Entities.CropRegionOffsetSettings.html",
    "title": "Class CropRegionOffsetSettings | DynamoForRevitUtils - Docs",
    "summary": "Class CropRegionOffsetSettings Crop Region Offset Settings Inheritance object CropRegionOffsetSettings Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class CropRegionOffsetSettings Properties Bottom Bottom Offset Declaration public double Bottom { get; } Property Value Type Description double IsSymmetric Indicates if the Crop Region Offset Settings are symmetric Declaration public bool IsSymmetric { get; } Property Value Type Description bool Left Left Offset Declaration public double Left { get; } Property Value Type Description double Right Right Offset Declaration public double Right { get; } Property Value Type Description double Top Top Offset Declaration public double Top { get; } Property Value Type Description double Unchanged Indicates if the Crop Region Offset Settings is unchanged Declaration public bool Unchanged { get; } Property Value Type Description bool Methods GetAsymmetric(double, double, double, double) Get Asymmetric Crop Region Offset Settings Declaration public static CropRegionOffsetSettings GetAsymmetric(double bottom, double right, double top, double left) Parameters Type Name Description double bottom Bottom offset double right Right Offset double top Top offset double left Left offset Returns Type Description CropRegionOffsetSettings GetCropRegionShape(View, Line, Line, Line, Line) Get Crop Region Shape for this Crop Region Offset Settings, based on a View and a set of Lines Declaration public CurveLoop GetCropRegionShape(View view, Line bottomLine, Line rightLine, Line topLine, Line leftLine) Parameters Type Name Description View view Line bottomLine Line rightLine Line topLine Line leftLine Returns Type Description CurveLoop GetSymmetric(double) Get Symmetric Crop Region Offset Settings Declaration public static CropRegionOffsetSettings GetSymmetric(double offset = 0) Parameters Type Name Description double offset Offset value Returns Type Description CropRegionOffsetSettings ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.EqualityComparers.ElementComparer.html": {
    "href": "api/DynamoForRevitUtils.Entities.EqualityComparers.ElementComparer.html",
    "title": "Class ElementComparer | DynamoForRevitUtils - Docs",
    "summary": "Class ElementComparer Custom comparer for Revit Elements Inheritance object ElementComparer Implements IEqualityComparer<Element> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.EqualityComparers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class ElementComparer : IEqualityComparer<Element?> Constructors ElementComparer() Declaration public ElementComparer() Methods Equals(Element?, Element?) Declaration public bool Equals(Element? x, Element? y) Parameters Type Name Description Element x Element y Returns Type Description bool GetHashCode(Element?) Declaration public int GetHashCode(Element? element) Parameters Type Name Description Element element Returns Type Description int Implements IEqualityComparer<T> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.EqualityComparers.ElementReferenceComparer.html": {
    "href": "api/DynamoForRevitUtils.Entities.EqualityComparers.ElementReferenceComparer.html",
    "title": "Class ElementReferenceComparer | DynamoForRevitUtils - Docs",
    "summary": "Class ElementReferenceComparer Custom comparer for Revit References obtained from Elements Inheritance object ElementReferenceComparer Implements IEqualityComparer<Reference> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.EqualityComparers Assembly: DynamoForRevitUtils.dll Syntax public class ElementReferenceComparer : IEqualityComparer<Reference> Constructors ElementReferenceComparer() Declaration public ElementReferenceComparer() Methods Equals(Reference?, Reference?) Declaration public bool Equals(Reference? x, Reference? y) Parameters Type Name Description Reference x Reference y Returns Type Description bool GetHashCode(Reference) Declaration public int GetHashCode(Reference obj) Parameters Type Name Description Reference obj Returns Type Description int Implements IEqualityComparer<T> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.EqualityComparers.html": {
    "href": "api/DynamoForRevitUtils.Entities.EqualityComparers.html",
    "title": "Namespace DynamoForRevitUtils.Entities.EqualityComparers | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Entities.EqualityComparers Classes ElementComparer Custom comparer for Revit Elements ElementReferenceComparer Custom comparer for Revit References obtained from Elements"
  },
  "api/DynamoForRevitUtils.Entities.GetUnitsResultData.html": {
    "href": "api/DynamoForRevitUtils.Entities.GetUnitsResultData.html",
    "title": "Class GetUnitsResultData | DynamoForRevitUtils - Docs",
    "summary": "Class GetUnitsResultData Represents the data resulting from an attempt to retrieve the unit type or specification ID along with a description and result status. Inheritance object GetUnitsResultData Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class GetUnitsResultData Constructors GetUnitsResultData() Constructs a new instance of GetUnitsResultData. Declaration public GetUnitsResultData() GetUnitsResultData(ForgeTypeId, string, AccessParameterResult) Constructs a new instance of GetUnitsResultData. Declaration public GetUnitsResultData(ForgeTypeId unitTypeOrSpecId, string description, AccessParameterResult result) Parameters Type Name Description ForgeTypeId unitTypeOrSpecId The Autodesk.Revit.DB.UnitTypeId or Autodesk.Revit.DB.SpecTypeId of get units operation. string description A description of result AccessParameterResult result Enum that represents the result of the retrieval operation. Exceptions Type Condition ArgumentNullException Thrown when unitTypeOrSpecId or description is null. Properties Description A description of the unit type or specification. Declaration public string Description { get; set; } Property Value Type Description string Result The result of the retrieval operation. Declaration public AccessParameterResult Result { get; set; } Property Value Type Description AccessParameterResult UnitTypeOrSpecId The Autodesk.Revit.DB.UnitTypeId of get units operation. Declaration public ForgeTypeId UnitTypeOrSpecId { get; set; } Property Value Type Description ForgeTypeId Remarks Depending on the context some errors might occur. In those cases, returned value could be a Autodesk.Revit.DB.SpecTypeId, instead the desired Autodesk.Revit.DB.UnitTypeId. Autodesk.Revit.DB.UnitTypeId represents: meters, square meters, cubic meters etc. Autodesk.Revit.DB.SpecTypeId represents: length, area, volume etc. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.MEPCurveReferences.html": {
    "href": "api/DynamoForRevitUtils.Entities.MEPCurveReferences.html",
    "title": "Class MEPCurveReferences | DynamoForRevitUtils - Docs",
    "summary": "Class MEPCurveReferences Class containing utils References from MEP Curves Inheritance object MEPCurveReferences Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class MEPCurveReferences Constructors MEPCurveReferences(ReferenceArray, Curve, CoordinateSystem, List<Face>, ElementId) Constructor for MEPCurveReferences Declaration public MEPCurveReferences(ReferenceArray refArray, Curve locationCurve, CoordinateSystem referenceCS, List<Face> endFaces, ElementId ownerId) Parameters Type Name Description ReferenceArray refArray Array of references Curve locationCurve Location curve CoordinateSystem referenceCS Reference coordinate system List<Face> endFaces End faces ElementId ownerId Id of the MEPCurveReferences owner Properties EndFaces Extremity faces of MEPCurve Declaration public List<Face> EndFaces { get; set; } Property Value Type Description List<Face> LocationCurve MEPCurve location curve Declaration public Curve LocationCurve { get; set; } Property Value Type Description Curve OwnerId MEPCurve Id Declaration public ElementId OwnerId { get; set; } Property Value Type Description ElementId RefArray Autodesk.Revit.DB.ReferenceArray obtained from MEPCurve end faces Declaration public ReferenceArray RefArray { get; set; } Property Value Type Description ReferenceArray ReferenceCS MEPCurve base coordinate system Declaration public CoordinateSystem ReferenceCS { get; set; } Property Value Type Description CoordinateSystem Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.AccessElementParameterOptions.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.AccessElementParameterOptions.html",
    "title": "Class AccessElementParameterOptions | DynamoForRevitUtils - Docs",
    "summary": "Class AccessElementParameterOptions Represents options for retrieving parameters of elements using Dynamo for Revit utilities. Inheritance object AccessElementParameterOptions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class AccessElementParameterOptions Constructors AccessElementParameterOptions() Declaration public AccessElementParameterOptions() Properties AccessMode Gets the mode of access for parameters, specifying how parameters are handled when retrieving element parameter options. Declaration public AccessParameterMode AccessMode { get; set; } Property Value Type Description AccessParameterMode Remarks The mode property defines the behavior for accessing parameters, such as whether only the parameter itself is retrieved or the parameter along with its value. CheckIfValueContainsInvalidChars Specifies whether to validate string values for invalid characters when retrieving element parameters. Declaration public bool CheckIfValueContainsInvalidChars { get; set; } Property Value Type Description bool Remarks Invalid chars are line breaks or tabs ('\\n', '\\t', '\\r') DoubleParameterConvertionMode Defines the mode of conversion for double-type parameter values in Dynamo for Revit utilities. Declaration public DoubleParameterConvertionMode DoubleParameterConvertionMode { get; set; } Property Value Type Description DoubleParameterConvertionMode Remarks The conversion mode determines how double parameters are interpreted, especially in relation to document-specific units or unconverted values. GetElementIdValueAsString Determines whether element IDs should be retrieved and represented as string values when accessing parameter values. Declaration public bool GetElementIdValueAsString { get; set; } Property Value Type Description bool Remarks This property specifies if the values of the element IDs are formatted as strings during the retrieval process, providing a flexible way to handle these identifiers. Regex Gets the regular expression (Regex) used to filter or match parameters during the process of retrieving element parameters. A null value indicates that no filtering will occur based on a regular expression. Declaration public Regex? Regex { get; set; } Property Value Type Description Regex Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.AccessParameterInfo.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.AccessParameterInfo.html",
    "title": "Class AccessParameterInfo | DynamoForRevitUtils - Docs",
    "summary": "Class AccessParameterInfo Represents the data associated with accessing a parameter, including its value, a description, and the result of the access operation. Inheritance object AccessParameterInfo Implements IEquatable<AccessParameterInfo> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public record AccessParameterInfo : IEquatable<AccessParameterInfo> Constructors AccessParameterInfo(AccessParameterInfo) Declaration protected AccessParameterInfo(AccessParameterInfo original) Parameters Type Name Description AccessParameterInfo original AccessParameterInfo(ElementParameter, string?, AccessParameterResult?) Constructs a new instance of AccessParameterInfo. Declaration public AccessParameterInfo(ElementParameter parameter, string? description = null, AccessParameterResult? result = null) Parameters Type Name Description ElementParameter parameter The element parameter used in the access operation. string description A description of the parameter access operation. AccessParameterResult? result The result of the parameter access operation. Exceptions Type Condition ArgumentNullException Thrown when parameter or description is null. Properties Description A description of the parameter. Declaration public string Description { get; set; } Property Value Type Description string EqualityContract Declaration protected virtual Type EqualityContract { get; } Property Value Type Description Type Parameter The value of the element parameter. Declaration public ElementParameter Parameter { get; set; } Property Value Type Description ElementParameter Result The result of the parameter access operation. Declaration public AccessParameterResult Result { get; set; } Property Value Type Description AccessParameterResult Methods Equals(AccessParameterInfo?) Declaration public virtual bool Equals(AccessParameterInfo? other) Parameters Type Name Description AccessParameterInfo other Returns Type Description bool Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() PrintMembers(StringBuilder) Declaration protected virtual bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators operator ==(AccessParameterInfo?, AccessParameterInfo?) Declaration public static bool operator ==(AccessParameterInfo? left, AccessParameterInfo? right) Parameters Type Name Description AccessParameterInfo left AccessParameterInfo right Returns Type Description bool operator !=(AccessParameterInfo?, AccessParameterInfo?) Declaration public static bool operator !=(AccessParameterInfo? left, AccessParameterInfo? right) Parameters Type Name Description AccessParameterInfo left AccessParameterInfo right Returns Type Description bool Implements IEquatable<T> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameter.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameter.html",
    "title": "Class ElementParameter | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameter Represents a parameter of a Revit element within the Dynamo for Revit utilities. Inheritance object ElementParameter Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class ElementParameter Remarks This class acts as a wrapper around Revit's Autodesk.Revit.DB.Parameter object and provides access to the parameter's metadata, value, and additional contextual information necessary in the Dynamo for Revit environment. Constructors ElementParameter(BuiltInParameter, ParameterDataType, ParameterKind) Creates a new instance of ElementParameter that will be used for data manipulation. Declaration public ElementParameter(BuiltInParameter builtInParameter, ParameterDataType dataType, ParameterKind kind) Parameters Type Name Description BuiltInParameter builtInParameter The BuiltInParameter representing this ElementParameter ParameterDataType dataType ParameterDataType enum that defines the data type of the parameter. ParameterKind kind ParameterKind enum that defines if the parameter is a type or instance. Exceptions Type Condition ArgumentException Thrown if the is not possible to get Revit UI name to builtInParameter. ElementParameter(Parameter) Creates a new instance of ElementParameter from Revit parameter Declaration public ElementParameter(Parameter revitParameter) Parameters Type Name Description Parameter revitParameter Revit parameter to bound with the ElementParameter ElementParameter(Parameter, ParameterKind) Creates a new instance of ElementParameter from Revit parameter and ParameterKind Declaration public ElementParameter(Parameter revitParameter, ParameterKind kind) Parameters Type Name Description Parameter revitParameter Revit parameter to bound with the ElementParameter ParameterKind kind ParameterKind enum that defines if the parameter is a type or instance. ElementParameter(string, ParameterDataType, ParameterKind) Creates a new instance of ElementParameter that will be used for data manipulation. Declaration public ElementParameter(string name, ParameterDataType dataType, ParameterKind kind) Parameters Type Name Description string name The parameter name ParameterDataType dataType ParameterDataType enum that defines the data type of the parameter. ParameterKind kind ParameterKind enum that defines if the parameter is a type or instance. Exceptions Type Condition ArgumentException Thrown if the provided name is null or empty. Fields Invalid Gets an invalid instance of ElementParameter with undefined data type and parameter kind. Declaration public static readonly ElementParameter Invalid Field Value Type Description ElementParameter An ElementParameter instance representing an invalid parameter. Properties BuiltInParameter A built-in parameter within a Revit element, used to reference predefined parameters in the Autodesk Revit API. Declaration public BuiltInParameter? BuiltInParameter { get; } Property Value Type Description BuiltInParameter? DataType Represents the storage type of a parameter, indicating the data type that the parameter is expected to hold. Declaration public ParameterDataType DataType { get; } Property Value Type Description ParameterDataType Definition The Parameter Definition Declaration public Definition Definition { get; } Property Value Type Description Definition Document Document which the Parameter owner Element resides in Declaration public Document Document { get; } Property Value Type Description Document Id The Parameter Id Declaration public ElementId Id { get; } Property Value Type Description ElementId IsBuiltInParameter Indicates whether the ElementParameter represents a built-in parameter in Revit. Declaration public bool IsBuiltInParameter { get; } Property Value Type Description bool Kind The Parameter Kind (Type or Instance) Declaration public ParameterKind Kind { get; } Property Value Type Description ParameterKind Name User defined name for this Parameter Declaration public string Name { get; } Property Value Type Description string OwnerElement The Parameter owner Element Declaration public Element OwnerElement { get; } Property Value Type Description Element RevitParameter The Revit Parameter Declaration public Parameter RevitParameter { get; set; } Property Value Type Description Parameter Spec Represents the Autodesk.Revit.DB.SpecTypeId associated with the parameter as human-readable label. Declaration public string Spec { get; } Property Value Type Description string Remarks The value depends on Revit language. SpecTypeId String representation of Autodesk.Revit.DB.SpecTypeId associated with the parameter. Declaration public string SpecTypeId { get; } Property Value Type Description string Unit Represents the Autodesk.Revit.DB.UnitTypeId associated with the parameter as human-readable label. Declaration public string Unit { get; } Property Value Type Description string Remarks The value depends on Revit language. UnitTypeId String representation of Autodesk.Revit.DB.UnitTypeId associated with the parameter. Declaration public string UnitTypeId { get; } Property Value Type Description string Value Value of the parameter. Declaration public object Value { get; set; } Property Value Type Description object Remarks Values of type double must be considered in Display Units. Exceptions Type Condition ArgumentException Thrown when the value to set is not valid for the ParameterDataType of the parameter. Accepted types are: bool, ElementParameterYesNoValue, int, double, string, Autodesk.Revit.DB.ElementId. Methods Clone() Creates a new instance of the ElementParameter class with the same name, data type, and kind as the current instance. Declaration public ElementParameter Clone() Returns Type Description ElementParameter A new ElementParameter object with properties copied from the original instance. Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) GetDisplayUnits() Retrieves the display units for the parameter based on its specification type and the document's unit settings. Declaration public GetUnitsResultData GetDisplayUnits() Returns Type Description GetUnitsResultData A GetUnitsResultData object containing the UnitTypeId or SpecTypeId, a message describing the result, and the overall success or failure of the unit retrieval. Remarks SpecTypeId is returned in case the parameter specification is not computable. GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators operator ==(ElementParameter, ElementParameter) Declaration public static bool operator ==(ElementParameter left, ElementParameter right) Parameters Type Name Description ElementParameter left ElementParameter right Returns Type Description bool operator !=(ElementParameter, ElementParameter) Declaration public static bool operator !=(ElementParameter left, ElementParameter right) Parameters Type Name Description ElementParameter left ElementParameter right Returns Type Description bool Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor.html",
    "title": "Class ElementParameterAccessor | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterAccessor Class used to access properties from a ElementWrapper using ElementParameter Inheritance object ElementParameterAccessor Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class ElementParameterAccessor Remarks ElementWrapper must have properties with AssociatedParameterNameAttribute to map the property to the correspondent ElementParameter. Examples [AssociatedParameterPropertyName(nameof(ViewCommonParameters.DetailNumber))] public string DetailNumber { get => ViewWrapper.ElementParameterAccessor.GetStringValue(); set => ViewWrapper.ElementParameterAccessor.SetValue(value); } Constructors ElementParameterAccessor(ElementWrapper) Creates a new instance of ElementParameterAccessor using the given FamilyInstanceWrapper. Declaration public ElementParameterAccessor(ElementWrapper elementWrapper) Parameters Type Name Description ElementWrapper elementWrapper The FamilyInstanceWrapper to get parameters from. Exceptions Type Condition ArgumentNullException Thrown when the familyInstanceWrapper is null. Methods GetBoolValue(string?) Retrieves the boolean value of the parameter mapped to the given property name. Declaration public bool GetBoolValue(string? propertyName = null) Parameters Type Name Description string propertyName The name of the property associated with the parameter. Defaults to the caller member name if not provided. Returns Type Description bool A boolean value indicating the parameter's value. Returns true if the integer representation of the parameter equals 1, otherwise false. GetDoubleValue(string?) Retrieves the double value of a property using its name to get the correspondent ElementParameter class. Declaration public double GetDoubleValue(string? propertyName = null) Parameters Type Name Description string propertyName The name of the property. Returns Type Description double The value of the property as a double. Remarks Property name must be the same as the parameter name without the suffix \"Parameter\". GetElementIdValue(string?) Retrieves the element ID value for a specified property of the given Revit instance. Declaration public ElementId GetElementIdValue(string? propertyName = null) Parameters Type Name Description string propertyName The name of the property to get the element ID value from. If not specified, the caller's name is used. Returns Type Description ElementId The element ID value associated with the specified property, or null if the property does not exist or has no associated element ID. Remarks Property name must be the same as the parameter name without the suffix \"Parameter\". GetIntegerValue(string?) Retrieves the integer value of a specified property using the associated Revit parameter. Declaration public int GetIntegerValue(string? propertyName = null) Parameters Type Name Description string propertyName The name of the property to retrieve the integer value for. This is optional and defaults to the caller's name. Returns Type Description int The integer value of the specified property based on its Revit parameter. GetStringValue(string?) Retrieves the string value of a property using its name to get the correspondent ElementParameter class. Declaration public string GetStringValue(string? propertyName = null) Parameters Type Name Description string propertyName The name of the property. Returns Type Description string The value of the property as a double. Remarks Property name must be the same as the parameter name without the suffix \"Parameter\". SetValue(ElementId, string?) Sets the ElementId value of a parameter associated with the specified property. Declaration public void SetValue(ElementId value, string? propertyName = null) Parameters Type Name Description ElementId value The ElementId to set on the parameter. string propertyName The name of the property associated with the parameter. The default is the caller's name. Exceptions Type Condition InvalidOperationException The parameter is read-only ArgumentNullException Value must be a finite number. SetValue(bool, string?) Sets the value of a property tied to a ElementParameter on the associated DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor._elementWrapper. Declaration public void SetValue(bool value, string? propertyName = null) Parameters Type Name Description bool value The value to be set for the specified property. string propertyName The name of the property to set the value for. If not explicitly provided, it will use the caller's name. Exceptions Type Condition ArgumentNullException Thrown when the propertyName is null or empty. InvalidOperationException Thrown if the property cannot be mapped to a valid parameter in ElementParameter. SetValue(double, ForgeTypeId, string?) Sets a double value to the parameter associated with the specified property. Declaration public void SetValue(double value, ForgeTypeId specTypeId, string? propertyName = null) Parameters Type Name Description double value The double value to set on the parameter. ForgeTypeId specTypeId Autodesk.Revit.DB.SpecTypeId used to convert the value to the correct unit. string propertyName The name of the property to which the value will be set. Defaults to the caller member's name if not provided. Exceptions Type Condition InvalidOperationException The parameter is read-only SetValue(int, string?) Sets the integer value of the parameter associated with the specified property. Declaration public void SetValue(int value, string? propertyName = null) Parameters Type Name Description int value The integer value to set. string propertyName The name of the property whose associated parameter will be set. If null, the caller member name will be used. Exceptions Type Condition ArgumentNullException Thrown when the property name is null or empty. SetValue(string, string?) Sets the string value of a parameter associated with the specified property. Declaration public void SetValue(string value, string? propertyName = null) Parameters Type Name Description string value The string value to set. string propertyName The name of the property associated with the parameter. This is optional and will be automatically provided by the caller's member name if not explicitly specified. Exceptions Type Condition InvalidOperationException The parameter is read-only, or the parameter is not a shared parameter, or the shared parameter has HideWhenNoValue set to false. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap-1.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap-1.html",
    "title": "Class ElementParameterMap<T> | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterMap<T> Object that holds element parameters Inheritance object ElementParameterMap<T> Implements IElementParameterMap Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public abstract class ElementParameterMap<T> : IElementParameterMap where T : ElementParameterMap<T> Type Parameters Name Description T Defines the type of the derived class, which is used to access properties of the derived class at compile time. Remarks This class implements the Curiously Recurring Template Pattern (CRTP) by using a generic type parameter T that represents the derived class itself. This pattern enables static polymorphism, allowing the base class to use functionality from the derived class at compile time. In the GetItems method, this pattern allows the base class to access properties of the derived class through reflection while maintaining type safety. Constructors ElementParameterMap() Declaration protected ElementParameterMap() Methods GetItems() Retrieves a collection of items that represent the mapping between property names and corresponding element parameters in an element parameter map. Declaration public IEnumerable<ElementParameterMapItem> GetItems() Returns Type Description IEnumerable<ElementParameterMapItem> A collection of ElementParameterMapItem representing the mappings. Remarks The method inspects the properties of the implementing type to identify properties of type ElementParameter and adds them to the list of map items. Exceptions Type Condition Exception Throw if no properties of type ElementParameter are found. Implements IElementParameterMap Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMapItem.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMapItem.html",
    "title": "Class ElementParameterMapItem | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterMapItem Represents a mapping item between a property name and an associated ElementParameter Inheritance object ElementParameterMapItem Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class ElementParameterMapItem Constructors ElementParameterMapItem() Declaration public ElementParameterMapItem() Properties ElementParameter Represents an element parameter within the Dynamo for Revit utilities framework. This property is used in mapping items to associate a specific property with an instance of ElementParameter. Declaration public ElementParameter ElementParameter { get; set; } Property Value Type Description ElementParameter PropertyName Gets the name of the property associated with an ElementParameter. Declaration public string PropertyName { get; set; } Property Value Type Description string Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementWrapper.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.ElementWrapper.html",
    "title": "Class ElementWrapper | DynamoForRevitUtils - Docs",
    "summary": "Class ElementWrapper Represents an abstract base class for wrapping Revit elements. Provides common properties and methods for derived wrapper classes. Inheritance object ElementWrapper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class ElementWrapper Remarks Use this class in conjunction with the ElementParameterMap class and the AssociatedParameterNameAttribute attribute to enhance the way you access element parameters. The ElementWrapper class represents the Revit Element and the ElementParameterMap class represents the parameters of this element. To use these classes together, proceed as follows: Create classes derived from ElementWrapper to represent specific characteristics of the elements you want to represent. Create properties of type ElementParameter in classes derived from ElementParameterMap to represent element parameters. Use the AssociatedParameterNameAttribute attribute to link properties of the class derived from ElementWrapper with the properties of the class derived from ElementParameterMap This way you will no longer need to worry about fetching parameters from elements every time you need to get/set their values. Use the properties of the class derived from ElementWrapper normally and their values will be automatically get/set from/to the element instances in Revit. Examples [IsVisibleInDynamoLibrary(false)] public class CableTrayWrapper : ElementWrapper { internal CableTrayWrapper( Element element, params IEnumerable<IElementParameterMap> parameters ) : base(element, parameters) { } [AssociatedParameterName(nameof(CableTrayParameters.Comments))] public string Comments { get => ParameterAccessor.GetStringValue(); set => ParameterAccessor.SetValue(value); } [AssociatedParameterName(nameof(CableTrayParameters.IDR))] public bool IDR { get => ParameterAccessor.GetBoolValue(); set => ParameterAccessor.SetValue(value); } [AssociatedParameterName(nameof(CableTrayParameters.Elevation))] public double Elevation { get => ParameterAccessor.GetDoubleValue(); set => ParameterAccessor.SetValue(value, SpecTypeId.Length); } } public class CableTrayParameters : ElementParameterMap<CableTrayParameters> { // Properties should be public. Recommended to be init. public ElementParameter Comments { get; init; } public ElementParameter IDR { get; init; } public ElementParameter Elevation { get; init; } // Constructor made private to not appear in Dynamo Library private CableTrayParameters() { } // Static constructor shown as Dynamo Node in Library public static CableTrayParameters Create( ElementParameter comments, ElementParameter idr, ElementParameter elevation ) => new() { Comments = comments, IDR = idr, Elevation = elevation }; } Constructors ElementWrapper(Element, params IEnumerable<IElementParameterMap>) Constructs a new instance of ElementWrapper. Declaration public ElementWrapper(Element element, params IEnumerable<IElementParameterMap> parameterMaps) Parameters Type Name Description Element element The Element to be wrapped. IEnumerable<IElementParameterMap> parameterMaps The parameter indexers associated with the element. Properties Element Declaration public Element Element { get; } Property Value Type Description Element ParameterAccessor Declaration public ElementParameterAccessor ParameterAccessor { get; } Property Value Type Description ElementParameterAccessor ParameterMaps Declaration public IEnumerable<IElementParameterMap> ParameterMaps { get; } Property Value Type Description IEnumerable<IElementParameterMap> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.IElementParameterMap.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.IElementParameterMap.html",
    "title": "Interface IElementParameterMap | DynamoForRevitUtils - Docs",
    "summary": "Interface IElementParameterMap Represents a mapping between property names and their corresponding element parameters. Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax public interface IElementParameterMap Remarks This interface provides functionality to retrieve a collection of mappings that represent the relationship between property names and element parameters. It is intended to be implemented by classes to handle specific mappings. Methods GetItems() Retrieves a collection of items that represent the mapping between property names and corresponding element parameters in an element parameter map. Declaration IEnumerable<ElementParameterMapItem> GetItems() Returns Type Description IEnumerable<ElementParameterMapItem> A collection of ElementParameterMapItem representing the mappings. Remarks The method inspects the properties of the implementing type to identify properties of type ElementParameter and adds them to the list of map items. Exceptions Type Condition Exception Throw if no properties of type ElementParameter are found. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.IElementWrapper.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.IElementWrapper.html",
    "title": "Interface IElementWrapper | DynamoForRevitUtils - Docs",
    "summary": "Interface IElementWrapper Represents an interface for wrapping Revit elements. Namespace: DynamoForRevitUtils.Entities.ParametersHandlers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public interface IElementWrapper Properties Element Represents the Revit Element associated with this wrapper object. Declaration Element Element { get; } Property Value Type Description Element ParameterAccessor Provides access to manipulate and retrieve parameter values of a Revit element through the associated element wrapper. Declaration ElementParameterAccessor ParameterAccessor { get; } Property Value Type Description ElementParameterAccessor ParameterMaps Parameter indexers associated with the element. Declaration IEnumerable<IElementParameterMap> ParameterMaps { get; } Property Value Type Description IEnumerable<IElementParameterMap> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.ParametersHandlers.html": {
    "href": "api/DynamoForRevitUtils.Entities.ParametersHandlers.html",
    "title": "Namespace DynamoForRevitUtils.Entities.ParametersHandlers | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Entities.ParametersHandlers Classes AccessElementParameterOptions Represents options for retrieving parameters of elements using Dynamo for Revit utilities. AccessParameterInfo Represents the data associated with accessing a parameter, including its value, a description, and the result of the access operation. ElementParameter Represents a parameter of a Revit element within the Dynamo for Revit utilities. ElementParameterAccessor Class used to access properties from a ElementWrapper using ElementParameter ElementParameterMapItem Represents a mapping item between a property name and an associated ElementParameter ElementParameterMap<T> Object that holds element parameters"
  },
  "api/DynamoForRevitUtils.Entities.PickSelectionFilters.CategorySelectionFilter.html": {
    "href": "api/DynamoForRevitUtils.Entities.PickSelectionFilters.CategorySelectionFilter.html",
    "title": "Class CategorySelectionFilter | DynamoForRevitUtils - Docs",
    "summary": "Class CategorySelectionFilter Category selection filter Inheritance object PickSelectionFilter CategorySelectionFilter Implements ISelectionFilter Inherited Members PickSelectionFilter.Categories PickSelectionFilter.AllowLinkedElements object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.PickSelectionFilters Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class CategorySelectionFilter : PickSelectionFilter, ISelectionFilter Constructors CategorySelectionFilter(bool, BuiltInCategory) Constructs a new SelectionFilter based on a given BuiltInCategory Declaration public CategorySelectionFilter(bool allowLinkedElements, BuiltInCategory bit) Parameters Type Name Description bool allowLinkedElements Whether allow linked elements or not BuiltInCategory bit Category to filter Methods AllowElement(Element) Whether provided element from given BuiltInCategory is allowed on filter or not. Declaration public override bool AllowElement(Element elem) Parameters Type Name Description Element elem Returns Type Description bool Overrides PickSelectionFilter.AllowElement(Element) AllowReference(Reference, XYZ) If references area allowed Declaration public override bool AllowReference(Reference reference, XYZ position) Parameters Type Name Description Reference reference XYZ position Returns Type Description bool Overrides PickSelectionFilter.AllowReference(Reference, XYZ) Implements Autodesk.Revit.UI.Selection.ISelectionFilter Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.PickSelectionFilters.MultiCategorySelectionFilter.html": {
    "href": "api/DynamoForRevitUtils.Entities.PickSelectionFilters.MultiCategorySelectionFilter.html",
    "title": "Class MultiCategorySelectionFilter | DynamoForRevitUtils - Docs",
    "summary": "Class MultiCategorySelectionFilter Category selection filter Inheritance object PickSelectionFilter MultiCategorySelectionFilter Implements ISelectionFilter Inherited Members PickSelectionFilter.Categories PickSelectionFilter.AllowLinkedElements object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.PickSelectionFilters Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class MultiCategorySelectionFilter : PickSelectionFilter, ISelectionFilter Constructors MultiCategorySelectionFilter(bool, params BuiltInCategory[]) Constructs a new SelectionFilter based on BuiltInCategory array Declaration public MultiCategorySelectionFilter(bool allowLinkedElements, params BuiltInCategory[] bits) Parameters Type Name Description bool allowLinkedElements Whether allow linked elements or not BuiltInCategory[] bits BuiltInCategories to filter Methods AllowElement(Element) Whether provided element from given BuiltInCategory is allowed on filter or not. Declaration public override bool AllowElement(Element elem) Parameters Type Name Description Element elem Returns Type Description bool Overrides PickSelectionFilter.AllowElement(Element) AllowReference(Reference, XYZ) If references area allowed Declaration public override bool AllowReference(Reference reference, XYZ position) Parameters Type Name Description Reference reference XYZ position Returns Type Description bool Overrides PickSelectionFilter.AllowReference(Reference, XYZ) Implements Autodesk.Revit.UI.Selection.ISelectionFilter Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.PickSelectionFilters.NoFilter.html": {
    "href": "api/DynamoForRevitUtils.Entities.PickSelectionFilters.NoFilter.html",
    "title": "Class NoFilter | DynamoForRevitUtils - Docs",
    "summary": "Class NoFilter Selection filter that allows all elements Inheritance object PickSelectionFilter NoFilter Implements ISelectionFilter Inherited Members PickSelectionFilter.Categories PickSelectionFilter.AllowLinkedElements object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.PickSelectionFilters Assembly: DynamoForRevitUtils.dll Syntax public class NoFilter : PickSelectionFilter, ISelectionFilter Constructors NoFilter() Declaration public NoFilter() Methods AllowElement(Element) Override this pre-filter method to specify if the element should be permitted to be selected. Declaration public override bool AllowElement(Element elem) Parameters Type Name Description Element elem A candidate element in selection operation. Returns Type Description bool Return true to allow the user to select this candidate element. Return false to prevent selection of this element. Overrides PickSelectionFilter.AllowElement(Element) Remarks <p>If prompting the user to select an element from a Revit Link instance, the element passed here will be the link instance, not the selected linked element. Access the linked element from Reference passed to the AllowReference() callback of ISelectionFilter. If an exception is thrown from this method, the element will not be permitted to be selected. AllowReference(Reference, XYZ) Override this post-filter method to specify if a reference to a piece of geometry is permitted to be selected. Declaration public override bool AllowReference(Reference reference, XYZ position) Parameters Type Name Description Reference reference A candidate reference in selection operation. XYZ position The 3D position of the mouse on the candidate reference. Returns Type Description bool Return true to allow the user to select this candidate reference. Return false to prevent selection of this candidate. Overrides PickSelectionFilter.AllowReference(Reference, XYZ) Remarks If an exception is thrown from this method, the element will not be permitted to be selected. Implements Autodesk.Revit.UI.Selection.ISelectionFilter Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.PickSelectionFilters.PickSelectionFilter.html": {
    "href": "api/DynamoForRevitUtils.Entities.PickSelectionFilters.PickSelectionFilter.html",
    "title": "Class PickSelectionFilter | DynamoForRevitUtils - Docs",
    "summary": "Class PickSelectionFilter Base class for Pick Selection Filters Inheritance object PickSelectionFilter CategorySelectionFilter MultiCategorySelectionFilter NoFilter WallSelectionFilter Implements ISelectionFilter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.PickSelectionFilters Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public abstract class PickSelectionFilter : ISelectionFilter Constructors PickSelectionFilter() Constructor for PickSelectionFilter Declaration protected PickSelectionFilter() PickSelectionFilter(bool, params IEnumerable<BuiltInCategory>) Constructor for PickSelectionFilter by Categories Declaration protected PickSelectionFilter(bool allowLinkedElements, params IEnumerable<BuiltInCategory> categories) Parameters Type Name Description bool allowLinkedElements Whether allow linked elements or not IEnumerable<BuiltInCategory> categories Categories to filter Properties AllowLinkedElements If linked elements are allowed Declaration public bool AllowLinkedElements { get; set; } Property Value Type Description bool Categories Categories to filter Declaration public IEnumerable<BuiltInCategory> Categories { get; set; } Property Value Type Description IEnumerable<BuiltInCategory> Methods AllowElement(Element) Override this pre-filter method to specify if the element should be permitted to be selected. Declaration public abstract bool AllowElement(Element elem) Parameters Type Name Description Element elem A candidate element in selection operation. Returns Type Description bool Return true to allow the user to select this candidate element. Return false to prevent selection of this element. Remarks <p>If prompting the user to select an element from a Revit Link instance, the element passed here will be the link instance, not the selected linked element. Access the linked element from Reference passed to the AllowReference() callback of ISelectionFilter. If an exception is thrown from this method, the element will not be permitted to be selected. AllowReference(Reference, XYZ) Override this post-filter method to specify if a reference to a piece of geometry is permitted to be selected. Declaration public abstract bool AllowReference(Reference reference, XYZ position) Parameters Type Name Description Reference reference A candidate reference in selection operation. XYZ position The 3D position of the mouse on the candidate reference. Returns Type Description bool Return true to allow the user to select this candidate reference. Return false to prevent selection of this candidate. Remarks If an exception is thrown from this method, the element will not be permitted to be selected. Implements Autodesk.Revit.UI.Selection.ISelectionFilter Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.PickSelectionFilters.WallSelectionFilter.html": {
    "href": "api/DynamoForRevitUtils.Entities.PickSelectionFilters.WallSelectionFilter.html",
    "title": "Class WallSelectionFilter | DynamoForRevitUtils - Docs",
    "summary": "Class WallSelectionFilter Wall selection filter based on WallKind Inheritance object PickSelectionFilter WallSelectionFilter Implements ISelectionFilter Inherited Members PickSelectionFilter.Categories PickSelectionFilter.AllowLinkedElements object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.PickSelectionFilters Assembly: DynamoForRevitUtils.dll Syntax public class WallSelectionFilter : PickSelectionFilter, ISelectionFilter Constructors WallSelectionFilter(WallKind, bool) Constructs a WallSelectionFilter by WallKind. Only allow System Walls of given kind Declaration public WallSelectionFilter(WallKind wallKind, bool allowLinkedElements = false) Parameters Type Name Description WallKind wallKind bool allowLinkedElements Methods AllowElement(Element) Only allow System Walls of given kind Declaration public override bool AllowElement(Element elem) Parameters Type Name Description Element elem Element to filter Returns Type Description bool Overrides PickSelectionFilter.AllowElement(Element) AllowReference(Reference, XYZ) Override this post-filter method to specify if a reference to a piece of geometry is permitted to be selected. Declaration public override bool AllowReference(Reference reference, XYZ position) Parameters Type Name Description Reference reference A candidate reference in selection operation. XYZ position The 3D position of the mouse on the candidate reference. Returns Type Description bool Return true to allow the user to select this candidate reference. Return false to prevent selection of this candidate. Overrides PickSelectionFilter.AllowReference(Reference, XYZ) Remarks If an exception is thrown from this method, the element will not be permitted to be selected. Implements Autodesk.Revit.UI.Selection.ISelectionFilter Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.PickSelectionFilters.html": {
    "href": "api/DynamoForRevitUtils.Entities.PickSelectionFilters.html",
    "title": "Namespace DynamoForRevitUtils.Entities.PickSelectionFilters | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Entities.PickSelectionFilters Classes CategorySelectionFilter Category selection filter MultiCategorySelectionFilter Category selection filter NoFilter Selection filter that allows all elements PickSelectionFilter Base class for Pick Selection Filters WallSelectionFilter Wall selection filter based on WallKind"
  },
  "api/DynamoForRevitUtils.Entities.Section.html": {
    "href": "api/DynamoForRevitUtils.Entities.Section.html",
    "title": "Class Section | DynamoForRevitUtils - Docs",
    "summary": "Class Section Object that holds information about a Revit Section View Inheritance object Section Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class Section Properties Data Section view creation data Declaration public SectionCreationData Data { get; } Property Value Type Description SectionCreationData SectionView Revit View representing Section View Declaration public ViewSection SectionView { get; } Property Value Type Description ViewSection Methods Create(Document, SectionCreationData, ViewFamilyType, ushort, bool, View?) Creates a new Section View on Revit Document based on section creation data object. Declaration public static Section Create(Document document, SectionCreationData data, ViewFamilyType viewFamilyType, ushort scale = 100, bool flip = false, View? viewTemplate = null) Parameters Type Name Description Document document Revit Document SectionCreationData data Section creation data ViewFamilyType viewFamilyType Section view family type ushort scale Section view scale bool flip Choose whether you wants to flip the Section View or not View viewTemplate View template to be applied on the Section View Returns Type Description Section Created Section as Section Object Remarks MUST BE USED INSIDE A TRANSACTION ! See Also Revit API Developer Guide - About views Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.SectionCreationData.html": {
    "href": "api/DynamoForRevitUtils.Entities.SectionCreationData.html",
    "title": "Class SectionCreationData | DynamoForRevitUtils - Docs",
    "summary": "Class SectionCreationData Object that holds data to create a Section View in Revit Inheritance object SectionCreationData Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class SectionCreationData Constructors SectionCreationData(Axis, double, double) Use this overload to create Section Views with SYMMETRIC crop regions Declaration public SectionCreationData(Axis axis, double farClipOffset, double cropValue) Parameters Type Name Description Axis axis Axis used to create Section View double farClipOffset Value representing the Section View deepness double cropValue Value representing the Section view port opening SectionCreationData(Axis, double, double, double, double, double, double) Use this overload to create Section Views with ASYMMETRIC crop regions Declaration public SectionCreationData(Axis axis, double farClipOffset, double cropValue, double xPosOffset = 0, double xNegOffset = 0, double yPosOffset = 0, double yNegOffset = 0) Parameters Type Name Description Axis axis Axis used to create Section View double farClipOffset Value representing the Section View deepness double cropValue Value representing the Section view port opening double xPosOffset Right direction offset. Use this argument for asymmetric crop regions. double xNegOffset Right direction reversed offset. Use this argument for asymmetric crop regions. double yPosOffset Up direction offset. Use this argument for asymmetric crop regions. double yNegOffset Up direction reversed offset. Use this argument for asymmetric crop regions. Properties Axis Axis to create Section Declaration public Axis Axis { get; set; } Property Value Type Description Axis CropValue Section view port opening value. Use this property for symmetric crop regions Declaration public double CropValue { get; set; } Property Value Type Description double FarClipOffset Section View far clip offset Declaration public double FarClipOffset { get; set; } Property Value Type Description double XNegOffset Right direction reversed offset. Use this property for asymmetric crop regions. Declaration public double XNegOffset { get; set; } Property Value Type Description double XPosOffset Right direction offset. Use this property for asymmetric crop regions. Declaration public double XPosOffset { get; set; } Property Value Type Description double YNegOffset Up direction reversed offset. Use this property for asymmetric crop regions. Declaration public double YNegOffset { get; set; } Property Value Type Description double YPosOffset Up direction offset. Use this property for asymmetric crop regions. Declaration public double YPosOffset { get; set; } Property Value Type Description double Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.SelectionResults.html": {
    "href": "api/DynamoForRevitUtils.Entities.SelectionResults.html",
    "title": "Class SelectionResults | DynamoForRevitUtils - Docs",
    "summary": "Class SelectionResults Class containing Data of Selection Inheritance object SelectionResults Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class SelectionResults Constructors SelectionResults() Declaration public SelectionResults() Properties ActiveView Active view Declaration public View ActiveView { get; set; } Property Value Type Description View Elements Elements selected Declaration public List<Element> Elements { get; set; } Property Value Type Description List<Element> GroupedElements Elements grouped by selected categories Declaration public List<List<Element>>? GroupedElements { get; } Property Value Type Description List<List<Element>> GroupedRevitLinkInstances RevitLinkInstances grouped by selected categories Declaration public List<List<RevitLinkInstance?>>? GroupedRevitLinkInstances { get; } Property Value Type Description List<List<RevitLinkInstance>> RevitLinkInstances Link instance selected Declaration public List<RevitLinkInstance?> RevitLinkInstances { get; set; } Property Value Type Description List<RevitLinkInstance> Settings Settings of Selection Declaration public SelectionSettings Settings { get; set; } Property Value Type Description SelectionSettings Methods GroupByCategory() Returns a main List containing two lists: [0] Elements grouped by selected categories [1] RevitLinkInstances grouped by selected categories Declaration protected IList GroupByCategory() Returns Type Description IList ToDictionary() Converts SelectionResults to a dictionary where: Key: Element (Selected element) Value: RevitLinkInstance (All RevitLinkInstances which the element belongs to) Declaration public Dictionary<Element, RevitLinkInstance?> ToDictionary() Returns Type Description Dictionary<Element, RevitLinkInstance> ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.SelectionSettings.html": {
    "href": "api/DynamoForRevitUtils.Entities.SelectionSettings.html",
    "title": "Class SelectionSettings | DynamoForRevitUtils - Docs",
    "summary": "Class SelectionSettings Class containing Selection Data used in Revit UI Selection Inheritance object SelectionSettings Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class SelectionSettings Constructors SelectionSettings(ElementFilter) Constructs a new SelectionData Declaration public SelectionSettings(ElementFilter collectorFilter) Parameters Type Name Description ElementFilter collectorFilter Filter to be used for FilteredElementCollector SelectionSettings(string, ObjectType) Constructs a new SelectionData Declaration public SelectionSettings(string prompt, ObjectType objectType) Parameters Type Name Description string prompt Selection prompt showed to user on Revit status bar ObjectType objectType Type of object to be selected SelectionSettings(string, ObjectType, PickSelectionFilter) Constructs a new SelectionData Declaration public SelectionSettings(string prompt, ObjectType objectType, PickSelectionFilter pickSelectionFilter) Parameters Type Name Description string prompt Selection prompt showed to user on Revit status bar ObjectType objectType Type of object to be selected PickSelectionFilter pickSelectionFilter PickSelectionFilter to be applied on pick selection SelectionSettings(string, ObjectType, PickSelectionFilter, ElementFilter) Constructs a new SelectionData Declaration public SelectionSettings(string prompt, ObjectType objectType, PickSelectionFilter pickSelectionFilter, ElementFilter collectorFilter) Parameters Type Name Description string prompt Selection prompt showed to user on Revit status bar ObjectType objectType Type of object to be selected PickSelectionFilter pickSelectionFilter PickSelectionFilter to be applied on pick selection ElementFilter collectorFilter Filter to be used for FilteredElementCollector Properties CollectorFilter Filter used by FilteredElementCollector Declaration public ElementFilter CollectorFilter { get; set; } Property Value Type Description ElementFilter ObjectType Object type to pickSelectionFilter Declaration public ObjectType ObjectType { get; set; } Property Value Type Description ObjectType PickSelectionFilter Filter used when picking elements Declaration public PickSelectionFilter PickSelectionFilter { get; set; } Property Value Type Description PickSelectionFilter Prompt Selection prompt showed to user on Revit status bar Declaration public string Prompt { get; set; } Property Value Type Description string Methods ShowElementsSelectionDialog(string, string) Show elements selection dialog Declaration public void ShowElementsSelectionDialog(string mainInstruction, string mainContent) Parameters Type Name Description string mainInstruction string mainContent ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.WallElevation.html": {
    "href": "api/DynamoForRevitUtils.Entities.WallElevation.html",
    "title": "Class WallElevation | DynamoForRevitUtils - Docs",
    "summary": "Class WallElevation Class containing data to create a Wall Elevation Inheritance object WallElevation Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class WallElevation Constructors WallElevation(string, Wall, ViewFamilyType, double, bool, CropRegionOffsetSettings?) Construct object that holds data to create Wall Elevation Declaration public WallElevation(string name, Wall wall, ViewFamilyType viewFamilyType, double elevationOffset = 1, bool flip = false, CropRegionOffsetSettings? cropRegionOffsetSettings = null) Parameters Type Name Description string name Elevation View Name. Must be unique Wall wall Revit Wall to create elevation ViewFamilyType viewFamilyType The Elevation Type double elevationOffset Distance of Elevation Marker from Wall bool flip Whether elevation must be flipped or not CropRegionOffsetSettings cropRegionOffsetSettings Crop Region Shape offset settings. The default Crop Region Shape is defined by planar Wall boundary curves. Leave null to use default Crop Region Shape without offset. Properties CropRegionOffsetSettings Crop Region Shape offset from Wall Declaration public CropRegionOffsetSettings CropRegionOffsetSettings { get; } Property Value Type Description CropRegionOffsetSettings Elevation Elevation View Section Declaration public ViewSection Elevation { get; } Property Value Type Description ViewSection ElevationMarker Elevation View Elevation Marker Declaration public ElevationMarker ElevationMarker { get; } Property Value Type Description ElevationMarker ElevationPoint Elevation Marker Location Point Declaration public Point ElevationPoint { get; } Property Value Type Description Point FarClipOffset Elevation Far Clip Offset calculated from Wall Width and Elevation Point Declaration public double FarClipOffset { get; } Property Value Type Description double Flipped Whether Elevation is flipped or not Declaration public bool Flipped { get; } Property Value Type Description bool Name Elevation View Name Declaration public string Name { get; } Property Value Type Description string OffsetFromWall Elevation Symbol offset from Wall Declaration public double OffsetFromWall { get; } Property Value Type Description double Scale Elevation View Scale Declaration public int Scale { get; } Property Value Type Description int ViewFamilyType Elevation View Family Type Declaration public ViewFamilyType ViewFamilyType { get; } Property Value Type Description ViewFamilyType Wall Wall associated with Elevation Declaration public Wall Wall { get; } Property Value Type Description Wall WallBaseLine Line created by Location Curve of Wall, by getting its StartPoint and EndPoint Declaration public Line WallBaseLine { get; } Property Value Type Description Line WallCenterPoint Wall base line mid point Declaration public Point WallCenterPoint { get; } Property Value Type Description Point WallLocationCurve Wall location curve as returned by Revit API Declaration public Curve WallLocationCurve { get; } Property Value Type Description Curve WallMidPoint Wall location curve mid point Declaration public Point WallMidPoint { get; } Property Value Type Description Point WallNormal Wall normal vector Declaration public Vector WallNormal { get; } Property Value Type Description Vector Exceptions Type Condition ArgumentNullException Throws if assigned value was null Methods CreateElevationView(ViewPlan, int, RevitLinkInstance?, bool) Creates a new Elevation View aligned to the Wall. Declaration public void CreateElevationView(ViewPlan viewPlan, int scale = 100, RevitLinkInstance? linkInstance = null, bool attachToGrid = false) Parameters Type Name Description ViewPlan viewPlan Plan View to create elevation int scale View scale RevitLinkInstance linkInstance Revit Link Instance which Wall belongs bool attachToGrid Set true if you want to attach this Elevation to the Wall nearest parallel Grid. ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.Wrappers.ElementWrapper.html": {
    "href": "api/DynamoForRevitUtils.Entities.Wrappers.ElementWrapper.html",
    "title": "Class ElementWrapper | DynamoForRevitUtils - Docs",
    "summary": "Class ElementWrapper Represents an abstract base class for wrapping Revit elements. Provides common properties and methods for derived wrapper classes. Inheritance object ElementWrapper FamilyInstanceWrapper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.Wrappers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class ElementWrapper Remarks Use this class in conjunction with the IElementParameterMap AssociatedParameterNameAttribute attribute to enhance the way you access element parameters. The ElementWrapper class represents the Revit Element and the IElementParameterMap represents the parameters of this element. To use these classes together, proceed as follows: Create classes derived from ElementWrapper to represent specific characteristics of the elements you want to represent. Create properties of type ElementParameter in classes derived from IElementParameterMap to represent element parameters. Use the AssociatedParameterNameAttribute attribute to link properties of the class derived from ElementWrapper with the properties of the class derived from IElementParameterMap This way you will no longer need to worry about fetching parameters from elements every time you need to get/set their values. Use the properties of the class derived from ElementWrapper normally and their values will be automatically get/set from/to the element instances in Revit. Examples [IsVisibleInDynamoLibrary(false)] public class CableTrayWrapper : ElementWrapper { internal CableTrayWrapper( Element element, params IEnumerable<IElementParameterMap> parameters ) : base(element, parameters) { } [AssociatedParameterName(nameof(CableTrayParameters.Comments))] public string Comments { get => ParameterAccessor.GetStringValue(); set => ParameterAccessor.SetValue(value); } [AssociatedParameterName(nameof(CableTrayParameters.IDR))] public bool IDR { get => ParameterAccessor.GetBoolValue(); set => ParameterAccessor.SetValue(value); } [AssociatedParameterName(nameof(CableTrayParameters.Elevation))] public double Elevation { get => ParameterAccessor.GetDoubleValue(); set => ParameterAccessor.SetValue(value, SpecTypeId.Length); } } public class CableTrayParameters : ElementParameterMap<CableTrayParameters> { // Properties should be public. Recommended to be init. public ElementParameter Comments { get; init; } public ElementParameter IDR { get; init; } public ElementParameter Elevation { get; init; } // Constructor made private to not appear in Dynamo Library private CableTrayParameters() { } // Static constructor shown as Dynamo Node in Library public static CableTrayParameters Create( ElementParameter comments, ElementParameter idr, ElementParameter elevation ) => new() { Comments = comments, IDR = idr, Elevation = elevation }; } Constructors ElementWrapper(Element, params IEnumerable<IElementParameterMap>) Constructs a new instance of ElementWrapper. Declaration public ElementWrapper(Element element, params IEnumerable<IElementParameterMap> parameterMaps) Parameters Type Name Description Element element The Element to be wrapped. IEnumerable<IElementParameterMap> parameterMaps The parameter indexers associated with the element. Properties Element Declaration public Element Element { get; } Property Value Type Description Element ParameterAccessor Declaration public ElementParameterAccessor ParameterAccessor { get; } Property Value Type Description ElementParameterAccessor ParameterMaps Declaration public IEnumerable<IElementParameterMap> ParameterMaps { get; } Property Value Type Description IEnumerable<IElementParameterMap> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.Wrappers.FamilyInstanceWrapper.html": {
    "href": "api/DynamoForRevitUtils.Entities.Wrappers.FamilyInstanceWrapper.html",
    "title": "Class FamilyInstanceWrapper | DynamoForRevitUtils - Docs",
    "summary": "Class FamilyInstanceWrapper Represents an abstract wrapper class for Revit family instances. Inheritance object ElementWrapper FamilyInstanceWrapper Inherited Members ElementWrapper.Element ElementWrapper.ParameterMaps ElementWrapper.ParameterAccessor object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Entities.Wrappers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public abstract class FamilyInstanceWrapper : ElementWrapper Constructors FamilyInstanceWrapper(FamilyInstance, params IEnumerable<IElementParameterMap>) Constructs a new instance of FamilyInstanceWrapper. Declaration protected FamilyInstanceWrapper(FamilyInstance famInst, params IEnumerable<IElementParameterMap> parameterMaps) Parameters Type Name Description FamilyInstance famInst The FamilyInstance to be wrapped. IEnumerable<IElementParameterMap> parameterMaps The parameter associated with the family instance. Exceptions Type Condition ArgumentNullException Thrown when famInst is null. Properties FamilyInstance Represents the wrapped FamilyInstance. Declaration public FamilyInstance FamilyInstance { get; } Property Value Type Description FamilyInstance Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.Wrappers.IElementParameterMap.html": {
    "href": "api/DynamoForRevitUtils.Entities.Wrappers.IElementParameterMap.html",
    "title": "Interface IElementParameterMap | DynamoForRevitUtils - Docs",
    "summary": "Interface IElementParameterMap Represents a mapping between property names and their corresponding element parameters. Namespace: DynamoForRevitUtils.Entities.Wrappers Assembly: DynamoForRevitUtils.dll Syntax public interface IElementParameterMap Remarks This interface provides functionality to retrieve a collection of mappings that represent the relationship between property names and element parameters. It is intended to be implemented by classes to handle specific mappings. Methods GetItems() Retrieves a collection of items that represent the mapping between property names and corresponding element parameters in an element parameter map. Declaration IEnumerable<ElementParameterMapItem> GetItems() Returns Type Description IEnumerable<ElementParameterMapItem> A collection of ElementParameterMapItem representing the mappings. Remarks The method inspects the properties of the implementing type to identify properties of type ElementParameter and adds them to the list of map items. Exceptions Type Condition Exception Throw if no properties of type ElementParameter are found. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.Wrappers.IElementWrapper.html": {
    "href": "api/DynamoForRevitUtils.Entities.Wrappers.IElementWrapper.html",
    "title": "Interface IElementWrapper | DynamoForRevitUtils - Docs",
    "summary": "Interface IElementWrapper Represents an interface for wrapping Revit elements. Namespace: DynamoForRevitUtils.Entities.Wrappers Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public interface IElementWrapper Properties Element Represents the Revit Element associated with this wrapper object. Declaration Element Element { get; } Property Value Type Description Element ParameterAccessor Provides access to manipulate and retrieve parameter values of a Revit element through the associated element wrapper. Declaration ElementParameterAccessor ParameterAccessor { get; } Property Value Type Description ElementParameterAccessor ParameterMaps Parameter indexers associated with the element. Declaration IEnumerable<IElementParameterMap> ParameterMaps { get; } Property Value Type Description IEnumerable<IElementParameterMap> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Entities.Wrappers.html": {
    "href": "api/DynamoForRevitUtils.Entities.Wrappers.html",
    "title": "Namespace DynamoForRevitUtils.Entities.Wrappers | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Entities.Wrappers Classes ElementWrapper Represents an abstract base class for wrapping Revit elements. Provides common properties and methods for derived wrapper classes. FamilyInstanceWrapper Represents an abstract wrapper class for Revit family instances. Interfaces IElementParameterMap Represents a mapping between property names and their corresponding element parameters. IElementWrapper Represents an interface for wrapping Revit elements."
  },
  "api/DynamoForRevitUtils.Entities.html": {
    "href": "api/DynamoForRevitUtils.Entities.html",
    "title": "Namespace DynamoForRevitUtils.Entities | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Entities Classes Axis Represents an axis in the DynamoForRevitUtils library. CompoundStructureLayersInfo Class for storing information about Autodesk.Revit.DB.WallType layers CropRegionOffsetSettings Crop Region Offset Settings GetUnitsResultData Represents the data resulting from an attempt to retrieve the unit type or specification ID along with a description and result status. MEPCurveReferences Class containing utils References from MEP Curves Section Object that holds information about a Revit Section View SectionCreationData Object that holds data to create a Section View in Revit SelectionResults Class containing Data of Selection SelectionSettings Class containing Selection Data used in Revit UI Selection WallElevation Class containing data to create a Wall Elevation"
  },
  "api/DynamoForRevitUtils.Enumerations.AccessParameterInfo.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.AccessParameterInfo.html",
    "title": "Class AccessParameterInfo | DynamoForRevitUtils - Docs",
    "summary": "Class AccessParameterInfo Represents the data associated with accessing a parameter, including its value, a description, and the result of the access operation. Inheritance object AccessParameterInfo Implements IEquatable<AccessParameterInfo> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public record AccessParameterInfo : IEquatable<AccessParameterInfo> Constructors AccessParameterInfo(ElementParameter, string?, AccessParameterResult?) Constructs a new instance of AccessParameterInfo. Declaration public AccessParameterInfo(ElementParameter parameter, string? description = null, AccessParameterResult? result = null) Parameters Type Name Description ElementParameter parameter The element parameter used in the access operation. string description A description of the parameter access operation. AccessParameterResult? result The result of the parameter access operation. Exceptions Type Condition ArgumentNullException Thrown when parameter or description is null. AccessParameterInfo(AccessParameterInfo) Declaration protected AccessParameterInfo(AccessParameterInfo original) Parameters Type Name Description AccessParameterInfo original Properties Description A description of the parameter. Declaration public string Description { get; set; } Property Value Type Description string EqualityContract Declaration protected virtual Type EqualityContract { get; } Property Value Type Description Type Parameter The value of the element parameter. Declaration public ElementParameter Parameter { get; set; } Property Value Type Description ElementParameter Result The result of the parameter access operation. Declaration public AccessParameterResult Result { get; set; } Property Value Type Description AccessParameterResult Methods Equals(AccessParameterInfo?) Declaration public virtual bool Equals(AccessParameterInfo? other) Parameters Type Name Description AccessParameterInfo other Returns Type Description bool Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() PrintMembers(StringBuilder) Declaration protected virtual bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators operator ==(AccessParameterInfo?, AccessParameterInfo?) Declaration public static bool operator ==(AccessParameterInfo? left, AccessParameterInfo? right) Parameters Type Name Description AccessParameterInfo left AccessParameterInfo right Returns Type Description bool operator !=(AccessParameterInfo?, AccessParameterInfo?) Declaration public static bool operator !=(AccessParameterInfo? left, AccessParameterInfo? right) Parameters Type Name Description AccessParameterInfo left AccessParameterInfo right Returns Type Description bool Implements IEquatable<T> Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.AccessParameterMode.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.AccessParameterMode.html",
    "title": "Enum AccessParameterMode | DynamoForRevitUtils - Docs",
    "summary": "Enum AccessParameterMode Represents the mode of access for parameters within the Dynamo for Revit utilities. Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum AccessParameterMode Fields Name Description ParameterOnly Specifies that the target parameter should be considered without its associated value. This mode is typically used when only the parameter's presence or metadata is relevant. ParameterWithValue Specifies that the target parameter, along with its associated value, should be considered. This mode is typically used when both the parameter's metadata and its value are relevant. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.AccessParameterResult.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.AccessParameterResult.html",
    "title": "Enum AccessParameterResult | DynamoForRevitUtils - Docs",
    "summary": "Enum AccessParameterResult Indicates that a parameter value has been successfully set. Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum AccessParameterResult Remarks This result is returned when the operation completes successfully and the parameter value is updated to the specified input. Fields Name Description ElementNotFound Indicates that the specified element could not be found. InvalidDataType Represents a scenario where the parameter data type is invalid or unrecognized. InvalidElementKind Indicates that the specified element's kind is invalid for the operation. InvalidSpecTypeId Represents an invalid specification when attempting to retrieve units. InvalidUnitTypeId Indicates that the unit type identifier associated with a parameter is invalid or unsupported. InvalidValue Represents a condition where the retrieved parameter value is invalid or improperly formatted. NullElementParameter Represents a condition where the specified element parameter is null. ParameterFound Represents a condition where the specified element parameter is found. ParameterNotFound Indicates that the specified parameter does not exist or cannot be located. UnitFound Represents a condition where the Autodesk.Revit.DB.UnitTypeId associated with a parameter was successfully identified. ValueFound Represents a condition where the requested parameter value was successfully retrieved. ValueNotFound Represents a condition where the requested parameter value could not be retrieved because it is not present or accessible in the given context. ValueSet Indicates that the parameter value was successfully set. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.Coordinate.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.Coordinate.html",
    "title": "Enum Coordinate | DynamoForRevitUtils - Docs",
    "summary": "Enum Coordinate Enum to indicate the coordinate to be used Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum Coordinate Fields Name Description X X Coordinate Y Y Coordinate Z Z Coordinate Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.DoubleParameterConvertionMode.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.DoubleParameterConvertionMode.html",
    "title": "Enum DoubleParameterConvertionMode | DynamoForRevitUtils - Docs",
    "summary": "Enum DoubleParameterConvertionMode Specifies the modes of conversion for double parameters. Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum DoubleParameterConvertionMode Fields Name Description UseActiveDocumentUnits Represents the option to use the current document display units for convertion of a double parameter. UseElementDocumentUnits Represents the option to use the document display units of an element for double parameter convertion. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.ElementParameterYesNoValue.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.ElementParameterYesNoValue.html",
    "title": "Enum ElementParameterYesNoValue | DynamoForRevitUtils - Docs",
    "summary": "Enum ElementParameterYesNoValue Represents the possible values for a yes or no parameter in a Revit element. Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum ElementParameterYesNoValue Fields Name Description No Represents the \"No\" value in Yes Represents a \"Yes\" value in the context of ElementParameterYesNoValue Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.ParameterDataType.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.ParameterDataType.html",
    "title": "Enum ParameterDataType | DynamoForRevitUtils - Docs",
    "summary": "Enum ParameterDataType Represents an undefined storage type for ElementParameter values. Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum ParameterDataType Remarks This value is used as a default or placeholder to indicate that the data type has not been set or is not recognized within the context of the ParameterDataType enumeration. Fields Name Description Boolean Specifies that the parameter stores boolean values. Decimal Specifies that the parameter stores numerical values, including decimals. ElementId Specifies that the parameter stores an ElementId value. Integer Specifies that the parameter stores integer values. Text Specifies that the parameter stores text values. Undefined Represents an undefined state for the data type of a parameter. YesNo Specifies that the parameter stores boolean values represented as Yes or No. Extension Methods Converters.ToStorageType(ParameterDataType) ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.ParameterKind.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.ParameterKind.html",
    "title": "Enum ParameterKind | DynamoForRevitUtils - Docs",
    "summary": "Enum ParameterKind Enum to define the kind of parameter Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum ParameterKind Fields Name Description Instance Parameter of kind Instance Type Parameter of kind Type Undefined Undefined kind Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.ParameterValidationResult.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.ParameterValidationResult.html",
    "title": "Enum ParameterValidationResult | DynamoForRevitUtils - Docs",
    "summary": "Enum ParameterValidationResult Represents the validation options for a parameter. Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum ParameterValidationResult Fields Name Description InvalidValue When the parameter value is invalid. NotConvertibleValue When the parameter value is not convertible NotFound Represents the validation result for a parameter. UndefinedStorageType When the parameter StorageType is invalid. ValidValue When the parameter value is valid. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.RoofLineType.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.RoofLineType.html",
    "title": "Enum RoofLineType | DynamoForRevitUtils - Docs",
    "summary": "Enum RoofLineType Enum that defines Roof Line Types. Used in Roof Tiles Generator Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum RoofLineType Fields Name Description Eave The Eave represents an enum member of the RoofLineType enum. Hip Enum member for Hip in the RoofLineType enum. Represents a hip roof line type. Ridge Enum member that represents the ridge roof line type. Undefined Represents an undefined roof line type. Valley Enum that defines Roof Line Types. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.SelectionMethod.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.SelectionMethod.html",
    "title": "Enum SelectionMethod | DynamoForRevitUtils - Docs",
    "summary": "Enum SelectionMethod Enumeration containing Selection Methods for Selection Nodes usage Namespace: DynamoForRevitUtils.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public enum SelectionMethod Fields Name Description AllElements Make selection nodes returns all objects from model AllElementsFromActiveView Make selection nodes returns all objects from active view Manual Enable selection nodes to method PickObjects Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Enumerations.html": {
    "href": "api/DynamoForRevitUtils.Enumerations.html",
    "title": "Namespace DynamoForRevitUtils.Enumerations | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Enumerations Enums AccessParameterMode Represents the mode of access for parameters within the Dynamo for Revit utilities. AccessParameterResult Indicates that a parameter value has been successfully set. Coordinate Enum to indicate the coordinate to be used DoubleParameterConvertionMode Specifies the modes of conversion for double parameters. ElementParameterYesNoValue Represents the possible values for a yes or no parameter in a Revit element. ParameterDataType Represents an undefined storage type for ElementParameter values. ParameterKind Enum to define the kind of parameter ParameterValidationResult Represents the validation options for a parameter. RoofLineType Enum that defines Roof Line Types. Used in Roof Tiles Generator SelectionMethod Enumeration containing Selection Methods for Selection Nodes usage"
  },
  "api/DynamoForRevitUtils.Factories.AbstractGeometryFactory.html": {
    "href": "api/DynamoForRevitUtils.Factories.AbstractGeometryFactory.html",
    "title": "Class AbstractGeometryFactory | DynamoForRevitUtils - Docs",
    "summary": "Class AbstractGeometryFactory Factory class for Abstract Geometry Inheritance object AbstractGeometryFactory Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Factories Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class AbstractGeometryFactory Methods GetAbstractGeometryObject(DesignScriptEntity) Get Abstract Geometry object from DesignScriptEntity Declaration public static IAbstractGeometry GetAbstractGeometryObject(DesignScriptEntity designScriptEntity) Parameters Type Name Description DesignScriptEntity designScriptEntity Returns Type Description IAbstractGeometry"
  },
  "api/DynamoForRevitUtils.Factories.html": {
    "href": "api/DynamoForRevitUtils.Factories.html",
    "title": "Namespace DynamoForRevitUtils.Factories | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Factories Classes AbstractGeometryFactory Factory class for Abstract Geometry"
  },
  "api/DynamoForRevitUtils.Services.Collections.EnumerableServices.html": {
    "href": "api/DynamoForRevitUtils.Services.Collections.EnumerableServices.html",
    "title": "Class EnumerableServices | DynamoForRevitUtils - Docs",
    "summary": "Class EnumerableServices Provides utility methods for working with IEnumerable objects. Inheritance object EnumerableServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Collections Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class EnumerableServices Methods DoIfHasAny<T>(IEnumerable<T>, Action<IEnumerable<T>>) Executes the specified action if the collection has any elements. Declaration public static void DoIfHasAny<T>(this IEnumerable<T> data, Action<IEnumerable<T>> action) Parameters Type Name Description IEnumerable<T> data The collection to check. Action<IEnumerable<T>> action The action to execute on the collection. Type Parameters Name Description T The type of elements in the collection. Remarks Null safe method Examples List<int> numbers = new List<int> { 1, 2, 3, 4, 5 }; numbers.DoIfHasAny(n => Console.WriteLine(n)); DoIfHasAny<T>(IEnumerable<T>?, Predicate<T>, Action<IEnumerable<T>>) Executes the specified action if the collection has any elements that match the conditions defined by the specified predicate. Declaration public static void DoIfHasAny<T>(this IEnumerable<T>? data, Predicate<T> predicate, Action<IEnumerable<T>> action) Parameters Type Name Description IEnumerable<T> data The collection to check. Predicate<T> predicate The predicate to test each element for a condition. Action<IEnumerable<T>> action The action to execute on the collection. Type Parameters Name Description T The type of elements in the collection. Remarks Null safe method Examples var numbers = new List<int> { 1, 2, 3, 4, 5 }; Predicate<int> isEven = x => x % 2 == 0; Action<IEnumerable<int>> print = x => Console.WriteLine(string.Join(\", \", x)); numbers.DoIfHasAny(isEven, print); // Outputs: \"2, 4\" HasAny<T>(IEnumerable<T>?) Determines whether the specified collection has any elements. Declaration public static bool HasAny<T>(this IEnumerable<T>? data) Parameters Type Name Description IEnumerable<T> data The collection to check. Returns Type Description bool True if the collection has any elements; otherwise, false. Type Parameters Name Description T The type of elements in the collection. Remarks Null safe method HasAny<T>(IEnumerable<T>?, Predicate<T>) Determines whether the specified collection has any elements that match the conditions defined by the specified predicate. Declaration public static bool HasAny<T>(this IEnumerable<T>? data, Predicate<T> predicate) Parameters Type Name Description IEnumerable<T> data The collection to check. Predicate<T> predicate The predicate to test each element for a condition. Returns Type Description bool True if the collection has any elements; otherwise, false. Type Parameters Name Description T The type of elements in the collection. Remarks Null safe method Examples List<int> numbers = new List<int> { 1, 2, 3, 4, 5 }; Predicate<int> isEven = x => x % 2 == 0; bool hasEvenNumbers = numbers.HasAny(isEven); // returns true"
  },
  "api/DynamoForRevitUtils.Services.Collections.html": {
    "href": "api/DynamoForRevitUtils.Services.Collections.html",
    "title": "Namespace DynamoForRevitUtils.Services.Collections | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.Collections Classes EnumerableServices Provides utility methods for working with IEnumerable objects."
  },
  "api/DynamoForRevitUtils.Services.Collectors.CategoryCollectors.html": {
    "href": "api/DynamoForRevitUtils.Services.Collectors.CategoryCollectors.html",
    "title": "Class CategoryCollectors | DynamoForRevitUtils - Docs",
    "summary": "Class CategoryCollectors Revit Categories collectors Inheritance object CategoryCollectors Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Collectors Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class CategoryCollectors Methods GetAllRevitCategories(Document, CategoryType?) Returns all Revit Categories Declaration public static List<Category> GetAllRevitCategories(this Document doc, CategoryType? categoryType = null) Parameters Type Name Description Document doc Document to get categories CategoryType? categoryType Category Type to filter categories. Leave null to get all. Returns Type Description List<Category> GetLinesSubCategories(Document) Get Lines Sub Categories Declaration public static List<Category> GetLinesSubCategories(this Document doc) Parameters Type Name Description Document doc Revit Document to get Lines Sub Categories Returns Type Description List<Category> GetTagCategories() Get all Revit Tag Categories Declaration public static List<BuiltInCategory> GetTagCategories() Returns Type Description List<BuiltInCategory> List of Tags built in Categories"
  },
  "api/DynamoForRevitUtils.Services.Collectors.GenericCollectors.html": {
    "href": "api/DynamoForRevitUtils.Services.Collectors.GenericCollectors.html",
    "title": "Class GenericCollectors | DynamoForRevitUtils - Docs",
    "summary": "Class GenericCollectors Generic Collectors Inheritance object GenericCollectors Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Collectors Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class GenericCollectors Methods GetAllElementTypesOfCategory<TCast>(Document, BuiltInCategory) Get all Element Types of Category Declaration public static List<TCast> GetAllElementTypesOfCategory<TCast>(this Document doc, BuiltInCategory cat) where TCast : ElementType Parameters Type Name Description Document doc Document to get element types BuiltInCategory cat Category to get element types Returns Type Description List<TCast> Collected elements casted to TCast Type Parameters Name Description TCast Type derived from Autodesk.Revit.DB.Element to cast collected elements GetAllElementTypesOfClass<TClass>(Document) Get all Element Types of class. Declaration public static List<TClass> GetAllElementTypesOfClass<TClass>(this Document doc) where TClass : ElementType Parameters Type Name Description Document doc Document to get element types Returns Type Description List<TClass> Collected ElementTypes of type TClass Type Parameters Name Description TClass Derived class from Autodesk.Revit.DB.ElementType to get element types GetAllElementsOfCategory<TCast>(Document, BuiltInCategory, View?, ElementFilter?) Get all elements of Category Declaration public static List<TCast> GetAllElementsOfCategory<TCast>(this Document doc, BuiltInCategory cat, View? view = null, ElementFilter? filter = null) where TCast : Element Parameters Type Name Description Document doc Document to get elements BuiltInCategory cat Category to get elements View view View to get visible elements in it. Leave null to not consider the view on filtering ElementFilter filter Filter to be applied on elements. Leave null to not apply. Returns Type Description List<TCast> Collected elements casted to TCast Type Parameters Name Description TCast Type derived from Autodesk.Revit.DB.Element to cast collected elements GetAllElementsOfClass<TClass>(Document, View?, ElementFilter?) Get all elements of class. Declaration public static List<TClass> GetAllElementsOfClass<TClass>(this Document doc, View? view = null, ElementFilter? filter = null) where TClass : Element Parameters Type Name Description Document doc Document to get elements View view View to get visible elements in it. Leave null to not consider the view on filtering ElementFilter filter Filter to be applied on elements. Leave null to not apply. Returns Type Description List<TClass> Collected Elements of type TClass Type Parameters Name Description TClass Derived class from Autodesk.Revit.DB.Element to get elements GetAllFamilySymbolsOfCategory(Document, BuiltInCategory) Get all Family Symbols (active or not) of Category. Declaration public static List<FamilySymbol> GetAllFamilySymbolsOfCategory(this Document doc, BuiltInCategory cat) Parameters Type Name Description Document doc Document to get family symbols BuiltInCategory cat Category to get family symbols Returns Type Description List<FamilySymbol> Collected Family Symbols"
  },
  "api/DynamoForRevitUtils.Services.Collectors.LineStyleCollectors.html": {
    "href": "api/DynamoForRevitUtils.Services.Collectors.LineStyleCollectors.html",
    "title": "Class LineStyleCollectors | DynamoForRevitUtils - Docs",
    "summary": "Class LineStyleCollectors Line Styles collectors Inheritance object LineStyleCollectors Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Collectors Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class LineStyleCollectors Methods AllCutStyles(Document) Collects all Cut Line Styles from Document Declaration public static List<GraphicsStyle> AllCutStyles(this Document doc) Parameters Type Name Description Document doc Revit Document to collect Line Styles Returns Type Description List<GraphicsStyle> Line Styles AllProjectionStyles(Document) Collects all Projection Line Styles from Document Declaration public static List<GraphicsStyle> AllProjectionStyles(this Document doc) Parameters Type Name Description Document doc Revit Document to collect Line Styles Returns Type Description List<GraphicsStyle> Line Styles"
  },
  "api/DynamoForRevitUtils.Services.Collectors.PhaseCollectors.html": {
    "href": "api/DynamoForRevitUtils.Services.Collectors.PhaseCollectors.html",
    "title": "Class PhaseCollectors | DynamoForRevitUtils - Docs",
    "summary": "Class PhaseCollectors Phases collectors Inheritance object PhaseCollectors Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Collectors Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class PhaseCollectors Methods GetPhaseIdByName(Document, string) Gets the Phase Id by its Name Declaration public static ElementId? GetPhaseIdByName(this Document doc, string phaseName) Parameters Type Name Description Document doc string phaseName Returns Type Description ElementId"
  },
  "api/DynamoForRevitUtils.Services.Collectors.RoomCollectors.html": {
    "href": "api/DynamoForRevitUtils.Services.Collectors.RoomCollectors.html",
    "title": "Class RoomCollectors | DynamoForRevitUtils - Docs",
    "summary": "Class RoomCollectors Rooms collectors Inheritance object RoomCollectors Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Collectors Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class RoomCollectors Methods GetAllInvalidRooms(Document, View?) Gets all invalid Rooms from Document Declaration public static List<Room> GetAllInvalidRooms(this Document doc, View? view = null) Parameters Type Name Description Document doc View view Returns Type Description List<Room> GetAllRoomSeparationLines(Document) Get all Room Separation Lines from Document Declaration public static List<ModelLine> GetAllRoomSeparationLines(this Document doc) Parameters Type Name Description Document doc Returns Type Description List<ModelLine> GetAllValidRooms(Document, View?) Gets all valid Rooms from Document Declaration public static List<Room> GetAllValidRooms(this Document doc, View? view = null) Parameters Type Name Description Document doc View view Returns Type Description List<Room> GetRoomFinishes(Document, Room, SpatialElementGeometryCalculator, SubfaceType, bool) Gets Room finishes given a SubFaceType Declaration public static List<Element> GetRoomFinishes(Document doc, Room room, SpatialElementGeometryCalculator calculator, SubfaceType subfaceType, bool includeLinkedElements = false) Parameters Type Name Description Document doc Room room SpatialElementGeometryCalculator calculator SubfaceType subfaceType SubFaceType to get finishes. Could be: Bottom, Top or Side bool includeLinkedElements Whether include linked elements in collector Returns Type Description List<Element> GetRoomSeparationLinesFromDesignOption(Document, ElementId) Get all Room Separation Lines from Document from Design Option Declaration public static List<Element> GetRoomSeparationLinesFromDesignOption(this Document doc, ElementId designOptionId) Parameters Type Name Description Document doc ElementId designOptionId Returns Type Description List<Element> GetValidRoomsFromActiveDesignOption(Document, View?) Gets all valid Rooms from Document from active Design option Declaration public static List<Room> GetValidRoomsFromActiveDesignOption(this Document doc, View? view = null) Parameters Type Name Description Document doc Document to get Rooms View view View to get visible elements in it. Leave null to not consider the view on filtering Returns Type Description List<Room> Valid Rooms placed o active Design Option GetValidRoomsFromDesignOption(Document, ElementId) Gets all valid Rooms from Document from active Design option Declaration public static List<Room> GetValidRoomsFromDesignOption(this Document doc, ElementId designOptionId) Parameters Type Name Description Document doc ElementId designOptionId Returns Type Description List<Room>"
  },
  "api/DynamoForRevitUtils.Services.Collectors.WallCollectors.html": {
    "href": "api/DynamoForRevitUtils.Services.Collectors.WallCollectors.html",
    "title": "Class WallCollectors | DynamoForRevitUtils - Docs",
    "summary": "Class WallCollectors Walls collectors Inheritance object WallCollectors Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Collectors Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class WallCollectors Methods GetBasic(Document, View?) Get all Basic Walls from Document Declaration public static List<Wall> GetBasic(this Document doc, View? view = null) Parameters Type Name Description Document doc View view View to get visible elements in it. Leave null to not consider the view on filtering Returns Type Description List<Wall>"
  },
  "api/DynamoForRevitUtils.Services.Collectors.html": {
    "href": "api/DynamoForRevitUtils.Services.Collectors.html",
    "title": "Namespace DynamoForRevitUtils.Services.Collectors | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.Collectors Classes CategoryCollectors Revit Categories collectors GenericCollectors Generic Collectors LineStyleCollectors Line Styles collectors PhaseCollectors Phases collectors RoomCollectors Rooms collectors WallCollectors Walls collectors"
  },
  "api/DynamoForRevitUtils.Services.Dynamo.BoundingBoxServices.html": {
    "href": "api/DynamoForRevitUtils.Services.Dynamo.BoundingBoxServices.html",
    "title": "Class BoundingBoxServices | DynamoForRevitUtils - Docs",
    "summary": "Class BoundingBoxServices Dynamo BoundingBox utils Inheritance object BoundingBoxServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Dynamo Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class BoundingBoxServices Methods AddPoint(BoundingBox, Point) Expand bounding box using a point Declaration public static BoundingBox AddPoint(this BoundingBox bbox, Point point) Parameters Type Name Description BoundingBox bbox Bounding box to offset by adding a point. Point point Returns Type Description BoundingBox GetBottomCenter(BoundingBox) Get bounding box bottom face center Declaration public static Point GetBottomCenter(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get bottom center Returns Type Description Point GetBottomSurface(BoundingBox) Get bounding box bottom surface Declaration public static Surface GetBottomSurface(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get bottom surface Returns Type Description Surface GetBottomSurfaceDiagonal(BoundingBox) Get bounding box bottom surface diagonal Declaration public static Line GetBottomSurfaceDiagonal(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get bottom surface diagonal Returns Type Description Line Remarks Bottom diagonal is the diagonal that starts at the bounding box min point and ends at the bounding box max point projected on bottom surface. GetCentroid(BoundingBox) Get bounding box centroid Declaration public static Point GetCentroid(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get centroid Returns Type Description Point GetDiagonal(BoundingBox) Get bounding box diagonal Declaration public static Line GetDiagonal(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get main diagonal Returns Type Description Line Remarks Main diagonal is the diagonal that starts at the bounding box min point and ends at the bounding box max point. GetDiagonalLength(BoundingBox) Get bounding box diagonal length Declaration public static double GetDiagonalLength(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get diagonal length Returns Type Description double Remarks Bottom diagonal is the diagonal that starts at the bounding box min point and ends at the bounding box max point projected to the bottom surface. GetEdges(BoundingBox) Get bounding box edges Declaration public static List<Curve> GetEdges(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get edges Returns Type Description List<Curve> GetHeight(BoundingBox) Get bounding box diagonal height Declaration public static double GetHeight(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get height Returns Type Description double GetLength(BoundingBox) Get bounding box diagonal length Declaration public static double GetLength(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get length Returns Type Description double GetOppositeBottomSurfaceDiagonal(BoundingBox) Get bounding box opposite bottom surface diagonal Declaration public static Line GetOppositeBottomSurfaceDiagonal(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get bottom surface diagonal Returns Type Description Line Remarks Opposite bottom diagonal is the diagonal perpendicular to bottom diagonal. Start point (max.X, min.Y, min.Z) End point (min.X, max.Y, min.Z). GetSurfaces(BoundingBox) Get bounding box surfaces Declaration public static List<Surface> GetSurfaces(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get surfaces Returns Type Description List<Surface> GetTopCenter(BoundingBox) Get bounding box top face center Declaration public static Point GetTopCenter(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get top center Returns Type Description Point GetTopSurface(BoundingBox) Get bounding box bottom surface Declaration public static Surface GetTopSurface(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get top surface Returns Type Description Surface GetVertices(BoundingBox) Get bounding box vertices Declaration public static List<Point> GetVertices(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get vertices Returns Type Description List<Point> GetWidth(BoundingBox) Get bounding box diagonal width Declaration public static double GetWidth(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get width Returns Type Description double Offset(BoundingBox, double) Offset bounding box Declaration public static BoundingBox Offset(this BoundingBox bbox, double offset) Parameters Type Name Description BoundingBox bbox Bounding box to get offset double offset Returns Type Description BoundingBox ToBoundingBoxXYZ(BoundingBox) Converts a Dynamo Geometry BoundingBox to Revit API BoundingBoxXYZ Declaration public static BoundingBoxXYZ ToBoundingBoxXYZ(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to convert Returns Type Description BoundingBoxXYZ ToCoordinateSystem(BoundingBox) Converts bounding box to coordinate system Declaration public static CoordinateSystem ToCoordinateSystem(this BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Bounding box to get coordinate system Returns Type Description CoordinateSystem"
  },
  "api/DynamoForRevitUtils.Services.Dynamo.DynamoGeometryServices.html": {
    "href": "api/DynamoForRevitUtils.Services.Dynamo.DynamoGeometryServices.html",
    "title": "Class DynamoGeometryServices | DynamoForRevitUtils - Docs",
    "summary": "Class DynamoGeometryServices Revit geometry tools Inheritance object DynamoGeometryServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Dynamo Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class DynamoGeometryServices Methods ArePointsCollinear(Point, Point, Point, double) Evaluates if given three points are collinear by a given tolerance Declaration public static bool ArePointsCollinear(Point p1, Point p2, Point p3, double tolerance = 0.001) Parameters Type Name Description Point p1 Point p2 Point p3 double tolerance Returns Type Description bool Whether the three points are collinear or not ComputeAverageCenterPoint(List<Point>) Computes the average center point from a list of points. Declaration public static Point ComputeAverageCenterPoint(List<Point> points) Parameters Type Name Description List<Point> points The list of points Returns Type Description Point The average center point GetMeshSurfaces(Mesh) Gets mesh surfaces Declaration public static List<Surface> GetMeshSurfaces(Mesh mesh) Parameters Type Name Description Mesh mesh Returns Type Description List<Surface> GetMidPoint(Point, Point) Get the mid point between two points Declaration public static Point GetMidPoint(this Point point, Point otherPoint) Parameters Type Name Description Point point Point otherPoint Returns Type Description Point GetRelativeCoordinatesOfPoint(Point, CoordinateSystem) Get the coordinates of a point relative to a Coordinate System Declaration public static double[] GetRelativeCoordinatesOfPoint(Point point, CoordinateSystem cs) Parameters Type Name Description Point point CoordinateSystem cs Returns Type Description double[] GroupAlignedLines(List<Line>, double) Group aligned Lines by a given tolerance Declaration public static List<List<Line>> GroupAlignedLines(List<Line> lines, double tolerance) Parameters Type Name Description List<Line> lines double tolerance Returns Type Description List<List<Line>> IsHorizontal(Surface, ushort) Verify if a given surface is horizontal Declaration public static bool IsHorizontal(this Surface surface, ushort approximation = 2) Parameters Type Name Description Surface surface Surface to analyze ushort approximation A positive integer representing the rounding precision Returns Type Description bool IsParallelTo(Vector, Vector, ushort) Verify if two vectors are parallel Declaration public static bool IsParallelTo(this Vector vector, Vector otherVector, ushort approximation = 1) Parameters Type Name Description Vector vector Vector otherVector ushort approximation A positive integer representing the rounding precision Returns Type Description bool IsPerpendicularTo(Vector, Vector, ushort) Verify if two vectors are perpendicular Declaration public static bool IsPerpendicularTo(this Vector vector, Vector otherVector, ushort approximation = 1) Parameters Type Name Description Vector vector Vector otherVector ushort approximation Returns Type Description bool IsVertical(Surface, ushort) Verify if a given surface is vertical Declaration public static bool IsVertical(this Surface surface, ushort approximation = 2) Parameters Type Name Description Surface surface Surface to analyze ushort approximation A positive integer representing the rounding precision Returns Type Description bool ReorderLines(List<Line>) Reorders a list of lines based on their angle with respect to the average center point. Declaration public static List<Line> ReorderLines(List<Line> lines) Parameters Type Name Description List<Line> lines The list of lines to be reordered. Returns Type Description List<Line> A new list of lines reordered based on their angle. SwapCoordinateValue(Point, Coordinate, double) Swap a coordinate value of a point Declaration public static Point SwapCoordinateValue(this Point point, Coordinate coordinate, double value) Parameters Type Name Description Point point Point to swap coordinate Coordinate coordinate Coordinate to swap double value New value that will be used on swapped coordinate Returns Type Description Point Point with swapped coordinate Exceptions Type Condition ArgumentOutOfRangeException Thrown if coordinate has an invalid value. SwapCoordinateValue(Vector, Coordinate, double) Swap a coordinate value of a vector Declaration public static Vector SwapCoordinateValue(this Vector vector, Coordinate coordinate, double value) Parameters Type Name Description Vector vector Vector to swap coordinate Coordinate coordinate Coordinate to swap double value New value that will be used on swapped coordinate Returns Type Description Vector Vector with swapped coordinate ToPolyCurve(IEnumerable<Curve>) Converts an enumerable of DynamoGeometry.Curve to a DynamoGeometry.PolyCurve Declaration public static PolyCurve ToPolyCurve(this IEnumerable<Curve> curves) Parameters Type Name Description IEnumerable<Curve> curves Returns Type Description PolyCurve Visualize(BoundingBox, Color?, bool) Generates a Bounding Box Visualization in Dynamo Declaration public static List<GeometryColor> Visualize(this BoundingBox bbox, Color? color = null, bool wireFrame = true) Parameters Type Name Description BoundingBox bbox Bounding Box to visualize Color color Bounding Box visualization color bool wireFrame Whether Bounding Box visualization as wire frame or not Returns Type Description List<GeometryColor> Bounding Box visualization Visualize(CoordinateSystem, double) Generates a Coordinate System visualization in Dynamo Declaration public static List<GeometryColor> Visualize(this CoordinateSystem cs, double size = 1) Parameters Type Name Description CoordinateSystem cs Coordinate System to visualize double size The size of Coordinate System visualization Returns Type Description List<GeometryColor> Coordinate System visualization Visualize(Vector, Point, Color?, double) Generates a Vector visualization in Dynamo Declaration public static List<GeometryColor> Visualize(this Vector vector, Point origin, Color? color = null, double size = 1) Parameters Type Name Description Vector vector Vector to visualize Point origin Point that represents the vector origin for visualization on 3D space. Color color Color to vector visualization double size The size of vector visualization Returns Type Description List<GeometryColor> Vector visualization"
  },
  "api/DynamoForRevitUtils.Services.Dynamo.JoinLinesServices.html": {
    "href": "api/DynamoForRevitUtils.Services.Dynamo.JoinLinesServices.html",
    "title": "Class JoinLinesServices | DynamoForRevitUtils - Docs",
    "summary": "Class JoinLinesServices Join Lines Services Inheritance object JoinLinesServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Dynamo Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class JoinLinesServices Remarks Based on Spring Nodes Functions - LineLoop.Merge. by Dimitar Venkov. @5devene | dimitar.ven@gmail.com Methods JoinLinesIntoClosedPolyCurve(List<Line>, bool) Joins a collection of lines into a closed Autodesk.DesignScript.Geometry.PolyCurve. Declaration public static PolyCurve JoinLinesIntoClosedPolyCurve(List<Line> lines, bool tryReorderLines = true) Parameters Type Name Description List<Line> lines The collection of lines to join. bool tryReorderLines Optional. Specifies whether to try to reorder the lines before joining. Default is true. Use this option when the lines are not in the correct order to form a closed loop. Returns Type Description PolyCurve A closed Autodesk.DesignScript.Geometry.PolyCurve formed by joining the lines. Exceptions Type Condition ArgumentException Thrown when the collection of lines is empty. Exception Thrown when the number of lines is not enough to form a closed loop. Exception Thrown when was not possible to connect all lines."
  },
  "api/DynamoForRevitUtils.Services.Dynamo.RevitElementsServices.html": {
    "href": "api/DynamoForRevitUtils.Services.Dynamo.RevitElementsServices.html",
    "title": "Class RevitElementsServices | DynamoForRevitUtils - Docs",
    "summary": "Class RevitElementsServices Dynamo Elements Utils Inheritance object RevitElementsServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Dynamo Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class RevitElementsServices Methods GetProtoLocation(Element) Get Element Location as Dynamo Geometry Declaration public static Geometry GetProtoLocation(this Element element) Parameters Type Name Description Element element Returns Type Description Geometry ToBuiltInCategory(Category) Convert a given Dynamo Revit.Elements.Category to its related BuiltInCategory Declaration public static BuiltInCategory ToBuiltInCategory(this Category category) Parameters Type Name Description Category category Returns Type Description BuiltInCategory ToDynamoCategory(BuiltInCategory) Convert a given BuiltInCategory to its related Dynamo Revit.Elements.Category Declaration public static Category ToDynamoCategory(this BuiltInCategory bitcat) Parameters Type Name Description BuiltInCategory bitcat BuiltInCategory to be converted Returns Type Description Category Corresponding Dynamo Category ToDynamoType(Document) Convert Revit Document to Dynamo Document Reference: https://github.com/johnpierson/RhythmForDynamo/blob/051c6a5c5f136758a948f8fdf73deffa46eff981/src/Rhythm/Utilities/Converters.cs#L29 Declaration public static Document ToDynamoType(this Document item) Parameters Type Name Description Document item Revit Document Returns Type Description Document ToRevitDocument(Document) Convert Dynamo Document to Revit Document Reference: https://github.com/johnpierson/RhythmForDynamo/blob/051c6a5c5f136758a948f8fdf73deffa46eff981/src/Rhythm/Utilities/Converters.cs#L29 Declaration public static Document ToRevitDocument(this Document item) Parameters Type Name Description Document item Returns Type Description Document TryConvertToDSType<T>(Element) Attempts to convert a Revit API Element to a Dynamo Element of generic type T. Declaration public static T TryConvertToDSType<T>(this Element element) where T : Element Parameters Type Name Description Element element The Revit API Element to be converted Returns Type Description T The converted Dynamo Element of type T Type Parameters Name Description T The class type of Dynamo Element Exceptions Type Condition ArgumentNullException Thrown when the input element is null Exception Thrown when the conversion fails UnwrapElement<T>(Element) Unwraps a Dynamo Element to Revit API Element of generic type T Declaration public static T UnwrapElement<T>(this Element element) where T : Element Parameters Type Name Description Element element The Dynamo Element to be unwrapped Returns Type Description T Unwrapped element Type Parameters Name Description T The class type of Revit API Element"
  },
  "api/DynamoForRevitUtils.Services.Dynamo.TopographyServices.html": {
    "href": "api/DynamoForRevitUtils.Services.Dynamo.TopographyServices.html",
    "title": "Class TopographyServices | DynamoForRevitUtils - Docs",
    "summary": "Class TopographyServices Provides methods to work with Topography elements. Inheritance object TopographyServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Dynamo Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class TopographyServices Constructors TopographyServices() Declaration public TopographyServices() Methods GetTopographySurfaces(Topography) Transforms a Topography into a list of Surfaces. Declaration public static IEnumerable<Surface> GetTopographySurfaces(Topography topography) Parameters Type Name Description Topography topography Returns Type Description IEnumerable<Surface> PointProject(List<Surface>, Point) Projects a point into a Topography surfaces list Declaration public static Point? PointProject(List<Surface> topoSurfaces, Point point) Parameters Type Name Description List<Surface> topoSurfaces Point point Returns Type Description Point TopographyToPolySurface(Topography) Transforms a Topography into a PolysSurface. Declaration public static PolySurface? TopographyToPolySurface(Topography topography) Parameters Type Name Description Topography topography Returns Type Description PolySurface Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Services.Dynamo.html": {
    "href": "api/DynamoForRevitUtils.Services.Dynamo.html",
    "title": "Namespace DynamoForRevitUtils.Services.Dynamo | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.Dynamo Classes BoundingBoxServices Dynamo BoundingBox utils DynamoGeometryServices Revit geometry tools JoinLinesServices Join Lines Services RevitElementsServices Dynamo Elements Utils TopographyServices Provides methods to work with Topography elements."
  },
  "api/DynamoForRevitUtils.Services.Enumerations.Converters.html": {
    "href": "api/DynamoForRevitUtils.Services.Enumerations.Converters.html",
    "title": "Class Converters | DynamoForRevitUtils - Docs",
    "summary": "Class Converters Provides methods for converting custom enumeration types. Inheritance object Converters Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class Converters Methods ToParameterDataType(StorageType) Converts a Revit Autodesk.Revit.DB.StorageType to a corresponding custom ParameterDataType. Declaration public static ParameterDataType ToParameterDataType(this StorageType storageType) Parameters Type Name Description StorageType storageType The Autodesk.Revit.DB.StorageType that needs to be converted. Returns Type Description ParameterDataType The corresponding custom ParameterDataType for the given Autodesk.Revit.DB.StorageType. Exceptions Type Condition ArgumentOutOfRangeException Thrown when the provided storageType is not a recognized value. ToStorageType(ParameterDataType) Converts a custom ParameterDataType to a corresponding Revit Autodesk.Revit.DB.StorageType. Declaration public static StorageType ToStorageType(this ParameterDataType paramStorType) Parameters Type Name Description ParameterDataType paramStorType The ParameterDataType that needs to be converted. Returns Type Description StorageType The corresponding Revit Autodesk.Revit.DB.StorageType for the given ParameterDataType. Exceptions Type Condition ArgumentOutOfRangeException Thrown when the provided paramStorType is not a recognized value."
  },
  "api/DynamoForRevitUtils.Services.Enumerations.EnumParser.html": {
    "href": "api/DynamoForRevitUtils.Services.Enumerations.EnumParser.html",
    "title": "Class EnumParser | DynamoForRevitUtils - Docs",
    "summary": "Class EnumParser Class containing Enum Parsers Inheritance object EnumParser Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Enumerations Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class EnumParser Methods ByValue(string, string, string) Generic Enum parser for enums used in Dropdown NodeModel Declaration public static object ByValue(string enumTypeFullName, string enumAssemblyPath, string value) Parameters Type Name Description string enumTypeFullName Enum Type full name. Could be obtained using FullName property. Example: typeof(Autodesk.Revit.DB.StorageType).FullName string enumAssemblyPath Enum Assembly path. Could be obtained using Autodesk.Revit.DB.Location property. Example: typeof(Autodesk.Revit.DB.StorageType).FullName.Location string value Value to parse Returns Type Description object Enum value as object Exceptions Type Condition Exception Thrown when is not possible to load enum Assembly, Type or field. ByValue<T>(object) Generic parser for enums by object value https://stackoverflow.com/questions/79126/create-generic-method-constraining-t-to-an-enum Declaration public static T ByValue<T>(object value) where T : struct, IComparable, IFormattable, IConvertible Parameters Type Name Description object value Enum value to be casted Returns Type Description T Type Parameters Name Description T Enum Type Exceptions Type Condition ArgumentException Exception ByValue<T>(string) Generic parser for enums by string value https://stackoverflow.com/questions/79126/create-generic-method-constraining-t-to-an-enum Declaration public static T ByValue<T>(string value) where T : struct, IComparable, IConvertible, IFormattable Parameters Type Name Description string value Returns Type Description T Type Parameters Name Description T"
  },
  "api/DynamoForRevitUtils.Services.Enumerations.html": {
    "href": "api/DynamoForRevitUtils.Services.Enumerations.html",
    "title": "Namespace DynamoForRevitUtils.Services.Enumerations | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.Enumerations Classes Converters Provides methods for converting custom enumeration types. EnumParser Class containing Enum Parsers"
  },
  "api/DynamoForRevitUtils.Services.Files.CSV.html": {
    "href": "api/DynamoForRevitUtils.Services.Files.CSV.html",
    "title": "Class CSV | DynamoForRevitUtils - Docs",
    "summary": "Class CSV Utils methods for read/write CSV files Inheritance object CSV Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Files Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class CSV Methods ReadFileFromPath(string, string, bool, bool, object?, object?) Imports data from a CSV (comma separated values) file, put the items into a list and transpose it if needed. Declaration public static IList? ReadFileFromPath(string filePath, string delimiter, bool transpose, bool readAsString, object? encodingObj = null, object? cultureInfoObj = null) Parameters Type Name Description string filePath CSV file to be converted into a list string delimiter CSV delimiter. bool transpose Toggle to transpose the imported data bool readAsString Choose whether read all file as string or not object encodingObj Encoding as object. Define the encoding to be used for reading the file. object cultureInfoObj CultureInfo as object. Define the culture to be used for parsing the numbers. Returns Type Description IList List containing the items in the CSV file Remarks cultureInfoObj and encodingObj parsed as object to avoid exposing the CultureInfo and Encoding classes in the Dynamo Library. See Also https://github.com/DynamoDS/Dynamo/blob/master/src/Libraries/DSOffice/Excel.cs WriteToFilePath(string, object[][], string) Write a list of lists into a file using a comma-separated values format. Outer list represents rows, inner lists represent columns. Declaration public static string WriteToFilePath(string filePath, object[][] data, string delimiter = \",\") Parameters Type Name Description string filePath Path to write to object[][] data List of lists to write into CSV string delimiter CSV delimiter. The accepted delimiters are ,;:\\t|= Returns Type Description string See Also https://github.com/DynamoDS/Dynamo/blob/master/src/Libraries/DSOffice/Excel.cs"
  },
  "api/DynamoForRevitUtils.Services.Files.Excel.html": {
    "href": "api/DynamoForRevitUtils.Services.Files.Excel.html",
    "title": "Class Excel | DynamoForRevitUtils - Docs",
    "summary": "Class Excel Class containing utils for deal with Excel stuff Inheritance object Excel Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Files Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class Excel Methods GetValidSheetName(string) Gets valid Excel sheet name from input string Reference: https://www.excelcodex.com/2012/06/worksheets-naming-conventions/ Declaration public static string GetValidSheetName(string inputString) Parameters Type Name Description string inputString Returns Type Description string Valid Excel sheet name Exceptions Type Condition ArgumentException Throw if input string is not valid"
  },
  "api/DynamoForRevitUtils.Services.Files.html": {
    "href": "api/DynamoForRevitUtils.Services.Files.html",
    "title": "Namespace DynamoForRevitUtils.Services.Files | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.Files Classes CSV Utils methods for read/write CSV files Excel Class containing utils for deal with Excel stuff"
  },
  "api/DynamoForRevitUtils.Services.GenericServices.ObjectServices.html": {
    "href": "api/DynamoForRevitUtils.Services.GenericServices.ObjectServices.html",
    "title": "Class ObjectServices | DynamoForRevitUtils - Docs",
    "summary": "Class ObjectServices Generic services for objects. Inheritance object ObjectServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.GenericServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ObjectServices Methods TryCast<T>(object) Try cast an object to a provided type T. Declaration public static T TryCast<T>(this object obj) where T : class Parameters Type Name Description object obj object to cast Returns Type Description T Casted object to type T. Type Parameters Name Description T Type that will be used to cast object"
  },
  "api/DynamoForRevitUtils.Services.GenericServices.html": {
    "href": "api/DynamoForRevitUtils.Services.GenericServices.html",
    "title": "Namespace DynamoForRevitUtils.Services.GenericServices | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.GenericServices Classes ObjectServices Generic services for objects."
  },
  "api/DynamoForRevitUtils.Services.MathServices.ArithmeticServices.html": {
    "href": "api/DynamoForRevitUtils.Services.MathServices.ArithmeticServices.html",
    "title": "Class ArithmeticServices | DynamoForRevitUtils - Docs",
    "summary": "Class ArithmeticServices Arithmetic services. Inheritance object ArithmeticServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.MathServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ArithmeticServices Methods GetDecimalPlaces(decimal) Returns the number of decimal places in a decimal number. Declaration public static int GetDecimalPlaces(decimal n) Parameters Type Name Description decimal n Number to get decimal places Returns Type Description int NUmber of decimal places"
  },
  "api/DynamoForRevitUtils.Services.MathServices.LinearAlgebraServices.html": {
    "href": "api/DynamoForRevitUtils.Services.MathServices.LinearAlgebraServices.html",
    "title": "Class LinearAlgebraServices | DynamoForRevitUtils - Docs",
    "summary": "Class LinearAlgebraServices Utils to perform linear algebra operations on Dynamo Geometry Inheritance object LinearAlgebraServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.MathServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class LinearAlgebraServices Methods GetRelativeCoordinatesOfPoint(Point, CoordinateSystem) Get the coordinates of a point relative to a Coordinate System Declaration public static (double X, double Y, double Z) GetRelativeCoordinatesOfPoint(Point point, CoordinateSystem cs) Parameters Type Name Description Point point Point to get the relative coordinates CoordinateSystem cs Coordinate System to get the relative coordinates Returns Type Description (double X, double Y, double Z) Tuple with the relative coordinates of the point"
  },
  "api/DynamoForRevitUtils.Services.MathServices.RangeServices.html": {
    "href": "api/DynamoForRevitUtils.Services.MathServices.RangeServices.html",
    "title": "Class RangeServices | DynamoForRevitUtils - Docs",
    "summary": "Class RangeServices Utils to generate numeric ranges Inheritance object RangeServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.MathServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class RangeServices Methods StartEndAmount(double, double, ushort) Generates a range between two numbers by a given quantity, including the two numbers. Declaration public static List<double> StartEndAmount(double start, double end, ushort amount) Parameters Type Name Description double start double end ushort amount Returns Type Description List<double> StartEndStep(double, double, double) Generates a range between two numbers by a given step Declaration public static List<double> StartEndStep(double start, double end, double step) Parameters Type Name Description double start double end double step Returns Type Description List<double> StartEndStep(double, double, double, bool) Generates a range between two numbers by a given (optionally approximated) step Declaration public static List<double> StartEndStep(double start, double end, double step, bool approximateStep) Parameters Type Name Description double start double end double step bool approximateStep Returns Type Description List<double>"
  },
  "api/DynamoForRevitUtils.Services.MathServices.SequenceServices.html": {
    "href": "api/DynamoForRevitUtils.Services.MathServices.SequenceServices.html",
    "title": "Class SequenceServices | DynamoForRevitUtils - Docs",
    "summary": "Class SequenceServices Utils to generate numeric sequences Inheritance object SequenceServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.MathServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class SequenceServices Methods ArithmeticProgression(double, ushort, double) Generates a range of values in Arithmetic Progression Declaration public static List<double> ArithmeticProgression(double a1, ushort n, double d) Parameters Type Name Description double a1 The first value of progression ushort n The number of values of progression double d Common difference of progression Returns Type Description List<double>"
  },
  "api/DynamoForRevitUtils.Services.MathServices.html": {
    "href": "api/DynamoForRevitUtils.Services.MathServices.html",
    "title": "Namespace DynamoForRevitUtils.Services.MathServices | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.MathServices Classes ArithmeticServices Arithmetic services. LinearAlgebraServices Utils to perform linear algebra operations on Dynamo Geometry RangeServices Utils to generate numeric ranges SequenceServices Utils to generate numeric sequences"
  },
  "api/DynamoForRevitUtils.Services.Reflection.ReflectionServices.html": {
    "href": "api/DynamoForRevitUtils.Services.Reflection.ReflectionServices.html",
    "title": "Class ReflectionServices | DynamoForRevitUtils - Docs",
    "summary": "Class ReflectionServices Reflection services Inheritance object ReflectionServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.Reflection Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ReflectionServices Methods GetDelegateFullName(Delegate) Get delegate full name Declaration public static string GetDelegateFullName(Delegate del) Parameters Type Name Description Delegate del Returns Type Description string Exceptions Type Condition ArgumentException GetDelegateInfo(Delegate, string) Get delegate info Declaration public static MethodInfo? GetDelegateInfo(Delegate del, string functionsProjectName) Parameters Type Name Description Delegate del string functionsProjectName Returns Type Description MethodInfo Exceptions Type Condition Exception GetExecutingAssemblyPath() Get executing assembly path Declaration public static string? GetExecutingAssemblyPath() Returns Type Description string GetTypeByFullNameAndAssemblyPath(string, string) Get type by full name and assembly path Declaration public static Type GetTypeByFullNameAndAssemblyPath(string typeFullName, string typeAssemblyPath) Parameters Type Name Description string typeFullName string typeAssemblyPath Returns Type Description Type Exceptions Type Condition Exception"
  },
  "api/DynamoForRevitUtils.Services.Reflection.html": {
    "href": "api/DynamoForRevitUtils.Services.Reflection.html",
    "title": "Namespace DynamoForRevitUtils.Services.Reflection | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.Reflection Classes ReflectionServices Reflection services"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.CategoryServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.CategoryServices.html",
    "title": "Class CategoryServices | DynamoForRevitUtils - Docs",
    "summary": "Class CategoryServices Revit Categories services Inheritance object CategoryServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class CategoryServices Methods GetElementId(BuiltInCategory) Get the ElementId for a given BuiltInCategory. Declaration public static ElementId GetElementId(this BuiltInCategory bic) Parameters Type Name Description BuiltInCategory bic The BuiltInCategory to get the ElementId for. Returns Type Description ElementId The ElementId for the given BuiltInCategory. IsAnnotationCategory(BuiltInCategory) Checks if Category is an Annotation Category Declaration public static bool IsAnnotationCategory(this BuiltInCategory bic) Parameters Type Name Description BuiltInCategory bic Returns Type Description bool IsAnnotationCategory(Category) Checks if Category is an Annotation Category Declaration public static bool IsAnnotationCategory(this Category cat) Parameters Type Name Description Category cat Returns Type Description bool IsModelCategory(BuiltInCategory) Checks if Category is a Model Category Declaration public static bool IsModelCategory(this BuiltInCategory category) Parameters Type Name Description BuiltInCategory category Returns Type Description bool IsModelCategory(Category) Checks if Category is a Model \"Drawable\" Category Declaration public static bool IsModelCategory(this Category cat) Parameters Type Name Description Category cat Returns Type Description bool Remarks AllowsBoundParameters check if the category can have project parameters. Not all model categories can have project parameters. If is the case this means that the category is not a drawable category. ToBuiltInCategory(Category) Convert a given Revit Category to its related BuiltInCategory Declaration public static BuiltInCategory ToBuiltInCategory(this Category category) Parameters Type Name Description Category category Returns Type Description BuiltInCategory ToRevitCategory(BuiltInCategory, Document?) Convert a given BuiltInCategory to its related Revit Category Declaration public static Category ToRevitCategory(this BuiltInCategory bic, Document? doc = null) Parameters Type Name Description BuiltInCategory bic Document doc Document to get category. Leave null to consider current document. Returns Type Description Category"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.DesignOptionServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.DesignOptionServices.html",
    "title": "Class DesignOptionServices | DynamoForRevitUtils - Docs",
    "summary": "Class DesignOptionServices Design options collectors Inheritance object DesignOptionServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class DesignOptionServices Methods GetActiveDesignOptionId(Document) Gets the active design option id for the current design option set. Declaration public static ElementId GetActiveDesignOptionId(Document doc) Parameters Type Name Description Document doc Returns Type Description ElementId The active design option id. It can be invalid id if there is no active design option in the model."
  },
  "api/DynamoForRevitUtils.Services.RevitServices.DocumentServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.DocumentServices.html",
    "title": "Class DocumentServices | DynamoForRevitUtils - Docs",
    "summary": "Class DocumentServices Document utils codes Inheritance object DocumentServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class DocumentServices Methods BatchOpenDocuments(string, UIApplication) Batch open several Revit documents Declaration public static List<Document> BatchOpenDocuments(string folderPath, UIApplication uiapp) Parameters Type Name Description string folderPath UIApplication uiapp Returns Type Description List<Document> Exceptions Type Condition Exception GetName(Document) Get Revit Document name Declaration public static string GetName(Document document) Parameters Type Name Description Document document Returns Type Description string GetPath(Document) Get Revit Document path Declaration public static string GetPath(Document document) Parameters Type Name Description Document document Returns Type Description string OpenDocument(string, UIApplication) Open Revit Document in Background Declaration public static Document OpenDocument(string filePath, UIApplication uiapp) Parameters Type Name Description string filePath UIApplication uiapp Returns Type Description Document Exceptions Type Condition Exception"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.ElementIdServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.ElementIdServices.html",
    "title": "Class ElementIdServices | DynamoForRevitUtils - Docs",
    "summary": "Class ElementIdServices ElementId Services Inheritance object ElementIdServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ElementIdServices Methods GetElementId(long) Get the ElementId besides the Revit version Declaration public static ElementId GetElementId(long id) Parameters Type Name Description long id The long value representing the ElementId. Returns Type Description ElementId The ElementId corresponding to the provided long value. GetElement<TCast>(ElementId, Document?) Get the element from its ElementId. Declaration public static TCast GetElement<TCast>(this ElementId id, Document? doc = null) where TCast : Element Parameters Type Name Description ElementId id ElementId to get Element Document doc Document to get Element. Leave null to get active document Returns Type Description TCast Element correspondent to provided id Type Parameters Name Description TCast Type derived from Autodesk.Revit.DB.Element to cast the result GetElement<TCast>(string, Document?) Get the element from its UniqueId. Declaration public static TCast GetElement<TCast>(string uniqueId, Document? doc = null) where TCast : Element Parameters Type Name Description string uniqueId UniqueId to get Element Document doc Document to get Element. Leave null to get active document Returns Type Description TCast Element correspondent to provided uniqueId Type Parameters Name Description TCast Type derived from Autodesk.Revit.DB.Element to cast the result GetValue(ElementId) Get the value of the ElementId besides the Revit version Declaration public static long GetValue(this ElementId elementId) Parameters Type Name Description ElementId elementId The ElementId to retrieve the value from. Returns Type Description long The value of the ElementId. IsValidId(ElementId, Document) Checks if an ElementId is valid on given Document Declaration public static bool IsValidId(this ElementId elementId, Document document) Parameters Type Name Description ElementId elementId ElementId to check Document document Document to check Returns Type Description bool"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.ElementServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.ElementServices.html",
    "title": "Class ElementServices | DynamoForRevitUtils - Docs",
    "summary": "Class ElementServices Elements conversions Inheritance object ElementServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ElementServices Methods BelongsToLinkedModel(Element, RevitLinkInstance) Determines whether an element belongs to a linked model or not. Declaration public static bool BelongsToLinkedModel(this Element element, RevitLinkInstance linkInstance) Parameters Type Name Description Element element The element to check. RevitLinkInstance linkInstance The link instance to check if the element belongs to. Returns Type Description bool True if the element belongs to the linked model, otherwise false. CheckAnnotationsClashes(IEnumerable<Element>, Color?) Checks if there is any clash between provided annotations. Declaration public static HashSet<Element> CheckAnnotationsClashes(IEnumerable<Element> annotationElements, Color? clashColor = null) Parameters Type Name Description IEnumerable<Element> annotationElements Elements to clash test. Must be from Annotation Categories. Color clashColor Color to set overrides in case elements are in clash. Leave null to not set overrides. Returns Type Description HashSet<Element> Clashed elements Remarks Provided elements that are not in clash will have their overrides cleaned up. GetAnnotationOutline(Element, View, double) Get annotation element Autodesk.Revit.DB.Outline projected on view plane Declaration public static Outline GetAnnotationOutline(this Element element, View view, double offset = 0) Parameters Type Name Description Element element Annotation element to get Outline in view View view View used to get element Outline double offset Outline offset in Internal units Returns Type Description Outline Annotation Outline GetBoundingBox(Element, double, RevitLinkInstance?) Get the bounding box of an element. Declaration public static BoundingBoxXYZ GetBoundingBox(this Element element, double offset = 0, RevitLinkInstance? linkInstance = null) Parameters Type Name Description Element element The element to get the bounding box of. double offset The offset value to expand or shrink the bounding box. Default value is 0. RevitLinkInstance linkInstance The link instance that the element belongs to. Leave null if the element is not linked. Default value is null. Returns Type Description BoundingBoxXYZ The bounding box of the element. GetBoundingBoxFilter(Element, double, RevitLinkInstance?) Returns a BoundingBoxIntersectsFilter based on the bounding box of the element. Declaration public static BoundingBoxIntersectsFilter GetBoundingBoxFilter(this Element element, double offset = 0, RevitLinkInstance? linkInstance = null) Parameters Type Name Description Element element The element to get the bounding box filter for. double offset The offset value to expand or shrink the bounding box. RevitLinkInstance linkInstance The link instance that the element belongs to. Leave null if the element is not linked. Returns Type Description BoundingBoxIntersectsFilter A BoundingBoxIntersectsFilter based on the bounding box of the element. GetElementsBoundingBox(Document, List<Element>) Get BoundingBox from Elements Declaration public static BoundingBoxXYZ GetElementsBoundingBox(Document doc, List<Element> elements) Parameters Type Name Description Document doc List<Element> elements Returns Type Description BoundingBoxXYZ GetFacesByDirection(Element, Document, XYZ) Extension method to get element faces by direction Declaration public static List<Face> GetFacesByDirection(this Element element, Document doc, XYZ direction) Parameters Type Name Description Element element Document doc XYZ direction Returns Type Description List<Face> GetLevel(Element) Extension method to get element level. Declaration public static Level GetLevel(this Element element) Parameters Type Name Description Element element Returns Type Description Level Exceptions Type Condition Exception GetLineBasedBoundLine(Element) Extension method to get line based element bound line Declaration public static Line GetLineBasedBoundLine(this Element element) Parameters Type Name Description Element element Returns Type Description Line GetLineBasedDirection(Element) Extension method that returns line based element direction Declaration public static XYZ GetLineBasedDirection(this Element element) Parameters Type Name Description Element element Returns Type Description XYZ GetLocationAsPoint(Element) Extension method to get element location as point Declaration public static XYZ? GetLocationAsPoint(this Element element) Parameters Type Name Description Element element Returns Type Description XYZ GetNearbyElements(Element, List<BuiltInCategory>, Document?, double) Declaration public static List<Element> GetNearbyElements(this Element element, List<BuiltInCategory> categories, Document? docToSearch = null, double searchDistance = 0) Parameters Type Name Description Element element List<BuiltInCategory> categories Document docToSearch double searchDistance Returns Type Description List<Element> Exceptions Type Condition Exception GetParameter(Element, ElementParameter, AccessElementParameterOptions) Get Parameter from Element using Regex. Declaration public static AccessParameterInfo GetParameter(this Element element, ElementParameter elementParameter, AccessElementParameterOptions options) Parameters Type Name Description Element element Element to get parameter ElementParameter elementParameter Parameter to get AccessElementParameterOptions options Options to get parameter. Returns Type Description AccessParameterInfo Revit parameter from Remarks Element could be a Instance or a Type. GetParameters(Element, IEnumerable<ElementParameter>, AccessElementParameterOptions) Retrieves the parameters of a Revit element based on the specified list of ElementParameter. Declaration public static IEnumerable<AccessParameterInfo> GetParameters(this Element element, IEnumerable<ElementParameter> elementParameters, AccessElementParameterOptions options) Parameters Type Name Description Element element The Revit element whose parameters are to be retrieved. IEnumerable<ElementParameter> elementParameters The array of ElementParameter instances that specify the parameters to retrieve. AccessElementParameterOptions options Options to get parameter. Returns Type Description IEnumerable<AccessParameterInfo> An enumerable collection of parameters matching the specified element parameters. GetRooms(Element) Extension method to get Rooms which element is within This method collects Rooms from Document in which the Element resides in Declaration public static IEnumerable<Room> GetRooms(this Element element) Parameters Type Name Description Element element Returns Type Description IEnumerable<Room> GetRooms(Element, IEnumerable<Room>) Extension method to get Rooms which element is within You need to provide Rooms to check Declaration public static IEnumerable<Room> GetRooms(this Element element, IEnumerable<Room> roomsToCheck) Parameters Type Name Description Element element IEnumerable<Room> roomsToCheck Returns Type Description IEnumerable<Room> GetSolids(Element, Options?) Extension method to get element solids Declaration public static IEnumerable<Solid> GetSolids(this Element element, Options? options = null) Parameters Type Name Description Element element Element to get solids Options options Geometry options to get element solids Returns Type Description IEnumerable<Solid> HasParameter(Element, ElementParameter, out AccessParameterInfo, Regex?) Check if an Element has a parameter by passing a ElementParameter and directly comparing ElementParameter.Name with Element parameters names, to lookup for a match. Declaration public static bool HasParameter(this Element element, ElementParameter elementParameter, out AccessParameterInfo accessParameterInfo, Regex? regex = null) Parameters Type Name Description Element element Element to get parameter ElementParameter elementParameter Parameter data to get AccessParameterInfo accessParameterInfo Stores parameter access results. Regex regex Regular expression to lookup parameter. Set null to use ElementParameter.Name property without regex (faster). Returns Type Description bool Whether the element is valid or not IsAnnotationElement(Element) Checks whether an element is an Annotation Element or not Declaration public static bool IsAnnotationElement(this Element element) Parameters Type Name Description Element element Element to check Returns Type Description bool Whether the element is an Annotation Element or not IsCutByView(Element, View, out List<Solid>, RevitLinkInstance?, Options?, double) Determines whether an element is cut by view plane or not Declaration public static bool IsCutByView(this Element element, View view, out List<Solid> solidsCut, RevitLinkInstance? linkInstance = null, Options? options = null, double tolerance = 0.001) Parameters Type Name Description Element element Element to test View view View to test if the element is cut by List<Solid> solidsCut Solids cut by view plane RevitLinkInstance linkInstance Link instance that the element belong. Leave null if the element is not linked. Options options Geometry options to get element solid double tolerance Tolerance in feet to get cut solid Returns Type Description bool Whether an element is cut by view plane or not IsFromCategory(Element, BuiltInCategory) Extension method to check if an Element belongs to a given BuiltInCategory Declaration public static bool IsFromCategory(this Element element, BuiltInCategory bic) Parameters Type Name Description Element element Element to check BuiltInCategory bic BuiltInCategory to compare Returns Type Description bool Whether Element belongs to given BuiltInCategory or not IsLineBased(Element) Extension method that returns whether this element is line base or not Declaration public static bool IsLineBased(this Element element) Parameters Type Name Description Element element Returns Type Description bool IsLinked(Element) Determines whether an element is on a linked model or not Declaration public static bool IsLinked(this Element element) Parameters Type Name Description Element element The element to test Returns Type Description bool Whether the element is on a linked model IsLinkedElement(Element) Checks whether an element is linked or not Declaration public static bool IsLinkedElement(this Element element) Parameters Type Name Description Element element Returns Type Description bool IsModelInPlace(Element) Checks whether an element is Model In Place or not Declaration public static bool IsModelInPlace(this Element element) Parameters Type Name Description Element element Element to check Returns Type Description bool Whether the element is Model in place or not IsValidElement(Element) Checks if an Element is valid on its Document Declaration public static bool IsValidElement(this Element element) Parameters Type Name Description Element element Element to check Returns Type Description bool SetElementsOverrides(List<Element>, View, OverrideGraphicSettings) Set elements overrides Declaration public static void SetElementsOverrides(List<Element> elements, View view, OverrideGraphicSettings overrideGraphicSettings) Parameters Type Name Description List<Element> elements View view OverrideGraphicSettings overrideGraphicSettings SetParameters(Element, AccessElementParameterOptions, params IEnumerable<ElementParameter>) Sets parameters for a specified Revit element based on the provided parameter collection and options. Declaration public static IEnumerable<AccessParameterInfo> SetParameters(this Element element, AccessElementParameterOptions options, params IEnumerable<ElementParameter> elementParameters) Parameters Type Name Description Element element Revit element to set parameters on. AccessElementParameterOptions options Settings or options that determine how the parameters are applied to the element. IEnumerable<ElementParameter> elementParameters Collection of parameters to be set on the element. Returns Type Description IEnumerable<AccessParameterInfo> A collection of AccessParameterInfo objects containing details of the parameter setting results."
  },
  "api/DynamoForRevitUtils.Services.RevitServices.FamilyInstanceServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.FamilyInstanceServices.html",
    "title": "Class FamilyInstanceServices | DynamoForRevitUtils - Docs",
    "summary": "Class FamilyInstanceServices Class that contains methods to work with Family Instances Inheritance object FamilyInstanceServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class FamilyInstanceServices Methods GetAllNestedFamilies(FamilyInstance) Extension method to recursively gets all nested families of this FamilyInstance, including itself. Declaration public static List<FamilyInstance> GetAllNestedFamilies(this FamilyInstance famInst) Parameters Type Name Description FamilyInstance famInst Returns Type Description List<FamilyInstance> GetCuboid(FamilyInstance, Document) Extension method to get FamilyInstance Autodesk.DesignScript.Geometry.Cuboid Declaration public static Cuboid GetCuboid(this FamilyInstance famInst, Document doc) Parameters Type Name Description FamilyInstance famInst This Family Instance Document doc Returns Type Description Cuboid GetReferenceByName(FamilyInstance, string) Extension method to get FamilyInstance Autodesk.Revit.DB.Reference by name Declaration public static Reference GetReferenceByName(this FamilyInstance famInst, string refName) Parameters Type Name Description FamilyInstance famInst string refName Returns Type Description Reference Reference GetReferenceByType(FamilyInstance, FamilyInstanceReferenceType) Extension method to get FamilyInstance Autodesk.Revit.DB.Reference by Autodesk.Revit.DB.FamilyInstanceReferenceType Declaration public static List<Reference> GetReferenceByType(this FamilyInstance famInst, FamilyInstanceReferenceType refType) Parameters Type Name Description FamilyInstance famInst FamilyInstanceReferenceType refType Returns Type Description List<Reference> References GetSolids(FamilyInstance, Document) Recursively gets FamilyInstance Solids Declaration public static List<Solid> GetSolids(this FamilyInstance famInst, Document doc) Parameters Type Name Description FamilyInstance famInst Document doc Returns Type Description List<Solid> GetSolidsFromGeometryObjects(List<GeometryObject>) Recursively gets Solids from a given list of Autodesk.Revit.DB.GeometryObject Declaration public static List<Solid> GetSolidsFromGeometryObjects(List<GeometryObject> geometryObjects) Parameters Type Name Description List<GeometryObject> geometryObjects Returns Type Description List<Solid>"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.GridServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.GridServices.html",
    "title": "Class GridServices | DynamoForRevitUtils - Docs",
    "summary": "Class GridServices Grid services. Inheritance object GridServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class GridServices Methods DistanceToPoint(Grid, XYZ) Get distance from grid to point in Internal Units. Declaration public static double DistanceToPoint(this Grid grid, XYZ xyz) Parameters Type Name Description Grid grid XYZ xyz Returns Type Description double Calculated distance in Internal Units GetDirection(Grid, double) Get grid direction. Declaration public static XYZ GetDirection(this Grid grid, double parameter = 0.5) Parameters Type Name Description Grid grid Grid to get direction double parameter A value between 0 e 1 that represents the position of the point to evaluate along the curve. The default value is 0.5, which is the midpoint of the curve. Returns Type Description XYZ The direction of the grid at the given parameter. For not straight grids, the direction is the tangent of the curve at the given parameter. GetPlane(Grid, double) Get grid plane perpendicular to View where it is placed. Declaration public static Plane GetPlane(this Grid grid, double parameter = 0.5) Parameters Type Name Description Grid grid Grid to get plane double parameter A value between 0 e 1 that represents the position of the point to evaluate along the curve. The default value is 0.5, which is the midpoint of the curve. Returns Type Description Plane The plane of the grid at the given parameter. For not straight grids, the plane is the 'tangent' plane of the curve at the given parameter. ProjectPoint(Grid, XYZ) Projects a given point onto a grid. Declaration public static XYZ ProjectPoint(this Grid grid, XYZ point) Parameters Type Name Description Grid grid The grid to project the point onto. XYZ point The point to be projected onto the grid. Returns Type Description XYZ The projected point on the grid."
  },
  "api/DynamoForRevitUtils.Services.RevitServices.ImportInstanceServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.ImportInstanceServices.html",
    "title": "Class ImportInstanceServices | DynamoForRevitUtils - Docs",
    "summary": "Class ImportInstanceServices Elements conversions Inheritance object ImportInstanceServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ImportInstanceServices Methods GetLevel(ImportInstance) Get the Level of a CAD Link Declaration public static Level? GetLevel(this ImportInstance cadLink) Parameters Type Name Description ImportInstance cadLink Returns Type Description Level"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.LevelServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.LevelServices.html",
    "title": "Class LevelServices | DynamoForRevitUtils - Docs",
    "summary": "Class LevelServices Elements conversions Inheritance object LevelServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class LevelServices Methods GetNearestLevel(Document, double, ushort, bool) Get nearby level from a given elevation on given Document , on given direction Declaration public static Level? GetNearestLevel(Document onThisDocument, double toThisElevation, ushort approximation = 2, bool above = true) Parameters Type Name Description Document onThisDocument double toThisElevation ushort approximation bool above Returns Type Description Level GetNearestLevel(Level, bool) Get nearby level to this level on given direction Declaration public static Level? GetNearestLevel(this Level thisLevel, bool above = true) Parameters Type Name Description Level thisLevel bool above Returns Type Description Level"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.MEPCurveServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.MEPCurveServices.html",
    "title": "Class MEPCurveServices | DynamoForRevitUtils - Docs",
    "summary": "Class MEPCurveServices General utile for Revit Elements Inheritance object MEPCurveServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class MEPCurveServices Methods GetReferences(MEPCurve) Extension method to get MEPCurve references for dimensioning purposes Declaration public static MEPCurveReferences? GetReferences(this MEPCurve mepCurve) Parameters Type Name Description MEPCurve mepCurve Returns Type Description MEPCurveReferences"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.RevitGeometryServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.RevitGeometryServices.html",
    "title": "Class RevitGeometryServices | DynamoForRevitUtils - Docs",
    "summary": "Class RevitGeometryServices Revit geometry tools Inheritance object RevitGeometryServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class RevitGeometryServices Methods ArePointsCollinear(XYZ, XYZ, XYZ, double) Evaluates if given three points are collinear by a given tolerance Declaration public static bool ArePointsCollinear(XYZ p1, XYZ p2, XYZ p3, double tolerance = 0.001) Parameters Type Name Description XYZ p1 XYZ p2 XYZ p3 double tolerance Returns Type Description bool Whether the three points are collinear or not CreateByRectangle(Rectangle) Creates a BoundingBox based on rectangle Declaration public static BoundingBoxXYZ CreateByRectangle(Rectangle rectangle) Parameters Type Name Description Rectangle rectangle Returns Type Description BoundingBoxXYZ DistanceToPlane(XYZ, Plane) Calculates the distance between a point and a plane Declaration public static double DistanceToPlane(this XYZ point, Plane plane) Parameters Type Name Description XYZ point Plane plane Returns Type Description double DistanceToPoint(Plane, XYZ) Calculates the distance between a plane and a point Declaration public static double DistanceToPoint(this Plane plane, XYZ point) Parameters Type Name Description Plane plane XYZ point Returns Type Description double GetMidPoint(XYZ, XYZ) Get the mid point between two points Declaration public static XYZ GetMidPoint(this XYZ point, XYZ otherPoint) Parameters Type Name Description XYZ point XYZ otherPoint Returns Type Description XYZ GetOuterCurves(Face) Get face outer curves Declaration public static CurveLoop? GetOuterCurves(this Face face) Parameters Type Name Description Face face Returns Type Description CurveLoop IsParallelTo(XYZ, XYZ, ushort) Verify if two vectors are parallel Declaration public static bool IsParallelTo(this XYZ vector, XYZ otherVector, ushort precision = 1) Parameters Type Name Description XYZ vector XYZ otherVector ushort precision A positive integer representing the rounding precision Returns Type Description bool IsPerpendicularTo(XYZ, XYZ, ushort) Verify if two vectors are perpendicular Declaration public static bool IsPerpendicularTo(this XYZ vector, XYZ otherVector, ushort precision = 1) Parameters Type Name Description XYZ vector XYZ otherVector ushort precision A positive integer representing the rounding precision Returns Type Description bool SwapCoordinateValue(XYZ, Coordinate, double) Swap a coordinate value of XYZ Declaration public static XYZ? SwapCoordinateValue(this XYZ xyz, Coordinate coordinate, double value) Parameters Type Name Description XYZ xyz Point to swap coordinate Coordinate coordinate Coordinate to swap double value New value that will be used on swapped coordinate Returns Type Description XYZ Point with swapped coordinate Exceptions Type Condition ArgumentOutOfRangeException Thrown if coordinate has an invalid value. ToProtoBoundingBox(BoundingBoxXYZ) Converts a Revit API BoundingBoxXYZ to Dynamo Geometry BoundingBox Declaration public static BoundingBox ToProtoBoundingBox(this BoundingBoxXYZ bboxXYZ) Parameters Type Name Description BoundingBoxXYZ bboxXYZ Returns Type Description BoundingBox"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.TagCreationService.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.TagCreationService.html",
    "title": "Class TagCreationService | DynamoForRevitUtils - Docs",
    "summary": "Class TagCreationService Abstract base class for creating Tag creation services. Inheritance object TagCreationService Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public abstract class TagCreationService Constructors TagCreationService() Constructor TagInfo class. Declaration protected TagCreationService() Exceptions Type Condition ArgumentNullException Properties ValidCategories The valid categories for the Element. Declaration protected abstract List<BuiltInCategory> ValidCategories { get; } Property Value Type Description List<BuiltInCategory> _tagInfo Object representing information about a tag, including the element to tag, the owner view, the symbol id, offset, link instance, and whether to add a leader. Declaration protected abstract TagInfo _tagInfo { get; set; } Property Value Type Description TagInfo Methods CreateTag() Creates a Autodesk.Revit.DB.IndependentTag for this Element on Revit active Autodesk.Revit.DB.Document. Declaration public IndependentTag CreateTag() Returns Type Description IndependentTag SetTagLocationAndHeadPositionOnFloorPlan(TagInfo) Sets the tag location and head position on the Floor Plan. Declaration protected abstract void SetTagLocationAndHeadPositionOnFloorPlan(TagInfo tagInfo) Parameters Type Name Description TagInfo tagInfo Information about the tag, including the element to tag, the owner view, the symbol id, offset, link instance, and whether to add a leader. SetTagLocationAndHeadPositionOnSection(TagInfo) Sets the tag location and head position on a Section in Revit. Declaration protected abstract void SetTagLocationAndHeadPositionOnSection(TagInfo tagInfo) Parameters Type Name Description TagInfo tagInfo Information about the tag, including the element to tag, the owner view, the symbol id, offset, link instance, and whether to add a leader. Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.TagInfo.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.TagInfo.html",
    "title": "Class TagInfo | DynamoForRevitUtils - Docs",
    "summary": "Class TagInfo Represents information required for creating a new tag in Revit. Inheritance object TagInfo Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public class TagInfo Constructors TagInfo(Element, ElementId, ElementId?, double, RevitLinkInstance?, bool) Constructor TagInfo class. Declaration public TagInfo(Element element, ElementId ownerViewId, ElementId? symbolId = null, double offset = 0, RevitLinkInstance? linkInstance = null, bool addLeader = false) Parameters Type Name Description Element element Element that the tag will be created for. ElementId ownerViewId The Id of the View that the tag will be created in. ElementId symbolId The Id of the TagType that the tag will be created with. double offset The Tag offset in Display units. RevitLinkInstance linkInstance The RevitLinkInstance that the Element belongs to. bool addLeader When true, the tag will be created with a leader. Exceptions Type Condition ArgumentNullException Properties AddLeader When true, the tag will be created with a leader. Declaration public bool AddLeader { get; } Property Value Type Description bool Element The Element that the tag will be created for. Declaration public Element Element { get; } Property Value Type Description Element LeaderElbow The Tag leader elbow point. Declaration public XYZ LeaderElbow { get; set; } Property Value Type Description XYZ LeaderEnd The Tag leader end point. Declaration public XYZ LeaderEnd { get; set; } Property Value Type Description XYZ LinkInstance The RevitLinkInstance that the Element belongs to. Declaration public RevitLinkInstance? LinkInstance { get; } Property Value Type Description RevitLinkInstance Location The location of the tag. Declaration public XYZ Location { get; set; } Property Value Type Description XYZ Offset The Tag offset in Display units. Declaration public double Offset { get; } Property Value Type Description double OwnerView The View that the tag will be created in. Declaration public View OwnerView { get; } Property Value Type Description View OwnerViewId The Id of the View that the tag will be created in. Declaration public ElementId OwnerViewId { get; } Property Value Type Description ElementId SymbolId The TagType that the tag will be created with. Declaration public ElementId? SymbolId { get; } Property Value Type Description ElementId TagHeadPosition The Tag head point. Declaration public XYZ TagHeadPosition { get; set; } Property Value Type Description XYZ TagReference The Tag reference. Declaration public Reference TagReference { get; } Property Value Type Description Reference Extension Methods ObjectServices.TryCast<T>(object)"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.TaskDialogServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.TaskDialogServices.html",
    "title": "Class TaskDialogServices | DynamoForRevitUtils - Docs",
    "summary": "Class TaskDialogServices Services for Task Dialogs Inheritance object TaskDialogServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class TaskDialogServices Methods ShowDecisionDialog(string, string?, bool, string?) A dialog designed to return true for when the user clicks on the yes button of the dialog and false for any other option Declaration public static bool ShowDecisionDialog(string mainInstruction, string? title = null, bool DefaultToYes = false, string? helpLink = null) Parameters Type Name Description string mainInstruction Dialog instruction string title bool DefaultToYes string helpLink Returns Type Description bool ShowError(string, string?, string?) Show a Task Dialog with an error icon Declaration public static void ShowError(string mainInstruction, string? title = null, string? helpLink = null) Parameters Type Name Description string mainInstruction Dialog instruction string title string helpLink ShowInformation(string, string?, string?) Show a Dialog with an information icon Declaration public static void ShowInformation(string mainInstruction, string? title = null, string? helpLink = null) Parameters Type Name Description string mainInstruction Dialog instruction string title Task Dialog window title string helpLink ShowMultiChoiceDialog(string, string, string, string, string?, string?) A task dialog with up to four options to let the user choose. Declaration public static TaskDialogResult ShowMultiChoiceDialog(string title, string mainInstruction, string firstChoiceMsg, string secondChoiceMsg, string? thirdMsgChoiceMsg = null, string? fourthChoiceMsg = null) Parameters Type Name Description string title string mainInstruction Dialog instruction string firstChoiceMsg string secondChoiceMsg string thirdMsgChoiceMsg string fourthChoiceMsg Returns Type Description TaskDialogResult Exceptions Type Condition Exception ShowWarning(string, string?, string?) Show a Task Dialog with a warning icon Declaration public static void ShowWarning(string mainInstruction, string? title = null, string? helpLink = null) Parameters Type Name Description string mainInstruction Dialog instruction string title Task Dialog window title string helpLink"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.ViewServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.ViewServices.html",
    "title": "Class ViewServices | DynamoForRevitUtils - Docs",
    "summary": "Class ViewServices Class containing tools to deal with Revit Views Inheritance object ViewServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ViewServices Methods GetActiveUIView(UIDocument) Get active UIView Declaration public static UIView? GetActiveUIView(UIDocument uidoc) Parameters Type Name Description UIDocument uidoc Returns Type Description UIView GetCuboid(View3D) Extension method to get a Autodesk.DesignScript.Geometry.Cuboid that represents the View3d SectionBox, properly positioned in 3d space Declaration public static Cuboid GetCuboid(this View3D view3d) Parameters Type Name Description View3D view3d Returns Type Description Cuboid GetPlane(View) Get the Plane of a View. The Plane is created by the ViewDirection and Origin of the View Declaration public static Plane? GetPlane(this View view) Parameters Type Name Description View view Returns Type Description Plane PickPointOnActive2DView(string, bool, ObjectSnapTypes?) Pick a point on the Active 2D view. Declaration public static XYZ PickPointOnActive2DView(string prompt = \"Select Point\", bool showDialog = false, ObjectSnapTypes? snapTypes = null) Parameters Type Name Description string prompt Prompt selection text bool showDialog Whether show a TaskDialog or not ObjectSnapTypes? snapTypes Snap types allowed during PickPoint operations. Leave null to set all. Returns Type Description XYZ TrySet2DViewPlaneAsWorkPlane(View) Try set view plane as work plane Declaration public static void TrySet2DViewPlaneAsWorkPlane(View view) Parameters Type Name Description View view Validate2DViewToPlaceAnnotations(View, bool) Validate a View to place annotations Declaration public static void Validate2DViewToPlaceAnnotations(this View view, bool mustBeViewPlan = false) Parameters Type Name Description View view View to validate bool mustBeViewPlan Set true to validate if the view is Autodesk.Revit.DB.ViewPlan Exceptions Type Condition ArgumentNullException Thrown if view is null Exception Thrown if any other error occurs"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.WallServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.WallServices.html",
    "title": "Class WallServices | DynamoForRevitUtils - Docs",
    "summary": "Class WallServices Class containing tools to deal with Revit Walls Inheritance object WallServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.RevitServices Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class WallServices Methods GetBasicWallsNearby(Wall) Gets the Basic Walls nearby to the given wall Declaration public static List<Wall> GetBasicWallsNearby(this Wall wall) Parameters Type Name Description Wall wall Returns Type Description List<Wall> List of Basic Walls nearby to provided wall GetBottomSurface(Wall) Get Bottom Face of this Wall Declaration public static Surface? GetBottomSurface(this Wall wall) Parameters Type Name Description Wall wall Returns Type Description Surface GetExtendedLocation(Wall, double) Retrieves extended Location Line from this wall, translated to its base offset. Extended Location Curve is that one that comprehends the whole Wall extension. Not only defined by its location curve. Which includes joints with other Walls. Declaration public static Curve GetExtendedLocation(this Wall wall, double extents = 0) Parameters Type Name Description Wall wall double extents Returns Type Description Curve GetExtendedLocationLine(Wall, double) Retrieves extended Location Line from this wall, translated to its base offset. Extended Location Line is that one that comprehends the whole Wall extension. Not only defined by its location line. Which includes joints with other Walls. Declaration public static Line GetExtendedLocationLine(this Wall wall, double extents = 0) Parameters Type Name Description Wall wall double extents Returns Type Description Line Remarks Only works on straight walls Exceptions Type Condition Exception GetExtendedSolid(Wall, double) Retrieves extended solid from this wall. Extended solid is that one that comprehends the whole Wall extension. Not only defined by its location line. Which includes joints with other Walls. Declaration public static Solid? GetExtendedSolid(this Wall wall, double extents = 0) Parameters Type Name Description Wall wall double extents Returns Type Description Solid Remarks Only works on straight walls GetExtremitiesSurfaces(Wall) Get extremities surfaces Declaration public static Dictionary<string, Surface> GetExtremitiesSurfaces(this Wall wall) Parameters Type Name Description Wall wall Returns Type Description Dictionary<string, Surface> Exceptions Type Condition Exception GetFairwayVerticalSurfaces(Wall, double) Get nearby vertical surfaces from this Wall. This could return this Wall extremity surfaces if there are not Walls joined at its ends. Declaration public static List<Surface> GetFairwayVerticalSurfaces(this Wall wall, double searchDistance) Parameters Type Name Description Wall wall Wall to get fairway vertical surfaces double searchDistance Distance to search Vertical surfaces. Recommend to be major then most larger wall width Returns Type Description List<Surface> Fairway vertical surfaces from Wall Remarks Only works for straight walls GetFrontalSurfaces(Wall) Gets the front faces associated with a wall. Some walls joined together may have their front face split. Because of this, this method returns a list of faces. Declaration public static List<Surface> GetFrontalSurfaces(this Wall wall) Parameters Type Name Description Wall wall Returns Type Description List<Surface> GetHorizontalSurfaces(Wall) Gets horizontal Surfaces of this Wall Declaration public static List<Surface> GetHorizontalSurfaces(this Wall wall) Parameters Type Name Description Wall wall Returns Type Description List<Surface> Exceptions Type Condition ArgumentException GetJoinedElementsAtEnds(Wall) Getting joined elements at Wall ends Declaration public static Dictionary<string, List<Element>> GetJoinedElementsAtEnds(this Wall wall) Parameters Type Name Description Wall wall Wall to detect joined elements at ends Returns Type Description Dictionary<string, List<Element>> Joined elements at ends GetJoinedElementsAtEnds(Wall, BuiltInCategory) Getting joined elements at Wall ends from given Autodesk.Revit.DB.BuiltInCategory Declaration public static Dictionary<string, List<Element>> GetJoinedElementsAtEnds(this Wall wall, BuiltInCategory category) Parameters Type Name Description Wall wall Wall to detect joined elements at ends BuiltInCategory category Category to filter elements Returns Type Description Dictionary<string, List<Element>> Joined elements at ends GetLateralSurfaces(Wall) Get lateral surfaces. Declaration public static List<Surface> GetLateralSurfaces(this Wall wall) Parameters Type Name Description Wall wall Returns Type Description List<Surface> Remarks Lateral faces are those that are parallel to the wall axis GetParallelGrids(Wall, Document?) Gets parallel grids to this straight Wall Declaration public static List<Grid> GetParallelGrids(this Wall wall, Document? document = null) Parameters Type Name Description Wall wall Wall to get straight parallel Grids Document document Document to get grids Returns Type Description List<Grid> Remarks Only returns straight grids GetPhysicalLocation(Wall) Gets the Wall physical location curve based on its base offset Declaration public static Curve GetPhysicalLocation(this Wall wall) Parameters Type Name Description Wall wall Wall to get location Returns Type Description Curve GetProtoSolid(Wall) Get the protosolid of a Wall. Declaration public static Solid GetProtoSolid(this Wall wall) Parameters Type Name Description Wall wall The Wall to get the protosolid from. Returns Type Description Solid The protosolid of the Wall. Remarks This method uses a different approach from ToProtoType() method. It uses the Wall's physical location and dimensions to create a Autodesk.DesignScript.Geometry.Solid. The returned solid does not contains openings, it is a simple extrusion of the Wall's location curve. Use this method to analyze the Wall's geometry without considering its openings. GetTopFace(Wall) Get Top Face of this Wall Declaration public static Surface? GetTopFace(this Wall wall) Parameters Type Name Description Wall wall Returns Type Description Surface Exceptions Type Condition Exception GetVerticalSurfaces(Wall) Gets vertical Surfaces of this Wall Declaration public static List<Surface> GetVerticalSurfaces(this Wall wall) Parameters Type Name Description Wall wall Returns Type Description List<Surface> Exceptions Type Condition ArgumentException"
  },
  "api/DynamoForRevitUtils.Services.RevitServices.html": {
    "href": "api/DynamoForRevitUtils.Services.RevitServices.html",
    "title": "Namespace DynamoForRevitUtils.Services.RevitServices | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.RevitServices Classes CategoryServices Revit Categories services DesignOptionServices Design options collectors DocumentServices Document utils codes ElementIdServices ElementId Services ElementServices Elements conversions FamilyInstanceServices Class that contains methods to work with Family Instances GridServices Grid services. ImportInstanceServices Elements conversions LevelServices Elements conversions MEPCurveServices General utile for Revit Elements RevitGeometryServices Revit geometry tools TagCreationService Abstract base class for creating Tag creation services. TagInfo Represents information required for creating a new tag in Revit. TaskDialogServices Services for Task Dialogs ViewServices Class containing tools to deal with Revit Views WallServices Class containing tools to deal with Revit Walls"
  },
  "api/DynamoForRevitUtils.Services.UnitsConversion.ConversionServices.html": {
    "href": "api/DynamoForRevitUtils.Services.UnitsConversion.ConversionServices.html",
    "title": "Class ConversionServices | DynamoForRevitUtils - Docs",
    "summary": "Class ConversionServices Class for units conversion between Dynamo and Revit active document Inheritance object ConversionServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.UnitsConversion Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ConversionServices Methods ConvertBetweenUnits(double, ForgeTypeId, ForgeTypeId) Converts a value between two unit types using the specified current and target Autodesk.Revit.DB.UnitTypeId. Declaration public static double ConvertBetweenUnits(this double x, ForgeTypeId currentUnitTypeId, ForgeTypeId targetUnitTypeId) Parameters Type Name Description double x The value to be converted from the current unit type to the target unit type. ForgeTypeId currentUnitTypeId The Autodesk.Revit.DB.UnitTypeId representing the unit type of the input value. ForgeTypeId targetUnitTypeId The Autodesk.Revit.DB.UnitTypeId representing the unit type to which the input value should be converted. Returns Type Description double The value converted from the current unit type to the target unit type. Remarks Autodesk.Revit.DB.UnitTypeId defines the unit used for measurement, like meter, square meters, cubic meters, etc. See also: Revit API Docs - UnitTypeId ConvertDisplayToInternalUnit(double, ForgeTypeId, Document?) Converts a value from display units to Revit internal units based on a specified Autodesk.Revit.DB.SpecTypeId and document. Declaration public static double ConvertDisplayToInternalUnit(this double x, ForgeTypeId specTypeId, Document? doc = null) Parameters Type Name Description double x The value in display units to be converted. ForgeTypeId specTypeId The Autodesk.Revit.DB.SpecTypeId representing the specification type for the value being converted. Document doc The Revit document to retrieve display unit formats from. If not provided, the current document is used. Returns Type Description double The value converted to Revit internal units corresponding to the specified Autodesk.Revit.DB.SpecTypeId. Remarks Autodesk.Revit.DB.SpecTypeId specifies the \"kind\" of measurement, like length, area, volume, etc. See also: Revit API Docs - SpecTypeId ConvertFromDisplayUnit(double, ForgeTypeId, ForgeTypeId, Document?) Converts a value from the document's display units to a specified unit type, based on the provided Autodesk.Revit.DB.SpecTypeId. Declaration public static double ConvertFromDisplayUnit(this double x, ForgeTypeId targetUnitTypeId, ForgeTypeId specTypeId, Document? doc = null) Parameters Type Name Description double x The value in display units to be converted. ForgeTypeId targetUnitTypeId The Autodesk.Revit.DB.UnitTypeId representing the unit type to convert to. ForgeTypeId specTypeId The Autodesk.Revit.DB.SpecTypeId representing the specification type for the value being converted. Document doc The Revit document to retrieve the display unit formats from. If not provided, the current document is used. Returns Type Description double The value converted from display units to the specified target unit type. Exceptions Type Condition ArgumentException Thrown when the provided targetUnitTypeId is not valid for the specified specTypeId. ArgumentException Thrown when the provided specTypeId is not measurable. ConvertFromInternalUnit(double, ForgeTypeId, ForgeTypeId) Converts a value from Revit's internal units to a specified unit type, based on the provided Autodesk.Revit.DB.SpecTypeId. Declaration public static double ConvertFromInternalUnit(this double x, ForgeTypeId targetUnitTypeId, ForgeTypeId specTypeId) Parameters Type Name Description double x The value in Revit's internal units to be converted. ForgeTypeId targetUnitTypeId The Autodesk.Revit.DB.UnitTypeId representing the unit type to convert to. ForgeTypeId specTypeId The Autodesk.Revit.DB.SpecTypeId representing the specification type for the value being converted. Returns Type Description double The value converted from Revit's internal units to the specified target unit type. Exceptions Type Condition ArgumentException Thrown when the provided targetUnitTypeId is not valid for the specified specTypeId. ArgumentException Thrown when the provided specTypeId is not measurable. ConvertInternalToDisplayUnit(double, ForgeTypeId, Document?) Converts a value from Revit internal units to display units based on a specified Autodesk.Revit.DB.SpecTypeId and document. Declaration public static double ConvertInternalToDisplayUnit(this double x, ForgeTypeId specTypeId, Document? doc = null) Parameters Type Name Description double x The value in Revit's internal units to be converted. ForgeTypeId specTypeId The Autodesk.Revit.DB.SpecTypeId representing the specification type for the value being converted. Document doc The Revit document to retrieve display unit formats from. If not provided, the current document is used. Returns Type Description double The value converted to the display units corresponding to the specified Autodesk.Revit.DB.SpecTypeId. Remarks Autodesk.Revit.DB.SpecTypeId specifies the \"kind\" of measurement, like length, area, volume, etc. See also: Revit API Docs - SpecTypeId ConvertToDisplayUnit(double, ForgeTypeId, ForgeTypeId, Document?) Converts a value from a specified unit type to the document's display units, based on the provided Autodesk.Revit.DB.SpecTypeId. Declaration public static double ConvertToDisplayUnit(this double x, ForgeTypeId currentUnitTypeId, ForgeTypeId specTypeId, Document? doc = null) Parameters Type Name Description double x The value in the original unit type to be converted. ForgeTypeId currentUnitTypeId The Autodesk.Revit.DB.UnitTypeId representing the unit type of the input value. ForgeTypeId specTypeId The Autodesk.Revit.DB.SpecTypeId representing the specification type for the value being converted. Document doc The Revit document to retrieve the display unit formats from. If not provided, the current document is used. Returns Type Description double The value converted to the display units corresponding to the specified Autodesk.Revit.DB.SpecTypeId. Exceptions Type Condition ArgumentException Thrown when the provided currentUnitTypeId is not valid for the specified specTypeId. ArgumentException Thrown when the provided specTypeId is not measurable. ConvertToInternalUnit(double, ForgeTypeId, ForgeTypeId) Converts a value from a specified unit type to Revit's internal units, based on the provided Autodesk.Revit.DB.SpecTypeId. Declaration public static double ConvertToInternalUnit(this double x, ForgeTypeId currentUnitTypeId, ForgeTypeId specTypeId) Parameters Type Name Description double x The value in the original unit type to be converted. ForgeTypeId currentUnitTypeId The Autodesk.Revit.DB.UnitTypeId representing the unit type of the input value. ForgeTypeId specTypeId The Autodesk.Revit.DB.SpecTypeId representing the specification type for the value being converted. Returns Type Description double The value converted to Revit's internal units corresponding to the specified Autodesk.Revit.DB.SpecTypeId. Exceptions Type Condition ArgumentException Thrown when the provided currentUnitTypeId is not valid for the specified specTypeId. ArgumentException Thrown when the provided specTypeId is not measurable. DisplayMassDensityToInternalUnit(double, Document?) Converts a mass density value from display units to Revit's internal units based on display unit density. Declaration public static double DisplayMassDensityToInternalUnit(this double x, Document? doc = null) Parameters Type Name Description double x The mass density value in display units to be converted. Document doc The Revit document used to determine the display unit type for the conversion. If not provided, the current active document is used. Returns Type Description double The mass density value converted to Revit's internal units. Remarks Revit API does not have a convertion methods for mass desenty cases. InternalMassDensityToDisplayUnit(double, Document?) Converts a mass density value from Revit internal units to display units based on the document's unit settings. Declaration public static double InternalMassDensityToDisplayUnit(this double x, Document? doc = null) Parameters Type Name Description double x The mass density value in Revit's internal units to be converted. Document doc The Revit document to retrieve the display unit format for mass density from. If not provided, the current active document is used. Returns Type Description double The mass density value converted to the display units configured for the specified document. Remarks Revit API does not have a convertion methods for mass desenty cases. InternalMassDensityToKilogramsPerCubicMeter(double) Converts a mass density value in Revit's internal units to kilograms per cubic meter. Declaration public static double InternalMassDensityToKilogramsPerCubicMeter(this double x) Parameters Type Name Description double x The mass density value in Revit's internal units to be converted. Returns Type Description double The value converted to kilograms per cubic meter. Remarks Revit API does not have a convertion methods for mass desenty cases. InternalMassDensityToPoundsMassPerCubicFoot(double) Converts a value representing mass density from Revit internal units to pounds mass per cubic foot. Declaration public static double InternalMassDensityToPoundsMassPerCubicFoot(this double x) Parameters Type Name Description double x The value in Revit's internal mass density units to be converted. Returns Type Description double The value converted to pounds mass per cubic foot. Remarks Revit API does not have a convertion methods for mass desenty cases. KilogramsPerCubicMeterToInternal(double) Converts a value from kilograms per cubic meter (kg/m³) to Revit's internal mass density unit (kg/ft³). Declaration public static double KilogramsPerCubicMeterToInternal(this double x) Parameters Type Name Description double x The value in kilograms per cubic meter to be converted. Returns Type Description double The equivalent value converted to Revit's internal mass density unit. Remarks Revit API does not have a convertion methods for mass desenty cases. PoundsMassPerCubicFootToInternal(double) Converts a value from pounds mass per cubic foot to Revit's internal units for mass density. Declaration public static double PoundsMassPerCubicFootToInternal(this double x) Parameters Type Name Description double x The value in pounds mass per cubic foot to be converted. Returns Type Description double The value converted to Revit's internal units for mass density. Remarks Revit API does not have a convertion methods for mass desenty cases."
  },
  "api/DynamoForRevitUtils.Services.UnitsConversion.SpecificFactorsServices.html": {
    "href": "api/DynamoForRevitUtils.Services.UnitsConversion.SpecificFactorsServices.html",
    "title": "Class SpecificFactorsServices | DynamoForRevitUtils - Docs",
    "summary": "Class SpecificFactorsServices Class containing specific conversion factors Inheritance object SpecificFactorsServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.UnitsConversion Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class SpecificFactorsServices Fields KilogramsPerCubicMeter_To_KilogramsPerCubicFoot kg/m³ -> kg/ft³ Declaration public static double KilogramsPerCubicMeter_To_KilogramsPerCubicFoot Field Value Type Description double PoundsMassPerCubicFoot_To_KilogramsPerCubicFoot lb/ft³ -> kg/ft³ Declaration public static double PoundsMassPerCubicFoot_To_KilogramsPerCubicFoot Field Value Type Description double Methods GetMassDensityConversionFactorByDisplayUnits(ForgeTypeId) Gets the mass density conversion factor from display unit type to internal Declaration public static double GetMassDensityConversionFactorByDisplayUnits(ForgeTypeId displayUnitTypeId) Parameters Type Name Description ForgeTypeId displayUnitTypeId Returns Type Description double"
  },
  "api/DynamoForRevitUtils.Services.UnitsConversion.UnitsServices.html": {
    "href": "api/DynamoForRevitUtils.Services.UnitsConversion.UnitsServices.html",
    "title": "Class UnitsServices | DynamoForRevitUtils - Docs",
    "summary": "Class UnitsServices Class containing Spec types and Unit types Inheritance object UnitsServices Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: DynamoForRevitUtils.Services.UnitsConversion Assembly: DynamoForRevitUtils.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class UnitsServices Methods ChangeDisplayUnit(Document, ForgeTypeId, ForgeTypeId) Change Display unit Declaration public static void ChangeDisplayUnit(this Document document, ForgeTypeId specTypeId, ForgeTypeId unitTypeId) Parameters Type Name Description Document document Document to change unit ForgeTypeId specTypeId Define what Autodesk.Revit.DB.SpecTypeId to change. ForgeTypeId unitTypeId Define what Autodesk.Revit.DB.UnitTypeId to change. Remarks Autodesk.Revit.DB.SpecTypeId specifies the \"kind\" of measurement, like length, area, volume, etc. See also: Revit API Docs - SpecTypeId Autodesk.Revit.DB.UnitTypeId defines the unit used for measurement, like meter, square meters, cubic meters, etc. See also: Revit API Docs - UnitTypeId Exceptions Type Condition InvalidOperationException Thown if the given Autodesk.Revit.DB.UnitTypeId is not valid for the given Autodesk.Revit.DB.SpecTypeId. GetDisplayUnit(Document, ForgeTypeId) Get display unit (Autodesk.Revit.DB.UnitTypeId) for a specified Autodesk.Revit.DB.SpecTypeId. Declaration public static ForgeTypeId GetDisplayUnit(this Document document, ForgeTypeId specTypeId) Parameters Type Name Description Document document Document to get unit from ForgeTypeId specTypeId Define what Autodesk.Revit.DB.SpecTypeId to retrieve. Returns Type Description ForgeTypeId The Autodesk.Revit.DB.UnitTypeId representing the current display unit for the specified Autodesk.Revit.DB.SpecTypeId. Remarks Autodesk.Revit.DB.SpecTypeId specifies the \"kind\" of measurement, like length, area, volume, etc. See also: Revit API Docs - SpecTypeId Autodesk.Revit.DB.UnitTypeId defines the unit used for measurement, like meter, square meters, cubic meters, etc. See also: Revit API Docs - UnitTypeId"
  },
  "api/DynamoForRevitUtils.Services.UnitsConversion.html": {
    "href": "api/DynamoForRevitUtils.Services.UnitsConversion.html",
    "title": "Namespace DynamoForRevitUtils.Services.UnitsConversion | DynamoForRevitUtils - Docs",
    "summary": "Namespace DynamoForRevitUtils.Services.UnitsConversion Classes ConversionServices Class for units conversion between Dynamo and Revit active document SpecificFactorsServices Class containing specific conversion factors UnitsServices Class containing Spec types and Unit types"
  },
  "api/NodeModelsFunctions.AbstractGeometry.html": {
    "href": "api/NodeModelsFunctions.AbstractGeometry.html",
    "title": "Class AbstractGeometry | DynamoForRevitUtils - Docs",
    "summary": "Class AbstractGeometry Provides static methods for visualizing different types of geometries. Inheritance object AbstractGeometry Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class AbstractGeometry Methods BoundingBoxViewer(BoundingBox, Color, bool) Visualizes a bounding box in the specified color and wireframe mode. Declaration public static List<GeometryColor> BoundingBoxViewer(BoundingBox boundingBox, Color color, bool wireframe = false) Parameters Type Name Description BoundingBox boundingBox The bounding box to visualize. Color color The color of the bounding box. bool wireframe Indicates whether to display the bounding box in wireframe mode. Default is false. Returns Type Description List<GeometryColor> A list of colorized geometries representing the visualization of the bounding box. CoordinateSystemViewer(CoordinateSystem, double) Generates a Coordinate System visualization in Dynamo. Declaration public static List<GeometryColor> CoordinateSystemViewer(CoordinateSystem cs, double size = 1) Parameters Type Name Description CoordinateSystem cs The Coordinate System to visualize. double size The size of the Coordinate System visualization. Returns Type Description List<GeometryColor> A list of Coordinate System visualizations. VectorViewer(Vector, Point, Color, double) Visualizes a vector in 3D space. Declaration public static List<GeometryColor> VectorViewer(Vector vector, Point origin, Color color, double size = 1) Parameters Type Name Description Vector vector The vector to visualize. Point origin The origin point of the vector. Color color The color of the vector visualization. If not specified, it defaults to red (255, 0, 0). double size The size of the vector visualization. Defaults to 1. Returns Type Description List<GeometryColor> A list of colorized geometries representing the vector visualization."
  },
  "api/NodeModelsFunctions.CSV.html": {
    "href": "api/NodeModelsFunctions.CSV.html",
    "title": "Class CSV | DynamoForRevitUtils - Docs",
    "summary": "Class CSV CSV Node Models functions Inheritance object CSV Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class CSV Methods Read(string, string, bool, bool, object, object, bool) Imports data from a CSV (comma separated values) file, put the items into a list and transpose it if needed. Declaration public static IList? Read(string filePath, string delimiter, bool transpose, bool readAsString, object encodingObj, object cultureInfoObj, bool refresh) Parameters Type Name Description string filePath CSV file to be converted into a list string delimiter CSV delimiter. bool transpose Toggle to transpose the imported data bool readAsString Choose whether read all file as string or not object encodingObj Encoding as object. Define the encoding to be used for reading the file. object cultureInfoObj CultureInfo as object. Define the culture to be used for parsing the numbers. bool refresh Change value to refresh read. Returns Type Description IList List containing the items in the CSV file Remarks cultureInfoObj and encodingObj parsed as object to avoid exposing the CultureInfo and Encoding classes in the Dynamo Library. See Also https://github.com/DynamoDS/Dynamo/blob/master/src/Libraries/DSOffice/Excel.cs Write(string, object[][], string) Function to write CSV file Declaration public static string Write(string filePath, object[][] data, string delimiter) Parameters Type Name Description string filePath object[][] data string delimiter Returns Type Description string"
  },
  "api/NodeModelsFunctions.DefaultInputs.html": {
    "href": "api/NodeModelsFunctions.DefaultInputs.html",
    "title": "Class DefaultInputs | DynamoForRevitUtils - Docs",
    "summary": "Class DefaultInputs Default inputs to use in nodes Inheritance object DefaultInputs Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class DefaultInputs Fields DEFAULT_COLOR Default color to use in inputs Declaration public const string DEFAULT_COLOR = \"NodeModelsFunctions.DefaultInputs.GetDefaultColor()\" Field Value Type Description string DEFAULT_CULTURE_INFO Default culture info to use in inputs Declaration public const string DEFAULT_CULTURE_INFO = \"NodeModelsFunctions.DefaultInputs.GetDefaultCultureInfo()\" Field Value Type Description string DEFAULT_ENCODING Default encoding to use in inputs Declaration public const string DEFAULT_ENCODING = \"NodeModelsFunctions.DefaultInputs.GetDefaultEncoding()\" Field Value Type Description string DEFAULT_PARAMETER_KIND Get default parameter kind Declaration public const string DEFAULT_PARAMETER_KIND = \"NodeModelsFunctions.DefaultInputs.GetDefaultParameterKind()\" Field Value Type Description string DEFAULT_SELECTION_METHOD Get default selection method Declaration public const string DEFAULT_SELECTION_METHOD = \"NodeModelsFunctions.DefaultInputs.GetDefaultSelectionMethod()\" Field Value Type Description string DEFAULT_STORAGE_TYPE Get default Autodesk.Revit.DB.StorageType Declaration public const string DEFAULT_STORAGE_TYPE = \"NodeModelsFunctions.DefaultInputs.GetDefaultDataType()\" Field Value Type Description string EMPTY_STRING Default value string empty Declaration public const string EMPTY_STRING = \"NodeModelsFunctions.DefaultInputs.GetEmptyString()\" Field Value Type Description string FALSE Default value boolean false Declaration public const string FALSE = \"NodeModelsFunctions.DefaultInputs.GetFalse()\" Field Value Type Description string IDENTITY Gets world coordinate system Declaration public const string IDENTITY = \"NodeModelsFunctions.DefaultInputs.GetIdentity()\" Field Value Type Description string NULL Default null value Declaration public const string NULL = \"NodeModelsFunctions.DefaultInputs.GetNull()\" Field Value Type Description string ORIGIN Gets World origin Declaration public const string ORIGIN = \"NodeModelsFunctions.DefaultInputs.GetOrigin()\" Field Value Type Description string TRUE Default value boolean true Declaration public const string TRUE = \"NodeModelsFunctions.DefaultInputs.GetTrue()\" Field Value Type Description string ZERO Default value double zero Declaration public const string ZERO = \"NodeModelsFunctions.DefaultInputs.GetZero()\" Field Value Type Description string Methods GetDefaultColor() Default color to use in inputs Declaration public static Color GetDefaultColor() Returns Type Description Color GetDefaultCultureInfo() Retrieves the default CultureInfo used for parsing and formatting operations within the CSV processing context. Declaration public static object GetDefaultCultureInfo() Returns Type Description object Default CultureInfo object, typically representing an invariant culture setting. GetDefaultDataType() Get default Autodesk.Revit.DB.StorageType Methods that returns visible enum to Dynamo must be return object instead, in order to they don't appears on Library Declaration public static ParameterDataType GetDefaultDataType() Returns Type Description ParameterDataType GetDefaultEncoding() Retrieves the default encoding used for reading or writing CSV files. Declaration public static object GetDefaultEncoding() Returns Type Description object Default encoding object, typically UTF8. GetDefaultParameterKind() Get default parameter kind Declaration public static ParameterKind GetDefaultParameterKind() Returns Type Description ParameterKind GetDefaultSelectionMethod() Get default selection method Declaration public static SelectionMethod GetDefaultSelectionMethod() Returns Type Description SelectionMethod GetEmptyString() Default value string empty Declaration public static string GetEmptyString() Returns Type Description string GetFalse() Default value boolean false Declaration public static bool GetFalse() Returns Type Description bool GetIdentity() Gets world coordinate system Declaration public static CoordinateSystem GetIdentity() Returns Type Description CoordinateSystem GetNull() Default null value Declaration public static object? GetNull() Returns Type Description object GetOrigin() Gets World origin Declaration public static Point GetOrigin() Returns Type Description Point GetTrue() Default value boolean true Declaration public static bool GetTrue() Returns Type Description bool GetZero() Default value double zero Declaration public static double GetZero() Returns Type Description double"
  },
  "api/NodeModelsFunctions.DropDown.html": {
    "href": "api/NodeModelsFunctions.DropDown.html",
    "title": "Class DropDown | DynamoForRevitUtils - Docs",
    "summary": "Class DropDown Functions to DropDown NodeModels Inheritance object DropDown Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class DropDown Methods EnumParserUsingReflection(string, string, string) Enum parser using Reflection Declaration public static object EnumParserUsingReflection(string enumTypeFullName, string enumAssemblyPath, string value) Parameters Type Name Description string enumTypeFullName Full name of enum type string enumAssemblyPath Full path of assembly that contains the enum string value Enum value to be parsed Returns Type Description object Remarks There are some restrictions to use this function on Dynamo Node Models: Enums needs to be parsed as object to Dynamo don't see them Dynamo API doesn't work with generics. Because of that reflection is used. Function call needs to be made here on NodeModelFunctions assembly GetCulture(int) Gets a CultureInfo object for the specified locale identifier (LCID). Declaration public static object GetCulture(int LCID) Parameters Type Name Description int LCID The locale identifier for the culture. Returns Type Description object A CultureInfo object corresponding to the given LCID. GetElementByStrId(string) Retrieves an element based on its string ID. Declaration public static Element GetElementByStrId(string strId) Parameters Type Name Description string strId The string ID of the element. Returns Type Description Element The element with the specified string ID, or null if no such element exists. Remarks The string ID is different from the UniqueId. It is a string representation of the ElementId. GetEncoding(int) Retrieves an encoding by its codePage. Declaration public static object GetEncoding(int codePage) Parameters Type Name Description int codePage The codePage of the encoding to retrieve. Returns Type Description object An Encoding object corresponding to the specified codePage."
  },
  "api/NodeModelsFunctions.ElementParameterNodesFunctions.html": {
    "href": "api/NodeModelsFunctions.ElementParameterNodesFunctions.html",
    "title": "Class ElementParameterNodesFunctions | DynamoForRevitUtils - Docs",
    "summary": "Class ElementParameterNodesFunctions Contains functions for creating and manipulating ElementParameter objects. Inheritance object ElementParameterNodesFunctions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class ElementParameterNodesFunctions Methods CreateByBuiltInParameter(object, ParameterDataType, ParameterKind, object) Creates a new ElementParameter instance based on the provided input values. Declaration public static ElementParameter? CreateByBuiltInParameter(object builtInParameter, ParameterDataType dataType, ParameterKind kind, object value) Parameters Type Name Description object builtInParameter The built-in parameter value to assign. ParameterDataType dataType The data type of the parameter. ParameterKind kind The kind of the parameter, indicating its type or instance classification. object value The initial value of the parameter. Returns Type Description ElementParameter A newly created ElementParameter instance with the specified properties. Remarks builtInParameter needs to be of Type object to not be expose Autodesk.Revit.DB.BuiltInParameter enum on Dynamo Library. CreateByName(string, ParameterDataType, ParameterKind, object) Creates a new ElementParameter instance by user input. Declaration public static ElementParameter? CreateByName(string name, ParameterDataType dataType, ParameterKind kind, object value) Parameters Type Name Description string name The parameter name. ParameterDataType dataType The storage type of the parameter. ParameterKind kind The kind of the parameter. object value The value of the parameter. Returns Type Description ElementParameter A new ElementParameter instance. GetDataType(ElementParameter) Retrieves the data type of the specified ElementParameter object. Declaration public static ParameterDataType GetDataType(ElementParameter elementParameter) Parameters Type Name Description ElementParameter elementParameter The ElementParameter instance for which the data type is to be retrieved. Returns Type Description ParameterDataType The data type of the given ElementParameter object. GetKind(ElementParameter) Retrieves the kind of the specified ElementParameter instance. Declaration public static ParameterKind GetKind(ElementParameter elementParameter) Parameters Type Name Description ElementParameter elementParameter The ElementParameter instance from which to retrieve the kind. Returns Type Description ParameterKind The kind of the specified ElementParameter instance. GetName(ElementParameter) Gets the name of a ElementParameter instance. Declaration public static string GetName(ElementParameter elementParameter) Parameters Type Name Description ElementParameter elementParameter The ElementParameter instance. Returns Type Description string The name of the ElementParameter instance. GetValue(ElementParameter) Retrieves the value of the specified ElementParameter instance. Declaration public static object GetValue(ElementParameter elementParameter) Parameters Type Name Description ElementParameter elementParameter The ElementParameter instance from which to get the value. Returns Type Description object The value of the specified ElementParameter instance."
  },
  "api/NodeModelsFunctions.RevitNodes.html": {
    "href": "api/NodeModelsFunctions.RevitNodes.html",
    "title": "Class RevitNodes | DynamoForRevitUtils - Docs",
    "summary": "Class RevitNodes Revit Node Models functions Inheritance object RevitNodes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class RevitNodes Methods BuiltInCategoryToDynamoCategory(object) Function to convert a BuiltInCategory to a Dynamo Category Declaration public static Category BuiltInCategoryToDynamoCategory(object bic) Parameters Type Name Description object bic The BuiltInCategory to convert Returns Type Description Category The converted Dynamo Category Remarks NOTE: use object as input type to avoid that Autodesk.Revit.DB.BuiltInCategory Enum appears in Dynamo Library BuiltInToUIName(object) Function to get UI name for BuiltInParameter or BuiltInCategory Declaration public static string BuiltInToUIName(object builtIn) Parameters Type Name Description object builtIn Returns Type Description string"
  },
  "api/NodeModelsFunctions.Selection.html": {
    "href": "api/NodeModelsFunctions.Selection.html",
    "title": "Class Selection | DynamoForRevitUtils - Docs",
    "summary": "Class Selection Functions to Selection Nodes Inheritance object Selection Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class Selection Methods BySelectionMethodAndCategories(object, List<Category>, bool, bool) Select Elements from given Category based on Selection Method and Declaration public static SelectionResults? BySelectionMethodAndCategories(object selectionMethod, List<Category> categories, bool getLinkedElements = false, bool refresh = true) Parameters Type Name Description object selectionMethod Selection method List<Category> categories List of categories to filter selection bool getLinkedElements Choose whether get linked elements or not bool refresh Refresh selection Returns Type Description SelectionResults Selected Elements BySelectionMethodAndCategory(object, Category, bool, bool) Select Elements from given Category based on Selection Method Declaration public static SelectionResults? BySelectionMethodAndCategory(object selectionMethod, Category category, bool getLinkedElements = false, bool refresh = true) Parameters Type Name Description object selectionMethod Selection method Category category Category to filter selection bool getLinkedElements Choose whether get linked elements or not bool refresh Refresh selection Returns Type Description SelectionResults Selected Elements GetSelectionResultsActiveView(SelectionResults) Get Active view from Selection Results Declaration public static View GetSelectionResultsActiveView(SelectionResults selectionResults) Parameters Type Name Description SelectionResults selectionResults Returns Type Description View GetSelectionResultsElements(SelectionResults, bool) Get Elements from Selection Results Declaration public static IList? GetSelectionResultsElements(SelectionResults selectionResults, bool groupByCategory = false) Parameters Type Name Description SelectionResults selectionResults Selection results to get elements bool groupByCategory Set true to group elements by settings categories Returns Type Description IList GetSelectionResultsRevitLinkInstances(SelectionResults, bool) Get Revit Link instances from Selection Results Declaration public static IList? GetSelectionResultsRevitLinkInstances(SelectionResults selectionResults, bool groupByCategory = false) Parameters Type Name Description SelectionResults selectionResults Selection results to get Revit link instances bool groupByCategory Set true to group Revit link instances based on settings categories Returns Type Description IList ViewCollector(bool, List<ViewType>, string, bool) Collects Views from active Document Declaration public static List<Element> ViewCollector(bool activeView, List<ViewType> viewTypes, string searchString, bool refresh = true) Parameters Type Name Description bool activeView List<ViewType> viewTypes string searchString bool refresh Returns Type Description List<Element>"
  },
  "api/NodeModelsFunctions.TextFunctions.html": {
    "href": "api/NodeModelsFunctions.TextFunctions.html",
    "title": "Class TextFunctions | DynamoForRevitUtils - Docs",
    "summary": "Class TextFunctions Functions to deal with text Inheritance object TextFunctions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class TextFunctions Methods FilterTextByRegex(string, string, bool, bool) Filter text by regular expression Declaration public static List<string> FilterTextByRegex(string text, string expression, bool ignoreCase = true, bool multiLine = false) Parameters Type Name Description string text string expression bool ignoreCase bool multiLine Returns Type Description List<string>"
  },
  "api/NodeModelsFunctions.Topography.html": {
    "href": "api/NodeModelsFunctions.Topography.html",
    "title": "Class Topography | DynamoForRevitUtils - Docs",
    "summary": "Class Topography Topography functions to Node models Inheritance object Topography Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: NodeModelsFunctions Assembly: DynamoForRevitNodeModelsFunctions.dll Syntax [IsVisibleInDynamoLibrary(false)] public static class Topography Methods GetSurfaces(Topography) Function to get Topography surfaces Declaration public static IEnumerable<Surface> GetSurfaces(Topography topo) Parameters Type Name Description Topography topo Returns Type Description IEnumerable<Surface> PointsProject(List<Surface>, List<Point>) Function to project a point into a Topography surfaces list Declaration public static List<Point> PointsProject(List<Surface> topoSurfaces, List<Point> points) Parameters Type Name Description List<Surface> topoSurfaces List<Point> points Returns Type Description List<Point>"
  },
  "api/NodeModelsFunctions.html": {
    "href": "api/NodeModelsFunctions.html",
    "title": "Namespace NodeModelsFunctions | DynamoForRevitUtils - Docs",
    "summary": "Namespace NodeModelsFunctions Classes AbstractGeometry Provides static methods for visualizing different types of geometries. CSV CSV Node Models functions DefaultInputs Default inputs to use in nodes DropDown Functions to DropDown NodeModels ElementParameterNodesFunctions Contains functions for creating and manipulating ElementParameter objects. RevitNodes Revit Node Models functions Selection Functions to Selection Nodes TextFunctions Functions to deal with text Topography Topography functions to Node models"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | DynamoForRevitUtils - Docs",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | DynamoForRevitUtils - Docs",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | DynamoForRevitUtils - Docs",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}