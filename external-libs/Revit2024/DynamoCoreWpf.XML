<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamoCoreWpf</name>
    </assembly>
    <members>
        <member name="T:Dynamo.Wpf.Controls.InstalledPackagesControl">
            <summary>
            Interaction logic for InstalledPackagesControl.xaml
            </summary>
            <summary>
            InstalledPackagesControl
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Controls.InstalledPackagesControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Controls.NotificationsControl">
            <summary>
            Interaction logic for NotificationsControl.xaml
            </summary>
            <summary>
            NotificationsControl
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Controls.NotificationsControl.window_PreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handle the DynamoView's PreviewMouseDown event.
            When the user click anywhere in the view, clear the ViewModel's warning.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.Controls.NotificationsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Controls.RunSettingsControl">
            <summary>
            Interaction logic for RunManagerControl.xaml
            </summary>
            <summary>
            RunSettingsControl
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Controls.RunSettingsControl.UIElement_OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Use the KeyDown event handler to set the binding to update
            when the enter key is pressed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dynamo.Wpf.Controls.RunSettingsControl.debugCheckBox">
            <summary>
            debugCheckBox Name Field
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Controls.RunSettingsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.ViewModelCommandExecutive">
            <summary>
            The ViewModelCommandExecutive provides access to DynamoViewModel and WorkspaceViewModel commands
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewModelCommandExecutive.#ctor(Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            Create a Command Executive for a DynamoViewModel
            </summary>
            <param name="viewModel"></param>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewModelCommandExecutive.FitViewCommand">
            <summary>
            Fit the current workspace view to the current selection
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewModelCommandExecutive.FindByIdCommand(System.String)">
            <summary>
            Search for an element by its ID and focus the view on it
            </summary>
            <param name="objectID"></param>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewModelCommandExecutive.FocusNodeCommand(System.String)">
            <summary>
            Search for a Node by its ID and focus the view on it
            </summary>
            <param name="objectID"></param>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewModelCommandExecutive.ForceRunExpressionCommand(System.Boolean)">
            <summary>
            Force re-execute all nodes in the current workspace
            </summary>
            <param name="showErrors">Should errors be shown?</param>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewModelCommandExecutive.OpenDocumentationLinkCommand(System.Uri)">
            <summary>
            Open a documentation link in the sidebar DocumentationBrowser embedded browser.
            Link should ideally point to a local HTML file, but can also point to a web address.
            </summary>
            <param name="link">The Uri to the resource do display in the DocumentationBrowser.</param>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.IViewExtension">
            <summary>
            An extension to the UI layer of Dynamo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.IViewExtension.UniqueId">
            <summary>
            A unique id for this extension instance.  
            
            There may be multiple instances of the same type, but the application 
            will *not* allow two instances to coexist with the same id.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.IViewExtension.Name">
            <summary>
            A name for the extension instance.  This is used for more user-readable logging.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.IViewExtension.Startup(Dynamo.Wpf.Extensions.ViewStartupParams)">
            <summary>
            Action to be invoked when DynamoView begins to start up.  This is guaranteed to happen
            after the DynamoModel has been created.
            
            This method is *not* guaranteed to be invoked unless the extension is present
            at startup.
            
            Exceptions thrown from this method will be caught by Dynamo and 
            displayed.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.IViewExtension.Loaded(Dynamo.Wpf.Extensions.ViewLoadedParams)">
            <summary>
            Action to be invoked when DynamoView is loaded.
            
            This action is guaranteed to be invoked, even if the extension is not present 
            at startup.
            
            Exceptions thrown from this method will be caught by Dynamo and 
            displayed.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.IViewExtension.Shutdown">
            <summary>
            Action to be invoked when shutdown has begun.  This gives the UI a last minute chance to interact
            with the user.
            
            This action is guaranteed to be invoked before the associated model layer method on IExtension.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.ViewExtensionBase">
            <summary>
            Base class for View Extension.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewExtensionBase.UniqueId">
            <summary>
            A unique id for this extension instance.  
            
            There may be multiple instances of the same type, but the application 
            will *not* allow two instances to coexist with the same id.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewExtensionBase.Name">
            <summary>
            A name for the extension instance.  This is used for more user-readable logging.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewExtensionBase.Dispose">
            <summary>
            Dispose method for the view extension.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewExtensionBase.Loaded(Dynamo.Wpf.Extensions.ViewLoadedParams)">
            <summary>
            Action to be invoked when DynamoView begins to start up.  This is guaranteed to happen
            after the DynamoModel has been created.
            
            This method is *not* guaranteed to be invoked unless the extension is present
            at startup.
            
            Exceptions thrown from this method will be caught by Dynamo and 
            displayed.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewExtensionBase.Shutdown">
            <summary>
            Action to be invoked when shutdown has begun.  This gives the UI a last minute chance to interact
            with the user.
            
            This action is guaranteed to be invoked before the associated model layer method on IExtension.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewExtensionBase.Startup(Dynamo.Wpf.Extensions.ViewStartupParams)">
            <summary>
            Action to be invoked when DynamoView begins to start up.  This is guaranteed to happen
            after the DynamoModel has been created.
            
            This method is *not* guaranteed to be invoked unless the extension is present
            at startup.
            
            Exceptions thrown from this method will be caught by Dynamo and 
            displayed.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewExtensionBase.ReOpen">
            <summary>
            Action to be invoked when Dynamo starts up, to re-open the view extension which was open in the last session, if the preference setting
            to remember the last opened extensions was enabled.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewExtensionBase.Closed">
            <summary>
            Action to be invoked when the view extension is closed. 
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.IViewExtensionLoader">
            <summary>
            Handles loading extensions given an extension definition files path
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.IViewExtensionLoader.ExtensionLoading">
            <summary>
            An event that is raised when an extension starts loading.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.IViewExtensionManager">
            <summary>
            This class handles registration, lookup, and disposal of view layer extensions.  There should only 
            be one of these per application instance.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.IViewExtensionManager.Add(Dynamo.Wpf.Extensions.IViewExtension)">
            <summary>
            Add an extension to the current application session.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.IViewExtensionManager.Remove(Dynamo.Wpf.Extensions.IViewExtension)">
            <summary>
            Remove an extension from the current application session.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.IViewExtensionManager.ViewExtensions">
            <summary>
            The collection of currently registered extensions
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.IViewExtensionManager.ExtensionAdded">
            <summary>
            Event raised when an extension is added
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.IViewExtensionManager.ExtensionRemoved">
            <summary>
            Event raised when an extension is removed
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.MenuBarTypeExtensions">
            <summary>
            A class of extensions for the MenuBarType Enum.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.MenuBarTypeExtensions.ToDisplayString(Dynamo.Wpf.Extensions.MenuBarType)">
            <summary>
            A method to extract the appropriate localized string 
            representing the header name of this menu type
            i.e. file -> "_File"
            </summary>
            <param name="type"></param>
            <returns>A localized string used as the menu header</returns>
            TODO: Remove in Dynamo 3.0
        </member>
        <member name="T:Dynamo.Wpf.Extensions.ObservableCollectionExtension">
            <summary>
            A class of extensions for the ObservableCollection.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ObservableCollectionExtension.TryInsert(System.Collections.ObjectModel.ObservableCollection{Dynamo.Wpf.ViewModels.ISearchEntryViewModel},System.Int32,Dynamo.Wpf.ViewModels.ISearchEntryViewModel)">
            <summary>
            A method to insert an element to collection by index. If index exceeds 
            count of elements element will be pushed to the tail of collection.
            </summary>
            <param name="index">Index to insert element to.</param>
            <param name="entry">Element to insert.</param>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.ViewExtensionLoader.ExtensionLoading">
            <summary>
            An event that is raised when an extension starts loading.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.Extensions.ViewExtensionLoader.DirectoriesToVerifyCertificates">
            <summary>
            A list of root directories which require extensions to have a signed entry point
            File path locations from package definition xml's are validated against this collection 
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.ILayoutSpecSource">
            <summary>
            An object which may request a layout specification to be applied to the current library.
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.ILayoutSpecSource.RequestApplyLayoutSpec">
            <summary>
            Event that is raised when the LayoutSpecSource requests a LayoutSpec to be applied.
            The string parameter here should be the layout spec json to merge into the existing spec.
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.ILayoutSpecSource.RequestLayoutSpec">
            <summary>
            Event that is raised when LayoutSpecSource requests a LayoutSpec
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.IViewExtensionSource">
            <summary>
            An object which may request ViewExtensions to be loaded and added to the ViewExtensionsManager.
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.IViewExtensionSource.RequestLoadExtension">
            <summary>
            Event that is raised when the ViewExtensionSource requests a ViewExtension be loaded.
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.IViewExtensionSource.RequestAddExtension">
            <summary>
            Event that is raised when ViewExtensionSource requests a ViewExtension to be added to 
            list of currently loaded ViewExtensions.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.IViewExtensionSource.RequestedExtensions">
            <summary>
            Collection of ViewExtensions the ViewExtensionSource requested be loaded.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewExtensionManager.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates ViewExtensionManager with directories which require package certificate verification.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewExtensionManager.#ctor(Dynamo.Extensions.IExtensionManager,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates ViewExtensionManager with directories which require package certificate verification and access to the ExtensionManager.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewExtensionManager.StorageAccessViewExtensions">
            <summary>
            Returns the collection of registered extensions implementing IExtensionStorageAccess
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.ViewLoadedParams">
            <summary>
            Application level parameters passed to an extension when the DynamoView is loaded
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.Extensions.ViewLoadedParams.dynamoMenu">
            <summary>
            A reference to the Dynamo main menu control
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewLoadedParams.ViewStartupParams">
            <summary>
            A reference to the <see cref="P:Dynamo.Wpf.Extensions.ViewLoadedParams.ViewStartupParams"/> class.
            Useful if this extension will be loaded from a package, as its startup method will not be called.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewLoadedParams.BackgroundPreviewViewModel">
            <summary>
            A reference to the background preview viewmodel for geometry selection,
            hit testing, mouse and keyboard event handling for events in the background preview 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewLoadedParams.RenderPackageFactory">
            <summary>
            A reference to the factory for creating render packages in the extension
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewLoadedParams.PackageInstaller">
            <summary>
            A reference to package install operations on the package manager
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewLoadedParams.ViewModelCommandExecutive">
            <summary>
            Class used for executing commands on the DynamoViewModel and current WorkspaceViewModel
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewLoadedParams.DynamoWindow">
            <summary>
            A reference to the Dynamo Window object. Useful for correctly setting the parent of a 
            newly created window.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewLoadedParams.AddExtensionMenuItem(System.Windows.Controls.MenuItem)">
            <summary>
            Adds a menu item to the extensions menu
            Items will be ordered alphabetically
            </summary>
            <param name="menuItem">Menu item for the extension to be added</param>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewLoadedParams.AddToExtensionsSideBar(Dynamo.Wpf.Extensions.IViewExtension,System.Windows.Controls.ContentControl)">
            <summary>
            Adds the extension UI control element to a new tab in the extensions side bar.
            </summary>
            <param name="viewExtension">Instance of the view extension object that is being added to the extensions side bar.</param>
            <param name="contentControl">Control UI element with a single piece of content of any type.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewLoadedParams.CloseExtensioninInSideBar(Dynamo.Wpf.Extensions.IViewExtension)">
            <summary>
            Close the tab for extension UI control element in the extensions side bar.
            </summary>
            <param name="viewExtension">Instance of the view extension object that is being added to the extensions side bar.</param>
            <returns></returns>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewLoadedParams.CommandExecutive">
            <summary>
            View Extension specific implementation to execute Recordable commands on DynamoViewModel
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.ViewLoadedParams.SelectionCollectionChanged">
            <summary>
            Event raised when there's a change in selection of nodes in the workspace.
            This event is subscribed to in the extension for any callback necessary for this event
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewLoadedParams.SearchForMenuItem(Dynamo.Wpf.Extensions.MenuBarType)">
            <summary>
            Searches for dynamo parent menu item. Parent item can be:
            file menu, edit menu, view menu and help menu bars.
            </summary>
            <param name="type">File, Edit, View or Help.</param>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.ViewLoadedParams.RequestOpenDocumentationLink">
            <summary>
            Event raised when a component inside Dynamo raises an error with a documentation link or directly requests a documentation link to be opened.
            Extensions should subscribe to this event to be able to handle RequestOpenDocumentationLink events from Dynamo.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Extensions.ViewLoadedParams.OpenViewExtension(System.String)">
            <summary>
            Request to open a view extension in the side panel by name.
            </summary>
            <param name="extensionName"></param>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.ViewLoadedParams.ViewExtensionOpenRequest">
            <summary>
            Event raised when a component inside Dynamo raises a request to open a view extension.
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.Extensions.ViewLoadedParams.ViewExtensionOpenRequestWithParameter">
            <summary>
            Event raised when a component inside Dynamo raises a request to open a view extension
            providing extension name or GUID while being passed a parameter object.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Extensions.MenuBarType">
            <summary>
            An enum that represents the different possible 
            MenuBars which ViewExtensions may add items to.
            </summary>
            TODO: Remove in Dynamo 3.0
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewExtensionDefinition.RequiresSignedEntryPoint">
            <summary>
            Is set to true if the ViewExtensionDefinition is located in a directory that requires certificate verification of its entry point dll.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewExtensionDefinition.IsEnabled">
            <summary>
            Is set to true if the ViewExtension is enabled to load.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Extensions.ViewStartupParams.ExtensionManager">
            <summary>
            A handle to the extensions that are already constructed in the Model layer
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AboutWindowCannotGetVersion">
            <summary>
              Looks up a localized string similar to Could not get version..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AboutWindowDynamoWebsiteButton">
            <summary>
              Looks up a localized string similar to {0} Website.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AboutWindowTitle">
            <summary>
              Looks up a localized string similar to About {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AboutWindowUpToDate">
            <summary>
              Looks up a localized string similar to (Up to date).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ActionMember">
            <summary>
              Looks up a localized string similar to Action.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AddButton">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AddCustomFileToPackageDialogTitle">
            <summary>
              Looks up a localized string similar to Add Custom Node, Library, or XML file to Package....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AddFilePathButtonName">
            <summary>
              Looks up a localized string similar to Add File Path.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AddFileToPackageDialogTitle">
            <summary>
              Looks up a localized string similar to Add File to Package....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AddStyleButton">
            <summary>
              Looks up a localized string similar to Add Style.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AddToLibraryButton">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Autodesk360SignInButtonTitleToolTip">
            <summary>
              Looks up a localized string similar to Autodesk A360.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.AutodeskSignIn">
            <summary>
              Looks up a localized string similar to Autodesk Sign In.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Automatic">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BackgroundPreviewCreationFailureMessage">
            <summary>
              Looks up a localized string similar to There was an error creating a background preview in Dynamo. This could be due to a lack of graphics resources on your machine. See the log for more information..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BackgroundPreviewDefaultName">
            <summary>
              Looks up a localized string similar to Default Background Preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BackgroundPreviewName">
            <summary>
              Looks up a localized string similar to _Background Preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BackupInternalUnit">
            <summary>
              Looks up a localized string similar to Minute(s) between backups.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BreakConnectionsPopupMenuItem">
            <summary>
              Looks up a localized string similar to Break Connections.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BrowserNodeButtonLabel">
            <summary>
              Looks up a localized string similar to Browse....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BrowserNodeNoFileSelected">
            <summary>
              Looks up a localized string similar to No file selected..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BrowserWindowLoading">
            <summary>
              Looks up a localized string similar to Loading....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BubbleDismissAllButtonTooltip">
            <summary>
              Looks up a localized string similar to Temporarily dismiss all warnings of this node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BuildVersionNonNegative">
            <summary>
              Looks up a localized string similar to You must provide a Build version as a non-negative integer..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.BuiltInPackageConflictMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Package has conflicts with one or more Built-In packages..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CameraDataLoadError">
            <summary>
              Looks up a localized string similar to Camera position information could not be loaded from the file..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CameraDataSaveError">
            <summary>
              Looks up a localized string similar to Camera position information could not be saved..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CancelButton">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CannotDownloadPackageMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Cannot Download Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CannotLoadPackageMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Cannot Load Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CannotSubmitPackage">
            <summary>
              Looks up a localized string similar to You can&apos;t submit a package in this version of {0}.  You&apos;ll need a host application, like Revit, to submit a package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CantExportWorkspaceAsImageEmptyMessage">
            <summary>
              Looks up a localized string similar to The workspace cannot be exported as an image because it is empty..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CantExportWorkspaceAsImageNotValidMessage">
            <summary>
              Looks up a localized string similar to The workspace cannot be exported as an image because it contains nodes that are too far away from each other..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptCaptionText">
            <summary>
              Looks up a localized string similar to To ensure accurate geometry rendering and calculation, select the range of geometry sizes that you will be working on:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptDescriptionBox">
            <summary>
              Looks up a localized string similar to Numerical range shown here denote numbers in the following unit:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptDescriptionContent">
            <summary>
              Looks up a localized string similar to Use this working range to model in values that fall between {0} to {1} units.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptDescriptionDefaultSetting">
            <summary>
              Looks up a localized string similar to Default Setting:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptUnitCm">
            <summary>
              Looks up a localized string similar to Centimeters (cm).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptUnitM">
            <summary>
              Looks up a localized string similar to Meters (m).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptUnitMm">
            <summary>
              Looks up a localized string similar to Millimeters (mm).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptUnitsNumberFormatCm">
            <summary>
              Looks up a localized string similar to {0} cm.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptUnitsNumberFormatM">
            <summary>
              Looks up a localized string similar to {0} m.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptUnitsNumberFormatMm">
            <summary>
              Looks up a localized string similar to {0} mm.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ChangeScaleFactorPromptWindowTitle">
            <summary>
              Looks up a localized string similar to Geometry Working Range.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CompactLayoutTitle">
            <summary>
              Looks up a localized string similar to Compact.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConfidenceToolTipDescription">
            <summary>
              Looks up a localized string similar to Represents estimated probability that the given node is the right choice. Recommended nodes are listed in order from highest to lowest confidence level. Confidence level percentages for all recommended nodes add up to about 100%..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConfidenceToolTipoLearnMore">
            <summary>
              Looks up a localized string similar to Learn more.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConfidenceToolTipTitle">
            <summary>
              Looks up a localized string similar to Confidence rating.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConfigureADPButtonText">
            <summary>
              Looks up a localized string similar to Configure Autodesk Analytics Program.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConnectorContextMenuHeaderBreakConnection">
            <summary>
              Looks up a localized string similar to Break Connection.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConnectorContextMenuHeaderEndNode">
            <summary>
              Looks up a localized string similar to Navigate Downstream.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConnectorContextMenuHeaderHideConnector">
            <summary>
              Looks up a localized string similar to Hide Wire.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConnectorContextMenuHeaderPinConnector">
            <summary>
              Looks up a localized string similar to Pin Wire.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConnectorContextMenuHeaderSelectConnected">
            <summary>
              Looks up a localized string similar to Select Connected.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConnectorContextMenuHeaderShowConnector">
            <summary>
              Looks up a localized string similar to Show Wire.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConnectorContextMenuHeaderStartNode">
            <summary>
              Looks up a localized string similar to Navigate Upstream.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConnectorContextMenuHeaderUnpinConnector">
            <summary>
              Looks up a localized string similar to Unpin Wire.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConsentFormADPAnalyticsCheckBoxContent">
            <summary>
              Looks up a localized string similar to I agree to data collection in desktop products for Autodesk analytics programs..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextAddGroupFromSelection">
            <summary>
              Looks up a localized string similar to Add Node To Group.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextCreateGroupFromSelection">
            <summary>
              Looks up a localized string similar to Create Group.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenu">
            <summary>
              Looks up a localized string similar to Node Options.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuConnectionsHideAll">
            <summary>
              Looks up a localized string similar to Hide All Wires.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuConnectionsShowAll">
            <summary>
              Looks up a localized string similar to Show All Wires.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuCopy">
            <summary>
              Looks up a localized string similar to Copy Contents.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuDelete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuEditCustomNode">
            <summary>
              Looks up a localized string similar to Edit Custom Node....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuEditCustomNodeProperty">
            <summary>
              Looks up a localized string similar to Edit Custom Node Properties....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuFitToScreen">
            <summary>
              Looks up a localized string similar to _Fit to Screen.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuGeometryView">
            <summary>
              Looks up a localized string similar to Switch to Geometry _View.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuGroups">
            <summary>
              Looks up a localized string similar to Groups.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuHideAllTextBubble">
            <summary>
              Looks up a localized string similar to Hide all text bubble.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuHideGeometry">
            <summary>
              Looks up a localized string similar to Hide geometry preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuInsertCodeBlock">
            <summary>
              Looks up a localized string similar to Insert code block.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuLacing">
            <summary>
              Looks up a localized string similar to Lacing.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuLacingAuto">
            <summary>
              Looks up a localized string similar to Auto.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuLacingCrossProduct">
            <summary>
              Looks up a localized string similar to Cross Product.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuLacingFirst">
            <summary>
              Looks up a localized string similar to First.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuLacingLongest">
            <summary>
              Looks up a localized string similar to Longest.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuLacingShortest">
            <summary>
              Looks up a localized string similar to Shortest.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuNodeConnections">
            <summary>
              Looks up a localized string similar to Node Connections.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuNodesFromGeometry">
            <summary>
              Looks up a localized string similar to Nodes From _Selected Geometry.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuNodesFromSelection">
            <summary>
              Looks up a localized string similar to Create Custom Node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuNodeToCode">
            <summary>
              Looks up a localized string similar to Node to _Code.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuPan">
            <summary>
              Looks up a localized string similar to Pa_n.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuPaste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuPublishCustomNode">
            <summary>
              Looks up a localized string similar to Publish This Custom Node....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuShowAllTextBubble">
            <summary>
              Looks up a localized string similar to Show all text buble.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextMenuShowGeometry">
            <summary>
              Looks up a localized string similar to Show geometry preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextPinToNode">
            <summary>
              Looks up a localized string similar to Pin to node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextPinToNodeTooltip">
            <summary>
              Looks up a localized string similar to Select a node to pin to this note..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextSelectConnectedDownstream">
            <summary>
              Looks up a localized string similar to Downstream.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextSelectConnectedHeader">
            <summary>
              Looks up a localized string similar to Select Connected.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextSelectConnectedUpstream">
            <summary>
              Looks up a localized string similar to Upstream.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextSelectConnectedUpstreamDownstream">
            <summary>
              Looks up a localized string similar to Both.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextUnGroupFromSelection">
            <summary>
              Looks up a localized string similar to Remove from Group.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContextUnpinFromNode">
            <summary>
              Looks up a localized string similar to Unpin from node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContinueButton">
            <summary>
              Looks up a localized string similar to Continue.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ContinueInstall">
            <summary>
              Looks up a localized string similar to Continue install.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConverterMessageCurrentOffset">
            <summary>
              Looks up a localized string similar to Current offset X: {0}, Y: {1}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConverterMessageTransformOrigin">
            <summary>
              Looks up a localized string similar to Transform origin X: {0}, Y: {1}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ConverterMessageZoom">
            <summary>
              Looks up a localized string similar to Zoom : {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CrashPromptDialogCopyButton">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CrashPromptDialogCrashMessage">
             <summary>
               Looks up a localized string similar to Something went wrong and Dynamo has closed unexpectedly.
            
            Don&apos;t worry, you&apos;ll have the option to save your work..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CrashPromptDialogDetailButton">
            <summary>
              Looks up a localized string similar to Details.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CrashPromptDialogOpenFolderButton">
            <summary>
              Looks up a localized string similar to Open Folder.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CrashPromptDialogSubmitBugButton">
            <summary>
              Looks up a localized string similar to Submit bug to GitHub.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CrashPromptDialogTitle">
            <summary>
              Looks up a localized string similar to {0} has closed unexpectedly.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CrashPromptGithubNewIssueTitle">
            <summary>
              Looks up a localized string similar to Crash report from Dynamo {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CreateMember">
            <summary>
              Looks up a localized string similar to Create.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomColorPickerApplyBtn">
            <summary>
              Looks up a localized string similar to Apply.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomColorPickerBasicColors">
            <summary>
              Looks up a localized string similar to Basic colors:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomColorPickerCancelBtn">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomColorPickerCustomColorBtn">
            <summary>
              Looks up a localized string similar to Define Custom Colors.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomColorPickerCustomColors">
            <summary>
              Looks up a localized string similar to Custom colors:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomColorPickerTitle">
            <summary>
              Looks up a localized string similar to Color.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomColorsPopupTitle">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePromptDescriptionTooltip">
            <summary>
              Looks up a localized string similar to A description that helps people understand what the node might be used for..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePromptNameTooltip">
            <summary>
              Looks up a localized string similar to A unique name for the node..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePropertyErrorMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Custom Node Property Error.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePropertyWindowCategory">
            <summary>
              Looks up a localized string similar to Add-Ons Category.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePropertyWindowDescription">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePropertyWindowDescriptionHint">
            <summary>
              Looks up a localized string similar to Description of Custom Node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePropertyWindowLocationNote">
            <summary>
              Looks up a localized string similar to Custom Nodes will be placed in the Add-Ons section of the library..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePropertyWindowName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePropertyWindowNameHint">
            <summary>
              Looks up a localized string similar to Name of Custom Node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodePropertyWindowTitle">
            <summary>
              Looks up a localized string similar to Custom Node Properties.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.CustomNodeTypeShortString">
            <summary>
              Looks up a localized string similar to DS.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DefaultPythonEngineNone">
            <summary>
              Looks up a localized string similar to Use System Default.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DeleteFailureMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Delete Failure.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DeprecatingPackageMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Deprecating Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DescriptionNeedMoreCharacters">
            <summary>
              Looks up a localized string similar to Description must be longer than 10 characters..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DetailedLayoutTitle">
            <summary>
              Looks up a localized string similar to Detailed.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DirectoryNotFound">
            <summary>
              Looks up a localized string similar to Directory Not Found.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DisableBuiltInPackageToggleInfo">
             <summary>
               Looks up a localized string similar to If the toggle is on, built-in packages will not load on restart. Built-in packages that are currently loaded will be unloaded on restart. 
            If the toggle is off built-in packages that are not already loaded will load once the preferences dialog is closed..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DisableCustomPackageToggleInfo">
             <summary>
               Looks up a localized string similar to If the toggle is on, custom packages will not load on restart. Custom packages that are currently loaded will be unloaded on restart. 
            If the toggle is off custom packages that are not already loaded will load once the preferences dialog is closed..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DisablePackageInstallIconTooltip">
            <summary>
              Looks up a localized string similar to All custom package paths have been disabled in Preferences. Packages cannot be installed unless they are re-enabled..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DownloadWarningMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Download Warning.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoShowFileTrustWarning">
            <summary>
              Looks up a localized string similar to Show File Trust Warning.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoUpdateAvailableToolTip">
            <summary>
              Looks up a localized string similar to A Dynamo update is available. Click to install..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewCancelButtonTooltip">
            <summary>
              Looks up a localized string similar to Cancel Run (Shift+F5).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewContextMenuClearLog">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenu">
            <summary>
              Looks up a localized string similar to De_bug.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenuCheckDailyBuild">
            <summary>
              Looks up a localized string similar to _Check Daily Builds.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenuDebugModes">
            <summary>
              Looks up a localized string similar to Debug _Modes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenuDumpLibrary">
            <summary>
              Looks up a localized string similar to _Dump Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenuForceReExecute">
            <summary>
              Looks up a localized string similar to _Force Re-execute.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenuForceUpdate">
            <summary>
              Looks up a localized string similar to Force _Update.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenuRunMutationTest">
            <summary>
              Looks up a localized string similar to _Run mutation test.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenuShowDebugAST">
            <summary>
              Looks up a localized string similar to _Show Debug ASTs.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDebugMenuVerboseLogging">
            <summary>
              Looks up a localized string similar to _Verbose Logging.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDynamoMenu">
            <summary>
              Looks up a localized string similar to _Dynamo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDynamoMenuAbout">
            <summary>
              Looks up a localized string similar to _About.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDynamoMenuExit">
            <summary>
              Looks up a localized string similar to _Exit Dynamo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewDynamoMenuPreferences">
            <summary>
              Looks up a localized string similar to _Preferences....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenu">
            <summary>
              Looks up a localized string similar to _Edit.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlighBottom">
            <summary>
              Looks up a localized string similar to _Bottom.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlignLeft">
            <summary>
              Looks up a localized string similar to _Left.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlignRight">
            <summary>
              Looks up a localized string similar to _Right.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlignSelection">
            <summary>
              Looks up a localized string similar to _Align Selection.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlignTop">
            <summary>
              Looks up a localized string similar to _Top.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlignXAverage">
            <summary>
              Looks up a localized string similar to _X Average.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlignXDistribute">
            <summary>
              Looks up a localized string similar to X _Distribute.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlignYAverage">
            <summary>
              Looks up a localized string similar to _Y Average.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuAlignYDistribute">
            <summary>
              Looks up a localized string similar to Y Di_stribute.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuCleanupLayout">
            <summary>
              Looks up a localized string similar to Cleanup Node _Layout.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuCopy">
            <summary>
              Looks up a localized string similar to _Copy.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuCreateCustomNode">
            <summary>
              Looks up a localized string similar to Crea_te Custom Node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuCreateGroup">
            <summary>
              Looks up a localized string similar to Create _Group.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuCreateNote">
            <summary>
              Looks up a localized string similar to Create _Note.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuCreatePreset">
            <summary>
              Looks up a localized string similar to Create Preset From Selection.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuDeletePreset">
            <summary>
              Looks up a localized string similar to Delete Preset.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuDeleteSelected">
            <summary>
              Looks up a localized string similar to _Delete Selected.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuPaste">
            <summary>
              Looks up a localized string similar to _Paste.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuPresetsMenu">
            <summary>
              Looks up a localized string similar to Presets.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuRedo">
            <summary>
              Looks up a localized string similar to _Redo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuRestorePreset">
            <summary>
              Looks up a localized string similar to Restore Preset.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuSelectAll">
            <summary>
              Looks up a localized string similar to _Select All.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuSelectNeighbours">
            <summary>
              Looks up a localized string similar to _Select Neighbors.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewEditMenuUndo">
            <summary>
              Looks up a localized string similar to _Undo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewExtensionsMenu">
            <summary>
              Looks up a localized string similar to E_xtensions.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenu">
            <summary>
              Looks up a localized string similar to _File.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuExport">
            <summary>
              Looks up a localized string similar to _Export.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuExport3DAsImage">
            <summary>
              Looks up a localized string similar to Export _Background 3D Preview as Image....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuExportAsImage">
            <summary>
              Looks up a localized string similar to Export _Workspace As Image....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuExportToSTL">
            <summary>
              Looks up a localized string similar to Export _Model to STL....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuImport">
            <summary>
              Looks up a localized string similar to _Import Library....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuInsert">
            <summary>
              Looks up a localized string similar to Insert....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuNew">
            <summary>
              Looks up a localized string similar to _New.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuNewCustomNode">
            <summary>
              Looks up a localized string similar to _Custom Node....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuNewHomeWorkSpace">
            <summary>
              Looks up a localized string similar to _Home Workspace.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuOpen">
            <summary>
              Looks up a localized string similar to _Open....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuRecentFiles">
            <summary>
              Looks up a localized string similar to Open _Recent Files.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuSave">
            <summary>
              Looks up a localized string similar to _Save.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewFileMenuSaveAs">
            <summary>
              Looks up a localized string similar to Save _As....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewHelpDictionary">
            <summary>
              Looks up a localized string similar to Dynamo Di_ctionary.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewHelpMenu">
            <summary>
              Looks up a localized string similar to _Help.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewHelpMenuDisplayStartPage">
            <summary>
              Looks up a localized string similar to _Display Start Page.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewHelpMenuGotoWebsite">
            <summary>
              Looks up a localized string similar to Dynamo _Website.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewHelpMenuGotoWiki">
            <summary>
              Looks up a localized string similar to Dynamo _Project Wiki.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewHelpMenuReportBug">
            <summary>
              Looks up a localized string similar to _Report A Bug.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewHelpMenuShowInFolder">
            <summary>
              Looks up a localized string similar to Show In Folder.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewHepMenuSamples">
            <summary>
              Looks up a localized string similar to _Samples.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewPackageMenu">
            <summary>
              Looks up a localized string similar to _Packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewPackageMenuManagePackage">
            <summary>
              Looks up a localized string similar to _Manage Packages....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewPackageMenuPublishNodes">
            <summary>
              Looks up a localized string similar to Publish _Selected Nodes....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewPackageMenuPublishPackage">
            <summary>
              Looks up a localized string similar to Publish _New Package....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewPackageMenuPublishWorkspace">
            <summary>
              Looks up a localized string similar to Publish _Current Workspace....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewPackageMenuSearchPackage">
            <summary>
              Looks up a localized string similar to _Search for a Package....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunAutomaticallyOption">
            <summary>
              Looks up a localized string similar to Run Automatically.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunButton">
            <summary>
              Looks up a localized string similar to Run.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunButtonTooltip">
            <summary>
              Looks up a localized string similar to Run Workflow (F5).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunButtonToolTipDisabled">
            <summary>
              Looks up a localized string similar to Run is not available when running Automatically or Periodically..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunButtonToolTipDisabledFileTrust">
            <summary>
              Looks up a localized string similar to Graph execution is suspended until warning is resolved.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunTypesAutomaticToolTip">
            <summary>
              Looks up a localized string similar to Graph changes are executed in real time. Best suited for smaller graphs, known graphs, and Dynamo Sandbox..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunTypesComboBoxToolTipDisabled">
            <summary>
              Looks up a localized string similar to Run mode can not be changed until warning is resolved.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunTypesComboBoxToolTipEnabled">
            <summary>
              Looks up a localized string similar to Run mode\n\nControls when graph changes are executed..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunTypesManualToolTip">
            <summary>
              Looks up a localized string similar to Graph changes are executed when you click Run. Use this mode when working in large graphs, unfamiliar graphs, or host applications..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewRunTypesPeriodicToolTip">
            <summary>
              Looks up a localized string similar to Graph changes are executed at a specified interval. Only available when the graph contains specific nodes, such as DateTime.Now or WebRequest..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSamplesMenuShowInFolder">
            <summary>
              Looks up a localized string similar to Show In Folder.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingLibraryZoomScale">
            <summary>
              Looks up a localized string similar to Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenu">
            <summary>
              Looks up a localized string similar to _Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuAreaUnits">
            <summary>
              Looks up a localized string similar to Area Display Units.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuCentimeter">
            <summary>
              Looks up a localized string similar to Centimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuCubicCentimeter">
            <summary>
              Looks up a localized string similar to Cubic Centimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuCubicFoot">
            <summary>
              Looks up a localized string similar to Cubic Foot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuCubicInch">
            <summary>
              Looks up a localized string similar to Cubic Inch.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuCubicMeter">
            <summary>
              Looks up a localized string similar to Cubic Meter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuCubicMillimeter">
            <summary>
              Looks up a localized string similar to Cubic Millimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuDecimalFoot">
            <summary>
              Looks up a localized string similar to Decimal Foot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuDecimalInch">
            <summary>
              Looks up a localized string similar to Decimal Inch.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuFractionalFoot">
            <summary>
              Looks up a localized string similar to Fractional Foot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuFractionalInch">
            <summary>
              Looks up a localized string similar to Fractional Inch.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuHighRenderPrecision">
            <summary>
              Looks up a localized string similar to High.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuLengthUnits">
            <summary>
              Looks up a localized string similar to Length Display Units.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuLowRenderPrecision">
            <summary>
              Looks up a localized string similar to Low.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuManagePackagePath">
            <summary>
              Looks up a localized string similar to Manage Node and Package Paths....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuMeter">
            <summary>
              Looks up a localized string similar to Meter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuMillimeter">
            <summary>
              Looks up a localized string similar to Millimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuNumber0">
            <summary>
              Looks up a localized string similar to 0.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuNumber00">
            <summary>
              Looks up a localized string similar to 0.0.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuNumber000">
            <summary>
              Looks up a localized string similar to 0.00.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuNumber0000">
            <summary>
              Looks up a localized string similar to 0.000.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuNumber00000">
            <summary>
              Looks up a localized string similar to 0.0000.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuNumberFormat">
            <summary>
              Looks up a localized string similar to Number Format.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuShowDataReportingDialog">
            <summary>
              Looks up a localized string similar to Agreement to _Collect Usability Data.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuShowDataReportingDialogTooltip">
            <summary>
              Looks up a localized string similar to Display the dialog for user to pick agreement on data collecting..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuSquareCentimeter">
            <summary>
              Looks up a localized string similar to Square Centimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuSquareFoot">
            <summary>
              Looks up a localized string similar to Square Foot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuSquareInch">
            <summary>
              Looks up a localized string similar to Square Inch.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuSquareMeter">
            <summary>
              Looks up a localized string similar to Square Meter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuSquareMillimeter">
            <summary>
              Looks up a localized string similar to Square Millimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingMenuVolumeUnits">
            <summary>
              Looks up a localized string similar to Volume Display Units.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingShowRunPreview">
            <summary>
              Looks up a localized string similar to Show Run Preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingShowStaticSplashScreen">
            <summary>
              Looks up a localized string similar to Pause Splash Screen.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingsMenuChangeScaleFactor">
            <summary>
              Looks up a localized string similar to Geometry Scaling....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewSettingsMenuVisualizationSettings">
            <summary>
              Looks up a localized string similar to Visualization Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewToolbarExport3DButtonTooltip">
            <summary>
              Looks up a localized string similar to Export Background Preview As Image.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewToolbarExportButtonTooltip">
            <summary>
              Looks up a localized string similar to Export Workspace As Image.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewToolbarNewButtonTooltip">
            <summary>
              Looks up a localized string similar to New [Ctrl + N].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewToolbarOpenButtonTooltip">
            <summary>
              Looks up a localized string similar to Open [Ctrl + O].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewToolbarRedoButtonTooltip">
            <summary>
              Looks up a localized string similar to Redo [Ctrl + Y].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewToolbarSaveButtonTooltip">
            <summary>
              Looks up a localized string similar to Save [Ctrl + S].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewToolbarUndoButtonTooltip">
            <summary>
              Looks up a localized string similar to Undo [Ctrl + Z].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenu">
            <summary>
              Looks up a localized string similar to _View.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenu3DPreview">
            <summary>
              Looks up a localized string similar to _Background 3D Preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuAlternateContextGeometry">
            <summary>
              Looks up a localized string similar to Show Geometry in {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuAvailablePreviews">
            <summary>
              Looks up a localized string similar to _Available Previews.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuConnector">
            <summary>
              Looks up a localized string similar to _Connectors.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuConnectorShowTooltip">
            <summary>
              Looks up a localized string similar to Show _Tooltip.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuConnectorType">
            <summary>
              Looks up a localized string similar to _Connector Type.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuConnectorTypeCurve">
            <summary>
              Looks up a localized string similar to Curves.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuConnectorTypePolylines">
            <summary>
              Looks up a localized string similar to Polylines.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuHideConsole">
            <summary>
              Looks up a localized string similar to Hide Console.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuPan">
            <summary>
              Looks up a localized string similar to _Pan.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuPanDown">
            <summary>
              Looks up a localized string similar to Pan Down (Mouse wheel drag down).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuPanLeft">
            <summary>
              Looks up a localized string similar to Pan Left (Mouse wheel drag left).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuPanRight">
            <summary>
              Looks up a localized string similar to Pan Right (Mouse wheel drag right).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuPanUp">
            <summary>
              Looks up a localized string similar to Pan Up (Mouse wheel drag up).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuPreviewNavigate">
            <summary>
              Looks up a localized string similar to _Navigate Background 3D Preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuShowBackground3DPreview">
            <summary>
              Looks up a localized string similar to Showing Background 3D Preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuShowConnectors">
            <summary>
              Looks up a localized string similar to Show _Connectors.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuShowConsole">
            <summary>
              Looks up a localized string similar to _Show Console.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuShowGrid">
            <summary>
              Looks up a localized string similar to _Show Grid.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuZoom">
            <summary>
              Looks up a localized string similar to _Zoom.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuZoomIn">
            <summary>
              Looks up a localized string similar to Zoom In (Mouse wheel down).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.DynamoViewViewMenuZoomOut">
            <summary>
              Looks up a localized string similar to Zoom Out (Mouse wheel up).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.EditAnnotationTitle">
            <summary>
              Looks up a localized string similar to Edit Group Title.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.EditNodeWindowTitle">
            <summary>
              Looks up a localized string similar to Edit Node Name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.EditNoteWindowTitle">
            <summary>
              Looks up a localized string similar to Write note here.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.EditWindowAcceptButton">
            <summary>
              Looks up a localized string similar to Accept.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.EditWindowTitle">
            <summary>
              Looks up a localized string similar to Set value....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ErrorLoadingIcon">
            <summary>
              Looks up a localized string similar to An error occurred when loading the application icon: {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ExitTourWindowContent">
            <summary>
              Looks up a localized string similar to You can return to this guide later from the Help menu..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ExportPreferencesText">
            <summary>
              Looks up a localized string similar to Export.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ExportSettingsDialogTitle">
            <summary>
              Looks up a localized string similar to Select Folder to Export.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ExportSettingsFailedMessage">
            <summary>
              Looks up a localized string similar to Export Failed.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ExtensionAdded">
            <summary>
              Looks up a localized string similar to Extension tab added to the extensions side bar..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ExtensionAlreadyPresent">
            <summary>
              Looks up a localized string similar to No new tab is added, as the extension is already present in the extensions side bar..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogAllFiles">
            <summary>
              Looks up a localized string similar to All Files ({0})|{0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogAssemblyFiles">
            <summary>
              Looks up a localized string similar to Assembly Library Files ({0})|{0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogCustomNodeDLLXML">
            <summary>
              Looks up a localized string similar to Custom Node, DLL, XML ({0})|{0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogDefaultPNGName">
            <summary>
              Looks up a localized string similar to Capture.png.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogDefaultSTLModelName">
            <summary>
              Looks up a localized string similar to model.stl.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogDesignScriptFiles">
            <summary>
              Looks up a localized string similar to DesignScript Files ({0})|{0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogDynamoCustomNode">
            <summary>
              Looks up a localized string similar to {0} Custom Node ({1})|{1}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogDynamoDefinitions">
            <summary>
              Looks up a localized string similar to {0} Definitions ({1})|{1}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogDynamoWorkspace">
            <summary>
              Looks up a localized string similar to {0} Workspace ({1})|{1}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogImportSettingsFiles">
            <summary>
              Looks up a localized string similar to Settings Files ({0})|{0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogLibraryFiles">
            <summary>
              Looks up a localized string similar to Library Files ({0})|{0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogManualMode">
            <summary>
              Looks up a localized string similar to Open in Manual Execution Mode.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogPNGFiles">
            <summary>
              Looks up a localized string similar to PNG Image|{0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileDialogSTLModels">
            <summary>
              Looks up a localized string similar to STL Models|{0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileNotPublishCaption">
            <summary>
              Looks up a localized string similar to Publish Fail!.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileNotPublishMessage">
             <summary>
               Looks up a localized string similar to File(s) were not found or are contained inside of a package. Please only add files that are located outside of packages.
            
            Failed to publish file(s): 
            {0}.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FilePathConverterNoFileSelected">
            <summary>
              Looks up a localized string similar to No file selected..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningCheckBoxText">
            <summary>
              Looks up a localized string similar to Trust this file’s location in the future..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningDocumentationUriString">
            <summary>
              Looks up a localized string similar to DynamoCoreWpf;FileTrustWarningDocumentation.html.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningPopupNoCloseFile">
            <summary>
              Looks up a localized string similar to No, close file.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningPopupSettings">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningPopupText">
            <summary>
              Looks up a localized string similar to This file is stored in an untrusted location. Do you want to open this file?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningPopupTitle">
            <summary>
              Looks up a localized string similar to Open external file?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningPopupTooltip1">
            <summary>
              Looks up a localized string similar to External content may bring risks to your system security..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningPopupTooltip2">
             <summary>
               Looks up a localized string similar to The file&apos;s current location will be added to trusted locations.
            You can manage this in Preferences -&gt; Security..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FileTrustWarningPopupYes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FilterIconTooltip">
            <summary>
              Looks up a localized string similar to Filter results.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FolderNotWritableError">
            <summary>
              Looks up a localized string similar to You do not have write permission to {0}..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FooterNotificationErrorImage">
            <summary>
              Looks up a localized string similar to /DynamoCoreWpf;component/UI/Images/error.png.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FooterNotificationErrorTooltip">
            <summary>
              Looks up a localized string similar to Click to cycle through nodes with errors..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FooterNotificationInfoImage">
            <summary>
              Looks up a localized string similar to /DynamoCoreWpf;component/UI/Images/info.png.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FooterNotificationInfoTooltip">
            <summary>
              Looks up a localized string similar to Click to cycle through nodes with info states..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FooterNotificationWarningImage">
            <summary>
              Looks up a localized string similar to /DynamoCoreWpf;component/UI/Images/warning_16px.png.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.FooterNotificationWarningTooltip">
            <summary>
              Looks up a localized string similar to Click to cycle through nodes with warnings..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GenericTaskDialogOptionCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GenericTaskDialogOptionNo">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GenericTaskDialogOptionOK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GenericTaskDialogOptionYes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GenericTaskDialogSampleLeftButton">
            <summary>
              Looks up a localized string similar to Sample Left Button.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GenericTaskDialogSampleRightButton">
            <summary>
              Looks up a localized string similar to Sample Right Button.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GenericTaskDialogTitle">
            <summary>
              Looks up a localized string similar to Generic Task Dialog.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuide">
            <summary>
              Looks up a localized string similar to _User Interface Tour.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideLibraryText">
            <summary>
              Looks up a localized string similar to The library contains all default functions #(nodes)=https://primer2.dynamobim.org/4_nodes_and_wires of Dynamo, as well as custom nodes you may have loaded. \n\nTo find a node, search the library or browse its categories..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideLibraryTitle">
            <summary>
              Looks up a localized string similar to Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuidePreferencesText">
            <summary>
              Looks up a localized string similar to Use Preferences to customize your Dynamo experience. \n\nYou can change language and time zone settings, adjust the visual style of your workspace, and more..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuidePreferencesTitle">
            <summary>
              Looks up a localized string similar to Preferences.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideRatingTextTitle">
            <summary>
              Looks up a localized string similar to Rate this guide.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideResourcesText">
            <summary>
              Looks up a localized string similar to Use the Help menu to access tools and resources to help you get started. \n\nYou can explore sample scripts, browse the Dynamo Dictionary, find other guides, and more..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideResourcesTitle">
            <summary>
              Looks up a localized string similar to Resources.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideRunStatusBarText">
            <summary>
              Looks up a localized string similar to Use the Run Status Bar to run a Dynamo graph (a script that contains the logic or algorithm). \n\nYou can select your preferred run type: -Automatic: The graph runs each time you make a change.- -Manual: The graph runs only when you click Run-.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideRunStatusBarTitle">
            <summary>
              Looks up a localized string similar to Run Status Bar.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideSurveyText">
            <summary>
              Looks up a localized string similar to Learn more about Dynamo in the #online help=https://primer2.dynamobim.org/.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideSurveyTitle">
            <summary>
              Looks up a localized string similar to Finished.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideToolbarText">
            <summary>
              Looks up a localized string similar to From the toolbar, you can: -Open a new workspace- -Open a saved Dynamo file- -Save your current Dynamo file- -Undo or redo changes-.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideToolbarTitle">
            <summary>
              Looks up a localized string similar to Toolbar.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideWelcomeText">
            <summary>
              Looks up a localized string similar to Start your visual programming journey with this short guide. \n\nHere you&apos;ll learn some basics about the Dynamo interface and features..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedGuideWelcomeTitle">
            <summary>
              Looks up a localized string similar to Welcome To Dynamo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GetStartedLinkText">
            <summary>
              Looks up a localized string similar to Get Started.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GraphIssuesOnSave_CancelBtn">
            <summary>
              Looks up a localized string similar to Cancel and Show Issues.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GraphIssuesOnSave_Description">
            <summary>
              Looks up a localized string similar to There are unresolved issues with the graph type. If this graph is designed to be used outside of Dynamo, resolve all issues and save the graph again..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GraphIssuesOnSave_ProceedBtn">
            <summary>
              Looks up a localized string similar to Save with Issues.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GraphIssuesOnSave_Summary">
            <summary>
              Looks up a localized string similar to You are trying to save a graph with unresolved issues.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GraphIssuesOnSave_Title">
            <summary>
              Looks up a localized string similar to Graph Type Issues found.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GraphIssuesOnSavePath_Description">
            <summary>
              Looks up a localized string similar to The selected save location path is too long. Please change the save location and try again..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GraphIssuesOnSavePath_Summary">
            <summary>
              Looks up a localized string similar to You are trying to save a graph with a path that is too long..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GraphIssuesOnSavePath_Title">
            <summary>
              Looks up a localized string similar to Save Path Issues Found.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupContextMenuAddGroupToGroup">
            <summary>
              Looks up a localized string similar to Add Group to This Group.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupContextMenuBackground">
            <summary>
              Looks up a localized string similar to Select Background.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupContextMenuColor">
            <summary>
              Looks up a localized string similar to Color.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupContextMenuDeleteGroup">
            <summary>
              Looks up a localized string similar to Delete Group.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupContextMenuFont">
            <summary>
              Looks up a localized string similar to Font Size.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupContextMenuGraphLayout">
            <summary>
              Looks up a localized string similar to Cleanup Node Layout.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupContextMenuPreview">
            <summary>
              Looks up a localized string similar to Preview Geometry.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupContextMenuUngroup">
            <summary>
              Looks up a localized string similar to Ungr_oup.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupDefaultText">
            <summary>
              Looks up a localized string similar to Description &lt;Double click here to edit group description&gt;.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupNameDefaultText">
            <summary>
              Looks up a localized string similar to Title &lt;Double click here to edit group title&gt;.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupStyleContextAnnotation">
            <summary>
              Looks up a localized string similar to Group Style.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupStyleFontSizeToolTip">
            <summary>
              Looks up a localized string similar to Font size.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupStylesCancelButtonText">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.GroupStylesSaveButtonText">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.HideClassicNodeLibrary">
            <summary>
              Looks up a localized string similar to Hide Classic Node Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.HideNodesBelowSpecificConfidenceLevel">
            <summary>
              Looks up a localized string similar to Hide nodes below a specified confidence level.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.HideNodesBelowSpecificConfidenceLevelInfo">
            <summary>
              Looks up a localized string similar to Confidence level appears next to each recommended node and represents estimated probability that the node is a good choice. When toggled on, this setting hides recommended nodes that don’t meet the specified confidence level. You can click the Low Confidence header to show the nodes..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.HideWiresPopupMenuItem">
            <summary>
              Looks up a localized string similar to Hide Wires.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ImportLibraryDialogTitle">
            <summary>
              Looks up a localized string similar to Import Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ImportPreferencesInfo">
            <summary>
              Looks up a localized string similar to You can import custom settings here, which will overwrite your current settings. If you&apos;d like to preserve a copy of your current settings, export them before importing new settings. Settings not shown in the Preferences panel will be applied once Dynamo and any host program restarts..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ImportPreferencesText">
            <summary>
              Looks up a localized string similar to Import.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ImportSettingsDialogTitle">
            <summary>
              Looks up a localized string similar to Import Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ImportSettingsFailedMessage">
            <summary>
              Looks up a localized string similar to Import Failed.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ImportSettingsSuccessMessage">
            <summary>
              Looks up a localized string similar to Import Success.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InCanvasFitViewButtonToolTip">
            <summary>
              Looks up a localized string similar to Zoom to Fit.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InCanvasGeomButtonToolTip">
            <summary>
              Looks up a localized string similar to Enable background 3D preview navigation (Ctrl + B).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InCanvasGeometryScalingToolTip">
            <summary>
              Looks up a localized string similar to Workspace Geometry Scaling.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InCanvasNodeButtonToolTip">
            <summary>
              Looks up a localized string similar to Enable graph view navigation (Ctrl + B).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InCanvasOrbitButtonToolTip">
            <summary>
              Looks up a localized string similar to Orbit.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InCanvasPanButtonToolTip">
            <summary>
              Looks up a localized string similar to Pan.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InCanvasZoomInButtonToolTip">
            <summary>
              Looks up a localized string similar to Zoom In.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InCanvasZoomOutButtonToolTip">
            <summary>
              Looks up a localized string similar to Zoom Out.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InfectedPackageErrorString">
            <summary>
              Looks up a localized string similar to Upload Error.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InfectedPackageMessageString">
            <summary>
              Looks up a localized string similar to This is an infected package. Please upload a clean version..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InfoBubbleDocumentationLinkText">
            <summary>
              Looks up a localized string similar to Read more....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InfoBubbleError">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InfoBubbleInfo">
            <summary>
              Looks up a localized string similar to Info.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InfoBubbleWarning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewAdditionalFileLabel">
            <summary>
              Looks up a localized string similar to Additional Files.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewAdditionalLabel">
            <summary>
              Looks up a localized string similar to Additional Libraries.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuDeprecate">
            <summary>
              Looks up a localized string similar to Deprecate.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuDeprecateTooltip">
            <summary>
              Looks up a localized string similar to Set this package as deprecated.  Only allowed if you&apos;re a current maintainer of the package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuGetLatest">
            <summary>
              Looks up a localized string similar to Get Latest Version.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuGetLatestTooltip">
            <summary>
              Looks up a localized string similar to Check if there is a newer version of this package and download it..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuPublish">
            <summary>
              Looks up a localized string similar to Publish....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuPublishTooltip">
            <summary>
              Looks up a localized string similar to Publish this package, if it has yet to be published..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuPublishVersion">
            <summary>
              Looks up a localized string similar to Publish Version....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuPublishVersionTooltip">
            <summary>
              Looks up a localized string similar to Publish a new version of this package, assuming it has already been published. Only allowed if you&apos;re a current maintainer of the package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuRemoveDeprecation">
            <summary>
              Looks up a localized string similar to Remove deprecation.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuRemoveDeprecationTooltip">
            <summary>
              Looks up a localized string similar to Remove package deprecation. Only allowed if you&apos;re a current maintainer of the package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuShowRootDir">
            <summary>
              Looks up a localized string similar to Show Root Directory.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewContextMenuShowRootDirTooltip">
            <summary>
              Looks up a localized string similar to Go to the root folder of this package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewCustomNodesLabel">
            <summary>
              Looks up a localized string similar to Custom Nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewNodeLibrariesLabel">
            <summary>
              Looks up a localized string similar to Node Libraries.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewPendingInstallButton">
            <summary>
              Looks up a localized string similar to Pending uninstall.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstalledPackageViewTitle">
            <summary>
              Looks up a localized string similar to Installed Packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InstallMessageCaption">
            <summary>
              Looks up a localized string similar to Install Dynamo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InteractiveGuides">
            <summary>
              Looks up a localized string similar to _Interactive Guides.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InvalidDraggingOperationMessgae">
            <summary>
              Looks up a localized string similar to Nothing is being dragged. If you see this message, most likely your recent Dynamo interaction is not recommended..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InvalidLoginUrl">
            <summary>
              Looks up a localized string similar to Invalid URL for login page!.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.InvalidTimeZoneMessage">
            <summary>
              Looks up a localized string similar to Could not sign in at this moment. Check the date, time and time zone settings and try to sign in again..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LacingAutoToolTip">
            <summary>
              Looks up a localized string similar to No replication guide will be added..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LacingCrossProductToolTip">
            <summary>
              Looks up a localized string similar to For two lists [a,b,c][1,2,3] returns [a1,a2,a3][b1,b2,b3][c1,c2,c3]..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LacingDisabledToolTip">
            <summary>
              Looks up a localized string similar to Argument lacing is disabled for this node..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LacingFirstToolTip">
            <summary>
              Looks up a localized string similar to For two lists [a,b,c][1,2,3] returns {a1}..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LacingLongestToolTip">
            <summary>
              Looks up a localized string similar to For two lists [a,b,c][1,2] returns [a1,b2,c2]..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LacingShortestToolTip">
            <summary>
              Looks up a localized string similar to For two lists [a,b,c][1,2] returns [a1,b2]..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LayoutIconTooltip">
            <summary>
              Looks up a localized string similar to View layout.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LearnMore">
            <summary>
              Looks up a localized string similar to Learn more.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LibraryLoadFailureMessageSuffix">
            <summary>
              Looks up a localized string similar to See the console log for the details of the import failure..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LibraryViewContextMenuEditNode">
            <summary>
              Looks up a localized string similar to Edit....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LibraryViewNoMatchesFound">
            <summary>
              Looks up a localized string similar to No matches found.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LibraryViewSearchText">
            <summary>
              Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LibraryViewTitle">
            <summary>
              Looks up a localized string similar to Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LibraryZoomScaleTooltipText">
            <summary>
              Looks up a localized string similar to Drag to adjust Library zoom scale between 25% and 300%. You can also adjust this in Library by pressing “Ctrl” and scrolling the mouse wheel..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LoadedPackagesConflictMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Package has conflicts with one or more loaded packages..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.LogoutMenuItemText">
            <summary>
              Looks up a localized string similar to Sign Out.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MajorVersionNonNegative">
            <summary>
              Looks up a localized string similar to You must provide a Major version as a non-negative integer..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Manual">
            <summary>
              Looks up a localized string similar to Manual.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageAlreadyInstallDynamo">
             <summary>
               Looks up a localized string similar to Package {1} is already installed.
            
            {0} will attempt to uninstall this package before installing {2}..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageConfirmToDeletePackage">
             <summary>
               Looks up a localized string similar to Are you sure you want to delete {0} ?  This will delete the packages root directory.
            
            You can always redownload the package..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageConfirmToInstallPackage">
            <summary>
              Looks up a localized string similar to Are you sure you want to install {0} {1} ?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageConfirmToInstallPackageToFolder">
            <summary>
              Looks up a localized string similar to Are you sure you want to install {0} {1} to {2} ?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageConfirmToSaveCustomNode">
             <summary>
               Looks up a localized string similar to You have unsaved changes to custom node workspace: &quot;{0}&quot;.
            
            Would you like to save your changes?.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageConfirmToSaveHomeWorkSpace">
             <summary>
               Looks up a localized string similar to You have unsaved changes to the Home workspace.
            
            Would you like to save your changes?.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageConfirmToSaveNamedHomeWorkSpace">
             <summary>
               Looks up a localized string similar to You have unsaved changes to {0}.
            
            Would you like to save your changes?.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageConfirmToSaveReadOnlyCustomNode">
            <summary>
              Looks up a localized string similar to We can&apos;t save &quot;{0}&quot; because the file is read-only or contains unresolved or invalid nodes. To keep changes, would you like to &quot;Save As...&quot; with a different name or path?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageCustomNodeNameExist">
            <summary>
              Looks up a localized string similar to A built-in node with the given name already exists..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageCustomNodeNameInvalid">
            <summary>
              Looks up a localized string similar to Custom Node name cannot contain any of the following special characters:
               # % * ? \ : or any of the non-printable characters..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageCustomNodeNeedNewCategory">
            <summary>
              Looks up a localized string similar to You must enter a new category or choose one from the existing categories..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageCustomNodeNoName">
            <summary>
              Looks up a localized string similar to You must supply a name..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageErrorOpeningFileGeneral">
            <summary>
              Looks up a localized string similar to Error Opening File.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToAddFile">
            <summary>
              Looks up a localized string similar to Failed to add file: {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToApplyCustomization">
            <summary>
              Looks up a localized string similar to Failed to apply NodeViewCustomization for {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToAttachToRowColumn">
            <summary>
              Looks up a localized string similar to &apos;AttachmentToRowColumnConverter&apos; expects a &apos;ConverterParameter&apos; value to be either &apos;Row&apos; or &apos;Column&apos;.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToDelete">
            <summary>
              Looks up a localized string similar to {0} failed to delete the package.  You may need to delete the package&apos;s root directory manually..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToDownloadPackage">
            <summary>
              Looks up a localized string similar to Failed to download package with id: {0}.  Please try again and report the package if you continue to have problems..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToDownloadPackageVersion">
            <summary>
              Looks up a localized string similar to Failed to download version {0} of package with id: {1}.  Please try again and report the package if you continue to have problems..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToFindNodeById">
            <summary>
              Looks up a localized string similar to No node could be found with that Id..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToOpenCorruptedFile">
            <summary>
              Looks up a localized string similar to Error opening corrupted file: {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToSaveAsImage">
            <summary>
              Looks up a localized string similar to Failed to save the Workspace as image..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailedToUnload">
            <summary>
              Looks up a localized string similar to {0} failed to unload the package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageFailToUninstallPackage">
            <summary>
              Looks up a localized string similar to {0} failed to uninstall the package: {1}.  The package may need to be reinstalled manually..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageForceInstallOrUninstallToContinue">
             <summary>
               Looks up a localized string similar to Package {0} has one or more dependencies that conflict with the following packages that are in use in the workspace: {1}. Dependency conflicts could cause unintended behavior to occur.
                
            Do you wish to continue installing it while keeping the packages that are already installed?
            
            If not, {2} needs to uninstall {1} to continue but cannot as they are in use. Try restarting {2} and download {0} again..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageForceInstallOrUninstallUponRestart">
             <summary>
               Looks up a localized string similar to Package {0} has one or more dependencies that conflict with the following package(s):
            
            {1}
            
            If you continue to install the package, unintended behavior may occur.
            
            To avoid unintended behavior, uninstall the conflicting loaded package(s), restart Dynamo, and download {0} again..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageGettingNodeError">
            <summary>
              Looks up a localized string similar to There was a problem getting the node from the workspace..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageInvalidPackage">
            <summary>
              Looks up a localized string similar to Failed to load an invalid package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageLoadBuiltInPackage">
             <summary>
               Looks up a localized string similar to To load the built-in package {1}, {0} needs to first delete any conflicting packages.
            
            Delete the following packages: {2}?.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageLoadBuiltInWithRestartPackage">
             <summary>
               Looks up a localized string similar to To load the built-in package {1}, {0} needs to first delete any conflicting packages.
            Restart {0} to complete the deletion, then try and load the built-in pacakge again.
            
            Delete the following packages: {2}?
                .
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageLoadingTime">
            <summary>
              Looks up a localized string similar to {0} elapsed for loading {1} main window..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageNeedToRestartAfterDelete">
            <summary>
              Looks up a localized string similar to {0} and its host application must restart before delete takes effect..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageNeedToRestartAfterDeleteTitle">
            <summary>
              Looks up a localized string similar to Deleting Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageNeedToRestartAfterUnload">
            <summary>
              Looks up a localized string similar to {0} and its host application must restart before unload takes effect..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageNeedToRestartAfterUnloadTitle">
            <summary>
              Looks up a localized string similar to Unloading Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageNodeWithNullFunction">
            <summary>
              Looks up a localized string similar to There is a null function definition for this node..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageNoNodeDescription">
            <summary>
              Looks up a localized string similar to No description provided.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePackageContainPythonScript">
            <summary>
              Looks up a localized string similar to The package or one of its dependencies contains Python scripts or binaries. Do you want to continue?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePackageDepsInBuiltinPackages">
             <summary>
               Looks up a localized string similar to {0} has dependencies that conflict with the following built-in package(s): {1}. Dependency conflicts could cause unintended behavior to occur.
                
            Do you wish to continue trying to install {0}?.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePackageNewerDynamo">
            <summary>
              Looks up a localized string similar to The package or one of its dependencies use a newer version of {0} than you are currently using. Do you want to continue?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePackageNotFound">
            <summary>
              Looks up a localized string similar to {0} was not found and could not be downloaded..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePackageTargetOtherHosts">
            <summary>
              Looks up a localized string similar to The package or one of its dependencies targets a different environment, such as Revit, Civil 3D, Advance Steel, Alias or FormIt. This can cause instability and unexpected problems. Do you want to continue?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePackageTargetOtherHosts2">
            <summary>
              Looks up a localized string similar to The package or one of its dependencies targets a different environment, such as Revit, Civil 3D, Advance Steel, Alias or FormIt. This can cause instability and unexpected problems..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePackageTargetOtherHostShort">
            <summary>
              Looks up a localized string similar to Package targets a different host than current host application..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePackageVersionNotFound">
            <summary>
              Looks up a localized string similar to Version {0} of {1} could not be found..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessagePortNameInvalid">
            <summary>
              Looks up a localized string similar to Cannot contain special characters (# % * ? \ : [ ]).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageRemovePythonPort">
            <summary>
              Looks up a localized string similar to Your custom port properties will be lost once the port is removed..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageSamePackageDiffVersInBuiltinPackages">
             <summary>
               Looks up a localized string similar to {0} cannot be installed as it conflicts with a different version of the built-in package, {1}, which is already installed.
                
            You can try disabling loading packages from built-in package paths, or unload the conflicting package, then restart {2} and download {0} again..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageSamePackageDiffVersInLocalPackages">
             <summary>
               Looks up a localized string similar to Package {0} cannot be installed as it conflicts with a different version, {1}, which is already installed. 
            
            Do you wish to uninstall {1}? Restart {2} to complete the uninstall and try downloading {0} again..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageSamePackageSameVersInBuiltinPackages">
            <summary>
              Looks up a localized string similar to The same version of {0} is already installed as a built-in package and does not need to be installed again..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageSamePackageSameVersInLocalPackages">
            <summary>
              Looks up a localized string similar to The same version of {0} is already installed and does not need to be installed again..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageSelectAtLeastOneNode">
            <summary>
              Looks up a localized string similar to You must select at least one custom node..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageSelectSymbolNotFound">
            <summary>
              Looks up a localized string similar to The selected symbol was not found in the workspace.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageSubmitSameNamePackage">
             <summary>
               Looks up a localized string similar to The node is part of the {0} package called &quot;{1}&quot; - do you want to submit a new version of this package?
            
            If not, this node will be moved to the new package you are creating.&quot;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageToDeprecatePackage">
             <summary>
               Looks up a localized string similar to Are you sure you want to deprecate {0} ?  This request will be rejected if you are not a maintainer of the package.  It indicates that you will no longer support the package, although the package will still appear when explicitly searched for. 
            
            You can always undeprecate the package..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageToUndeprecatePackage">
             <summary>
               Looks up a localized string similar to Are you sure you want to undeprecate {0} ?  This request will be rejected if you are not a maintainer of the package.  It indicates that you will continue to support the package and the package will appear when users are browsing packages.
            
            You can always re-deprecate the package..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageUninstallCustomNodeToContinue">
             <summary>
               Looks up a localized string similar to {1} cannot be loaded.
            Installing it will conflict with one or more node definitions that already exist in {0}, which is currently loaded. 
            To install {1}, Dynamo needs to first uninstall {0}. 
            Restart Dynamo to complete the uninstall.
            
            Uninstall the following packages: {0}?.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageUninstallSamePackage">
            <summary>
              Looks up a localized string similar to &quot;The package {0} is already installed. To reinstall it, you must first uninstall it and restart to complete the uninstall. Would you like to mark {0} for uninstall?&quot;.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageUnkownErrorOpeningFile">
            <summary>
              Looks up a localized string similar to Unknown error opening file: {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageUnsavedChanges0">
            <summary>
              Looks up a localized string similar to The following workspaces have not been saved:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MessageUnsavedChanges1">
            <summary>
              Looks up a localized string similar to . Please save them and try again..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MinorVersionNonNegative">
            <summary>
              Looks up a localized string similar to You must provide a Minor version as a non-negative integer..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MLRecommendationNumberOfResults">
            <summary>
              Looks up a localized string similar to Number of results.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.MoreButton">
            <summary>
              Looks up a localized string similar to More.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NameNeedMoreCharacters">
            <summary>
              Looks up a localized string similar to Name must be at least 3 characters..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NextGuideText">
            <summary>
              Looks up a localized string similar to Next guide: .
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeAutocomplete">
            <summary>
              Looks up a localized string similar to Sort results by.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeAutocompleteDocumentationUriString">
            <summary>
              Looks up a localized string similar to DynamoCoreWpf;NodeAutocompleteDocumentation.html.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeAutoCompleteNotAvailableForCollapsedGroups">
            <summary>
              Looks up a localized string similar to Node AutoComplete is not available on ports belonging to collapsed groups..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeContextMenuEnablePeriodicUpdate">
            <summary>
              Looks up a localized string similar to Enable Periodic Update.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeContextMenuHelp">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeContextMenuIsInput">
            <summary>
              Looks up a localized string similar to Is Input.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeContextMenuIsOutput">
            <summary>
              Looks up a localized string similar to Is Output.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeContextMenuPreview">
            <summary>
              Looks up a localized string similar to Preview Geometry.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeContextMenuRenameNode">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeContextMenuShowLabels">
            <summary>
              Looks up a localized string similar to Show Labels.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeHelpWindowNodeCategory">
            <summary>
              Looks up a localized string similar to CATEGORY.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeHelpWindowNodeDescription">
            <summary>
              Looks up a localized string similar to DESCRIPTION.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeHelpWindowNodeInput">
            <summary>
              Looks up a localized string similar to INPUTS.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeHelpWindowNodeOutput">
            <summary>
              Looks up a localized string similar to OUTPUTS.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeHelpWindowNodeType">
            <summary>
              Looks up a localized string similar to NODE TYPE.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeInfoDismissButtonToolTip">
            <summary>
              Looks up a localized string similar to Dismisses the info messages on this node. Utilize when you want to design in graph failures, or the info message will not be relevant during graph execution..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeInformationalStateDismiss">
            <summary>
              Looks up a localized string similar to Dismiss.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeInformationalStateDismissAll">
            <summary>
              Looks up a localized string similar to Dismiss all.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeInformationalStateDismissedAlerts">
            <summary>
              Looks up a localized string similar to Dismissed Alerts.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeInformationalStateShowAllErrors">
            <summary>
              Looks up a localized string similar to Show all errors.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeInformationalStateShowAllInfo">
            <summary>
              Looks up a localized string similar to Show all info.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeInformationalStateShowAllWarnings">
            <summary>
              Looks up a localized string similar to Show all warnings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeInformationalStateShowLess">
            <summary>
              Looks up a localized string similar to Show less.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeRenamedLabel">
            <summary>
              Looks up a localized string similar to Renamed.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodesRunStatus">
            <summary>
              Looks up a localized string similar to Freeze.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeTooltipDescription">
            <summary>
              Looks up a localized string similar to Description: .
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeTooltipOriginalName">
            <summary>
              Looks up a localized string similar to Original node name: .
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeTooltipPackage">
            <summary>
              Looks up a localized string similar to Package: .
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeTooltipRenamed">
            <summary>
              Looks up a localized string similar to Renamed from {0}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeViewCustomizationFindErrorMessage">
            <summary>
              Looks up a localized string similar to There was an error while finding node view customizations for {0}. Contact the author of this assembly for more information..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NodeWarningDismissButtonToolTip">
            <summary>
              Looks up a localized string similar to Dismisses the warning messages on this node. Utilize when you want to design in graph failures, or the warning message will not be relevant during graph execution..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NoneString">
            <summary>
              Looks up a localized string similar to none.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NoteViewContextMenuDelete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NoteViewContextMenuEdit">
            <summary>
              Looks up a localized string similar to Edit....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NotificationCenterButtonTooltip">
            <summary>
              Looks up a localized string similar to Click to view latest news from Dynamo Team..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.NullString">
            <summary>
              Looks up a localized string similar to null.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ObjectType">
            <summary>
              Looks up a localized string similar to Node Type Match.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OKButton">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingGuide">
            <summary>
              Looks up a localized string similar to _Getting Started.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingGuideConnectNodesText">
            <summary>
              Looks up a localized string similar to This new node needs to be connected to another to make it part of the graph. Give it a try, then click the Next arrow..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingGuideConnectNodesTitle">
            <summary>
              Looks up a localized string similar to Connect the nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingGuideRunGraphText">
            <summary>
              Looks up a localized string similar to Let’s run the graph and see the results of the adjustments you made. Click Run..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingGuideRunGraphTitle">
            <summary>
              Looks up a localized string similar to Run the graph.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingGuideSurveyText">
            <summary>
              Looks up a localized string similar to You&apos;ve finished the Getting Started guide..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingGuideWelcomeText">
            <summary>
              Looks up a localized string similar to Learn about the basic building blocks of Dynamo. Get hands-on practice working with a graph..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingGuideWelcomeTitle">
            <summary>
              Looks up a localized string similar to Get started with Dynamo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingNodesText">
            <summary>
              Looks up a localized string similar to Nodes are the building blocks of graphs. Nodes perform operations, such as storing a number or creating geometry.\n\nYou can learn more about a node by hovering over its parts. This node is missing an input.\n\nHover over the input port to see what types of data it accepts..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingNodesTitle">
            <summary>
              Looks up a localized string similar to Nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingPlaceNodeText">
             <summary>
               Looks up a localized string similar to The library contains the nodes used to build graphs. To find a node, you can search the library or browse its categories.
            
            To place a node from the library to the workspace, click the node.
            
            Try placing the highlighted **ByOrigin** node..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingPlaceNodeTitle">
            <summary>
              Looks up a localized string similar to Placing nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingSuccessText">
            <summary>
              Looks up a localized string similar to Well done! You just ran your first graph in Dynamo. \n\nStay tuned for more guides on Dynamo basics. In the meantime, continue your learning journey in #Dynamo Primer=https://primer2.dynamobim.org/ ..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingSuccessTitle">
            <summary>
              Looks up a localized string similar to Success.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingWorkspaceText">
            <summary>
              Looks up a localized string similar to This is the workspace, where you’ll develop visual programs and preview the results. \n\nEach visual program is powered by a **graph** . Graphs can process data, create geometry, and more. In this guide, we’ll work with a sample graph..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnboardingWorkspaceTitle">
            <summary>
              Looks up a localized string similar to Workspace.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OneAssemblyWasLoadedSeveralTimesErrorMessage">
             <summary>
               Looks up a localized string similar to Please, load assembly just one time.
            Next assemblies were loaded several times:
            .
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OnlyTitle">
            <summary>
              Looks up a localized string similar to only.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.OpenDynamoDefinitionDialogTitle">
            <summary>
              Looks up a localized string similar to Open {0} Definition....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuDeletePackageCustomNodesInUseTooltip">
            <summary>
              Looks up a localized string similar to This package contains custom nodes that are in use. These custom nodes need to be deleted or the graph needs to be closed before the package can be deleted..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuDeletePackageText">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuDeletePackageTooltip">
            <summary>
              Looks up a localized string similar to Delete this package from the Dynamo package locations. Once deleted, it will not be loaded into Dynamo anymore until it is re-installed.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuUnloadPackageText">
            <summary>
              Looks up a localized string similar to Unload.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuUnloadPackageTooltip">
            <summary>
              Looks up a localized string similar to Unload this package so that it will not be loaded into Dynamo. The package will not be deleted from the Dynamo package locations.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuUnmarkDeletePackageText">
            <summary>
              Looks up a localized string similar to Cancel Delete.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuUnmarkDeletePackageTooltip">
            <summary>
              Looks up a localized string similar to Remove the scheduled delete status.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuUnmarkUnloadPackageText">
            <summary>
              Looks up a localized string similar to Cancel Unload.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageContextMenuUnmarkUnloadPackageTooltip">
            <summary>
              Looks up a localized string similar to Remove the scheduled unload status.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDeprecatedTooltip">
            <summary>
              Looks up a localized string similar to This package is outdated and cannot be installed..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsCopyRightHolder">
            <summary>
              Looks up a localized string similar to Copyright Holder.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsCopyRightYear">
            <summary>
              Looks up a localized string similar to Copyright Year.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsDescription">
            <summary>
              Looks up a localized string similar to DESCRIPTION.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsHost">
            <summary>
              Looks up a localized string similar to Host.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsLicense">
            <summary>
              Looks up a localized string similar to LICENSE OF LATEST PACKAGE.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsPackage">
            <summary>
              Looks up a localized string similar to Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsPython">
            <summary>
              Looks up a localized string similar to Python.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsVersions">
            <summary>
              Looks up a localized string similar to Versions.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDetailsVersionsAndPackageRequirements">
            <summary>
              Looks up a localized string similar to VERSIONS AND PACKAGE REQUIREMENTS.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadConfirmMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Package Download Confirmation.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadErrorMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Package Download Error.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Package Download.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadStateDownloaded">
            <summary>
              Looks up a localized string similar to Downloaded.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadStateDownloading">
            <summary>
              Looks up a localized string similar to Downloading.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadStateError">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadStateInstalled">
            <summary>
              Looks up a localized string similar to Installed.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadStateInstalling">
            <summary>
              Looks up a localized string similar to Installing.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDownloadStateStarting">
            <summary>
              Looks up a localized string similar to Starting.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDuplicateAssemblyWarning">
            <summary>
              Looks up a localized string similar to Due to limitations in the .NET framework, it is not possible to update your package assembly while it is already loaded.  Please update the assembly while {0} is not running and try again..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageDuplicateAssemblyWarningTitle">
            <summary>
              Looks up a localized string similar to Cannot update assembly.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageFilter_Name_All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageFolderNotAccessible">
             <summary>
               Looks up a localized string similar to A problem occurred when trying to install the package. Dynamo is unable to obtain read/write access to
            {0}.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageHostDependencyFilter">
            <summary>
              Looks up a localized string similar to Filter packages that depend on applications outside Dynamo. This feature currently can only filter packages which have been marked manually by package authors during publish..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageHostDependencyFilterContextItem">
            <summary>
              Looks up a localized string similar to Packages contain node(s)  that depend on specified application outside Dynamo..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageHostDependencyTooltip">
            <summary>
              Looks up a localized string similar to This package contains node(s) that depend on applications outside Dynamo. To fully utilize node(s) in this package, you will need to have these external applications installed..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageManagerInstall">
            <summary>
              Looks up a localized string similar to Install.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageManagerPackageDeprecated">
            <summary>
              Looks up a localized string similar to Deprecated.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageManagerPackageNew">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageManagerPackageUpdated">
            <summary>
              Looks up a localized string similar to Updated.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageNameCannotContainTheseCharacters">
            <summary>
              Looks up a localized string similar to The name of the package cannot contain.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageNeedAtLeastOneFile">
            <summary>
              Looks up a localized string similar to Your package must contain at least one file..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageNotExisted">
            <summary>
              Looks up a localized string similar to The root directory of the package does not exist. Please try and re-install the package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathAddPathButtonName">
            <summary>
              Looks up a localized string similar to Add Path.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathAutoAddNotificationDetailedDescription">
            <summary>
              Looks up a localized string similar to The import path &quot;{0}&quot; was added to &quot;Node and Package Paths&quot;. If you want to update or remove this path, please open &quot;Dynamo &gt; Preferences &gt;Package Manager &gt; Node and Package Paths...&quot;.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathAutoAddNotificationShortDescription">
            <summary>
              Looks up a localized string similar to A library (*.dll, *.ds) was recently imported into Dynamo. Its path was automatically added to &quot;Preferences &gt; Node and Package Paths...&quot;.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathAutoAddNotificationTitle">
            <summary>
              Looks up a localized string similar to Package Path Added.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathPreferencesTitle">
            <summary>
              Looks up a localized string similar to Package/Library Search Paths.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathProtected">
            <summary>
              Looks up a localized string similar to This path is built-in and cannot be modified..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathsExpanderName">
            <summary>
              Looks up a localized string similar to Node and Package File Locations.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathUpdatePathTooltip">
            <summary>
              Looks up a localized string similar to Edit Path.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewAccept">
            <summary>
              Looks up a localized string similar to Accept Changes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewHeading">
            <summary>
              Looks up a localized string similar to Paths:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewModel_BuiltInPackages">
            <summary>
              Looks up a localized string similar to Dynamo Built-In Packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewSummary1">
            <summary>
              Looks up a localized string similar to Add paths to make nodes and packages show up in the library..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewTitle">
            <summary>
              Looks up a localized string similar to Manage Node and Package Paths.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewToolTipDown">
            <summary>
              Looks up a localized string similar to Move the selected path downward.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewToolTipMinus">
            <summary>
              Looks up a localized string similar to Remove the selected path from list.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewToolTipPlus">
            <summary>
              Looks up a localized string similar to Add a new path to the list.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagePathViewToolTipUp">
            <summary>
              Looks up a localized string similar to Move the selected path upward.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageRepositoryLabel">
            <summary>
              Looks up a localized string similar to Repository.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchHeader">
            <summary>
              Looks up a localized string similar to Search for packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchOrder">
            <summary>
              Looks up a localized string similar to ORDER.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchResultRequirements">
            <summary>
              Looks up a localized string similar to Requirements.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchResultViewDetails">
            <summary>
              Looks up a localized string similar to View Details.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchSortBy">
            <summary>
              Looks up a localized string similar to SORT BY.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchStateNoResult">
            <summary>
              Looks up a localized string similar to Search returned no results!.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchStateSearching">
            <summary>
              Looks up a localized string similar to Searching....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchStateSyncingWithServer">
            <summary>
              Looks up a localized string similar to Syncing with server....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewClearButton">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewClearButtonTooltip">
            <summary>
              Looks up a localized string similar to Clear Downloads.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewContextMenuOrderAscending">
            <summary>
              Looks up a localized string similar to Ascending.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewContextMenuOrderDescending">
            <summary>
              Looks up a localized string similar to Descending.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewContextMenuSortByAuthor">
            <summary>
              Looks up a localized string similar to Author.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewContextMenuSortByDownloads">
            <summary>
              Looks up a localized string similar to Downloads.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewContextMenuSortByName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewContextMenuSortByVotes">
            <summary>
              Looks up a localized string similar to Votes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewContextMenuSortyByUpdate">
            <summary>
              Looks up a localized string similar to Most Recent Update.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewDeprecatedTooltip">
            <summary>
              Looks up a localized string similar to The maintainers of this package have indicated that they will no longer be updating it.  Use at your own risk!.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewDescription">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewFilterByButton">
            <summary>
              Looks up a localized string similar to Filter by.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewInstallButton">
            <summary>
              Looks up a localized string similar to ⇓ Install.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewInstallLatestVersion">
            <summary>
              Looks up a localized string similar to Install latest version.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewInstallLatestVersionTo">
            <summary>
              Looks up a localized string similar to Install latest version to folder....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewInstallThisVersion">
            <summary>
              Looks up a localized string similar to Install this version.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewInstallThisVersionTo">
            <summary>
              Looks up a localized string similar to Install this version to folder....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewKeywords">
            <summary>
              Looks up a localized string similar to Keywords.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewSearchTextBox">
            <summary>
              Looks up a localized string similar to Search....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewSearchTextBoxSyncing">
            <summary>
              Looks up a localized string similar to Please wait....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewSortByButton">
            <summary>
              Looks up a localized string similar to Sort by.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewTitle">
            <summary>
              Looks up a localized string similar to Online Package Search.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewUpvoteButtonTooltip">
            <summary>
              Looks up a localized string similar to Vote in support of this package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewVersions">
            <summary>
              Looks up a localized string similar to Versions.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewVisitRepositoryBuutton">
            <summary>
              Looks up a localized string similar to Visit package repository.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSearchViewVisitWebSiteButton">
            <summary>
              Looks up a localized string similar to Visit package website.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuide">
            <summary>
              Looks up a localized string similar to _Packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideContinueButton">
            <summary>
              Looks up a localized string similar to Continue.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideDependenciesText">
            <summary>
              Looks up a localized string similar to \nIf you need other software or tools in order to use this package, they are listed under Dependencies..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideDependenciesTitle">
            <summary>
              Looks up a localized string similar to Package dependencies.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideExitAcceptTerms">
            <summary>
              Looks up a localized string similar to To continue the guide and install the sample package, you must accept the Terms of Service. \n\n **Click Continue.** Then in the terms, **click I Accept.** \n\n\n\n.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideExitButton">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideExitTitle">
            <summary>
              Looks up a localized string similar to Do you want to exit the guide?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideFindPackageText">
            <summary>
              Looks up a localized string similar to Packages provide additional functions that you can use in Dynamo. \n\nTo find a package or see what’s available, \n**Click Packages &gt; Search for Packages**..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideFindPackageTitle">
            <summary>
              Looks up a localized string similar to Find a package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideInstallAPackageText">
            <summary>
              Looks up a localized string similar to Package installations are typically quick, depending on their size and other factors. \n\n**Click Install** to install the latest version of the sample Autodesk package and proceed with this guide..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideInstallAPackageTitle">
            <summary>
              Looks up a localized string similar to Install a package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideInstalledPackageText">
             <summary>
               Looks up a localized string similar to Package installations are typically quick, depending on their size and other factors. \n
            To install the latest version of a package, click Install. \n
            %./UI/Images/alert.png% The sample Autodesk package is already installed on your computer..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideLearnAbout">
            <summary>
              Looks up a localized string similar to Learn about packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideNavigatePackagesText">
            <summary>
              Looks up a localized string similar to \nWhen you install a package, it appears in the library under Add-ons.   \n\n**Click to expand the package** so you can see its nodes (functions)..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideNavigatePackagesTitle">
            <summary>
              Looks up a localized string similar to Navigate to packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuidePackagesNodeTitle">
            <summary>
              Looks up a localized string similar to Use package nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideSearchFilterText">
            <summary>
              Looks up a localized string similar to \nYou can find packages whose title, author, or keywords contain the search phrase. To filter and sort the results, use the and icons next to the search bar..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideSearchFilterTitle">
            <summary>
              Looks up a localized string similar to Search, filter, and sort.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideSearchResultsText">
            <summary>
              Looks up a localized string similar to \nSearch results display summary information for each package: -author- -likes and downloads- -date of the most recent version- \n**Click View Details** to see more information about a package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideSearchResultsTitle">
            <summary>
              Looks up a localized string similar to Search results.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideSurveyText">
            <summary>
              Looks up a localized string similar to Learn more about packages in the #online help=https://dynamobim.org/issues/extend-dynamo-with-packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideSurveyTitle">
            <summary>
              Looks up a localized string similar to Finished.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideTermsOfServiceText">
            <summary>
              Looks up a localized string similar to \nPackages may come from third parties. Be aware that packages may pose security risks. #More information=https://dynamobim.org/issues/extend-dynamo-with-packages  \n\n**Click I Accept** in the Terms of Service to accept it and proceed with this guide..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideTermsOfServiceTitle">
            <summary>
              Looks up a localized string similar to Accept the Terms of Service.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideThirdPartyText">
            <summary>
              Looks up a localized string similar to \nPackages may come from third parties.\n\nBe aware that packages may pose security risks. #More information=https://dynamobim.org/issues/extend-dynamo-with-packages/.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideThirdPartyTitle">
            <summary>
              Looks up a localized string similar to Third-party packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideUsePackageText">
            <summary>
              Looks up a localized string similar to To learn how to use nodes in a package, hover over a node to see a description. To add a node to the workspace, click its name in the list..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesGuideUsePackageTitle">
            <summary>
              Looks up a localized string similar to Use package nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackagesInUseConflictMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Package has conflicts with one or more packages in use..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageSortToolTip">
            <summary>
              Looks up a localized string similar to Sort Packages..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateError">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateErrorTooltip">
             <summary>
               Looks up a localized string similar to Error.
            This package has not been loaded due to the following error:
            {0}..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateLoaded">
            <summary>
              Looks up a localized string similar to Loaded.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateLoadedTooltip">
             <summary>
               Looks up a localized string similar to Loaded.
            This package is loaded and ready to be used..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateScheduledForDeletion">
            <summary>
              Looks up a localized string similar to Scheduled for Delete.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateScheduledForDeletionTooltip">
             <summary>
               Looks up a localized string similar to Scheduled for Delete.
            This package will be deleted after the next Dynamo restart..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateScheduledForUnload">
            <summary>
              Looks up a localized string similar to Scheduled for Unload.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateScheduledForUnloadTooltip">
             <summary>
               Looks up a localized string similar to Scheduled for Unload.
            This package will be unloaded after the next Dynamo restart..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateUnknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateUnloaded">
            <summary>
              Looks up a localized string similar to Unloaded.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageStateUnloadedTooltip">
             <summary>
               Looks up a localized string similar to Unloaded.
            This package has been marked as unloaded..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageTypeShortString">
            <summary>
              Looks up a localized string similar to PKG.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageUploadNoDependency">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageUploadStateCompressing">
            <summary>
              Looks up a localized string similar to Compressing....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageUploadStateCopying">
            <summary>
              Looks up a localized string similar to Copying....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageUploadStateError">
            <summary>
              Looks up a localized string similar to Error!.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageUploadStateReady">
            <summary>
              Looks up a localized string similar to Ready.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageUploadStateUploaded">
            <summary>
              Looks up a localized string similar to Uploaded.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageUploadStateUploading">
            <summary>
              Looks up a localized string similar to Uploading....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageUseNewerDynamoMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Package Uses Newer Version of {0}!.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageViewContextMenuLoadText">
            <summary>
              Looks up a localized string similar to Load.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageViewContextMenuLoadTooltip">
            <summary>
              Looks up a localized string similar to Load this package into Dynamo. Other packages with the same name will be automatically deleted.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageWarningMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Package Warning.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PackageWebsiteLabel">
            <summary>
              Looks up a localized string similar to Website.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Periodic">
            <summary>
              Looks up a localized string similar to Periodic.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PersistentVisualStatusOfLinterIssues">
            <summary>
              Looks up a localized string similar to Issues found.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PortPropertiesPromptDescriptionTooltip">
            <summary>
              Looks up a localized string similar to Description of port.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PortPropertiesPromptInputWindowTitle">
            <summary>
              Looks up a localized string similar to Input Port Properties.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PortPropertiesPromptNameTooltip">
            <summary>
              Looks up a localized string similar to Port name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PortPropertiesPromptOutputWindowTitle">
            <summary>
              Looks up a localized string similar to Output Port Properties.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PortPropertiesPromptWindowDescription">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PortPropertiesPromptWindowName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PortViewContextMenuUserDefaultValue">
            <summary>
              Looks up a localized string similar to Use Default Value.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesGrahicHelpersScale">
            <summary>
              Looks up a localized string similar to Graphic Elements Scale.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesGrahicHelpersScaleTooltip">
            <summary>
              Looks up a localized string similar to Select a scale for the background graphic helpers (grids, axes)..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesHostGenericScaleImperialUnits">
            <summary>
              Looks up a localized string similar to Imperial.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesHostGenericScaleMetricUnits">
            <summary>
              Looks up a localized string similar to Metric.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesMustBeClosedMessage">
            <summary>
              Looks up a localized string similar to Preferences must be closed before you proceed. All changes saved automatically..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesNodeAutocompleteMethod">
            <summary>
              Looks up a localized string similar to Default Ranking Method.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesPackageDownloadDirectoryTooltip">
            <summary>
              Looks up a localized string similar to Choose a package path from this list to download new packages to..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesPackageManagerSettingsTab">
            <summary>
              Looks up a localized string similar to Package Manager.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSecuritySettingsTab">
            <summary>
              Looks up a localized string similar to Security.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingBackupInterval">
            <summary>
              Looks up a localized string similar to Auto-Backup Interval.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingCustomPythomTemplate">
            <summary>
              Looks up a localized string similar to Custom Python Template File Path.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingDefaultBackupLocation">
            <summary>
              Looks up a localized string similar to Default Backup Location.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingHardwareAcceleration">
            <summary>
              Looks up a localized string similar to Use Hardware Acceleration.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingMaxRecentFiles">
            <summary>
              Looks up a localized string similar to Maximum Number of Recent Files.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingResetBackupLocationTooltip">
            <summary>
              Looks up a localized string similar to Reset Backup Location.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingsBackupFailedMessage">
            <summary>
              Looks up a localized string similar to Invalid Backup location.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingsBackupFailedTitle">
            <summary>
              Looks up a localized string similar to Backup location Failed.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingsBackupLocationDialogTitle">
            <summary>
              Looks up a localized string similar to Select Folder to Backup.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesSettingUpdateBackupLocationTooltip">
            <summary>
              Looks up a localized string similar to Edit Backup Location.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesUseHostScaleUnits">
            <summary>
              Looks up a localized string similar to Use Revit to scale background graphic helpers.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesUseHostScaleUnitsToolTip">
            <summary>
              Looks up a localized string similar to When toggled on, the current Revit document units will be used to scale the background graphic helpers (grids, axes). Otherwise, the Graphic Elements Scale drop-down will determine scale..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewAlreadyExistingStyleWarning">
            <summary>
              Looks up a localized string similar to Style name already in use.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewBetaTag">
            <summary>
              Looks up a localized string similar to Beta.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewDefaultPythonEngine">
            <summary>
              Looks up a localized string similar to Default Python Engine.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewDefaultRunSettingsInfoTooltip">
             <summary>
               Looks up a localized string similar to Set the default run mode for your graphs. In Manual mode,  graph changes are executed when you click Run. Use this mode when working in large graphs, unfamiliar graphs, or host programs.
            
            In Automatic mode, graph changes are executed in real time. This mode provides immediate feedback. 
            
            In certain complex graphs or host program scenarios, Automatic mode may cause instability issues or other problems. If this happens, try switching to Manual mode..
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewDisableBuiltInPackages">
            <summary>
              Looks up a localized string similar to Disable Loading Built-In Packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewDisableCustomPackages">
            <summary>
              Looks up a localized string similar to Disable Loading Custom Packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewEmptyStyleWarning">
            <summary>
              Looks up a localized string similar to Please enter a valid name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewEnableNodeAutoComplete">
            <summary>
              Looks up a localized string similar to Enable Node Autocomplete.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewEnableNodeAutoCompleteTooltipText">
            <summary>
              Looks up a localized string similar to Learn more about Node Autocomplete feature..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewEnableNotificationCenter">
            <summary>
              Looks up a localized string similar to Receive notification.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewEnablePersistExtensions">
            <summary>
              Looks up a localized string similar to On launch, remember open extensions panels from last session.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewEnableTSplineNodes">
            <summary>
              Looks up a localized string similar to Enable T-Spline nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewExperimentalLabel">
            <summary>
              Looks up a localized string similar to Experimental.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewExtensions">
            <summary>
              Looks up a localized string similar to Extensions.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewFeaturesTab">
            <summary>
              Looks up a localized string similar to Features.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewFontSizeLabel">
            <summary>
              Looks up a localized string similar to Node Font Size.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewGeneralSettingsBackup">
            <summary>
              Looks up a localized string similar to Backup Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewGeneralSettingsGeoScaling">
            <summary>
              Looks up a localized string similar to Default Geometry Scaling.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewGeneralSettingsRun">
            <summary>
              Looks up a localized string similar to Run Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewGeneralTab">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewIncludeTimestampExportPathTooltip">
            <summary>
              Looks up a localized string similar to When toggled on, file names of exported images include date and time of export..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewLanguageLabel">
            <summary>
              Looks up a localized string similar to Language.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewLanguageSwitchHelp">
            <summary>
              Looks up a localized string similar to Dynamo must be relaunched to apply the language selection..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewMarkdownDirectoryTooltip">
            <summary>
              Looks up a localized string similar to Markdown documentation can be added to your package that will leverage the Documentation Browser to display author generated information on a per-node basis..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewNodeAutocomplete">
            <summary>
              Looks up a localized string similar to Node Autocomplete.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewNotificationCenter">
            <summary>
              Looks up a localized string similar to Notification Center.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewPackageDownloadDirectory">
            <summary>
              Looks up a localized string similar to New Package Download Path.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewPython">
            <summary>
              Looks up a localized string similar to Python.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewPythonEditorLable">
            <summary>
              Looks up a localized string similar to Python Editor.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewRequiresRelaunchOfDynamo">
            <summary>
              Looks up a localized string similar to Requires relaunch of Dynamo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewRunSettingsLabel">
            <summary>
              Looks up a localized string similar to Default Run Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewSavedChangesLabel">
            <summary>
              Looks up a localized string similar to All changes saved automatically.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewSavedChangesTooltip">
            <summary>
              Looks up a localized string similar to Last saved:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewSelectedPackagePathForDownload">
            <summary>
              Looks up a localized string similar to Selected package path for download.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewSettingIncludeTimestampExportPath">
            <summary>
              Looks up a localized string similar to Include Timestamp in Export Image Path.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewShowCodeBlockNodeLineNumber">
            <summary>
              Looks up a localized string similar to Show CodeBlockNode Line Numbers.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewShowPreviewBubbles">
            <summary>
              Looks up a localized string similar to Show Preview Bubbles.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewShowRunPreviewTooltip">
            <summary>
              Looks up a localized string similar to Switchable only when the current workspace is in Manual run mode..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewShowStaticSplashScreenTooltip">
            <summary>
              Looks up a localized string similar to Pauses the splash screen when loading is complete, enabling you to launch Dynamo manually, sign in to your Autodesk account, or import settings..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewShowWhitespaceInPythonEditor">
            <summary>
              Looks up a localized string similar to Show Whitespace in Python Editor.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewTitle">
            <summary>
              Looks up a localized string similar to Preferences.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewTrustWarningHeader">
            <summary>
              Looks up a localized string similar to Trust warning.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewTrustWarningLabel">
            <summary>
              Looks up a localized string similar to Disable trust warning.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewTrustWarningTooltipText">
            <summary>
              Looks up a localized string similar to This applies to Dynamo, Dynamo Player and Generative Design Player. We recommend keeping this toggle off to avoid inadvertently opening a file from an untrusted location..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewVisualSettingsDisplaySettings">
            <summary>
              Looks up a localized string similar to Display Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewVisualSettingsGroupStyleInput">
            <summary>
              Looks up a localized string similar to Style Name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewVisualSettingsGroupStyles">
            <summary>
              Looks up a localized string similar to Group Styles.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewVisualSettingShowEdges">
            <summary>
              Looks up a localized string similar to Show Edges.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewVisualSettingsIsolateSelectedGeo">
            <summary>
              Looks up a localized string similar to Isolate Selected Geometry.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewVisualSettingsRenderPrecision">
            <summary>
              Looks up a localized string similar to Render Precision.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewVisualSettingsTab">
            <summary>
              Looks up a localized string similar to Visual Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewZoomScaling0Percent">
            <summary>
              Looks up a localized string similar to 0%.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewZoomScaling100Percent">
            <summary>
              Looks up a localized string similar to 100%.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewZoomScaling25Percent">
            <summary>
              Looks up a localized string similar to 25%.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewZoomScaling300Percent">
            <summary>
              Looks up a localized string similar to 300%.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesViewZoomScalingSettings">
            <summary>
              Looks up a localized string similar to Zoom Scaling.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesWindowHardwareAccelerationTooltip">
            <summary>
              Looks up a localized string similar to When toggled on, Dynamo benefits from hardware acceleration to improve smoothness of graphics and overall performance, as work is offloaded from central processing units (CPUs) to graphics processing units (GPUs)..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesWindowIsolateSelectedGeoTooltip">
            <summary>
              Looks up a localized string similar to When toggled on, selecting a geometry node will highlight the geometry it produces in the background 3D preview..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesWindowShowCodeBlockNodeLineNumberTooltip">
            <summary>
              Looks up a localized string similar to When toggled on, line numbers will be displayed in the Code Block node editor..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesWindowShowEdgesTooltip">
            <summary>
              Looks up a localized string similar to When toggled on, more detailed edges will be displayed for geometry from topology subtypes..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreferencesWindowShowPreviewBubblesTooltip">
            <summary>
              Looks up a localized string similar to When toggled on, a preview of the node’s output will be displayed when hovering over the bottom of a node..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PrePackagePublishMessage">
            <summary>
              Looks up a localized string similar to Your package will be scanned for viruses, and will be available for download once it successfully passes the scan..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PrePackagePublishTitle">
            <summary>
              Looks up a localized string similar to Package Upload Scan.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetOverwrite">
            <summary>
              Looks up a localized string similar to A preset by this name already exists, do you wish to overwrite?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetPromptDescriptionTooltip">
            <summary>
              Looks up a localized string similar to A description of the preset state..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetPromptNameTooltip">
            <summary>
              Looks up a localized string similar to A unique name for the preset..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetsWindowDescription">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetsWindowDescriptionHint">
            <summary>
              Looks up a localized string similar to Enter a description for this preset..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetsWindowName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetsWindowTitle">
            <summary>
              Looks up a localized string similar to Preset State Properties.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetTextRemaining">
            <summary>
              Looks up a localized string similar to Characters Remaining.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PresetWarningMessage">
            <summary>
              Looks up a localized string similar to No input nodes selected. Select at least one input node to create a preset..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreviewListLabel">
            <summary>
              Looks up a localized string similar to List.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PreviewText">
            <summary>
              Looks up a localized string similar to  This Feature is in Preview! .
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.psDynamoLine">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.psDynamoMesh">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.psDynamoPoint">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackage">
            <summary>
              Looks up a localized string similar to Publish Online.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageDialogCaption">
            <summary>
              Looks up a localized string similar to Published Successfully.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageDocTooltipText">
            <summary>
              Looks up a localized string similar to Learn More about publishing a package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageExternalPackageDependencies">
            <summary>
              Looks up a localized string similar to External Package Dependencies.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageGroupWatermark">
            <summary>
              Looks up a localized string similar to Group.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageKeywordsWatermark">
            <summary>
              Looks up a localized string similar to Keywords.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageLocally">
            <summary>
              Looks up a localized string similar to Publish Locally.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageMessage">
             <summary>
               Looks up a localized string similar to Package published successfully. 
            Want to publish a different package?.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageMoreInfoFile">
            <summary>
              Looks up a localized string similar to DynamoCoreWpf;PublishPackageDocumentation.html.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackagePackageContent">
            <summary>
              Looks up a localized string similar to Package Contents.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageSelectNodeLibraries">
            <summary>
              Looks up a localized string similar to Select Node Libraries.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageVersionBuildWatermark">
            <summary>
              Looks up a localized string similar to 1.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageVersionMajorWatermark">
            <summary>
              Looks up a localized string similar to 0.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageVersionMinorWatermark">
            <summary>
              Looks up a localized string similar to 0.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewAddDirectoryButton">
            <summary>
              Looks up a localized string similar to Add Directory.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewAddDirectoryButtonTooltip">
            <summary>
              Looks up a localized string similar to Add Directory And Its Files To Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewAddFileButton">
            <summary>
              Looks up a localized string similar to Add Files.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewAddFileButtonTooltip">
            <summary>
              Looks up a localized string similar to Add File To Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewContextMenuIsNodeLibrary">
            <summary>
              Looks up a localized string similar to Is Node Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewCopyrightHolder">
            <summary>
              Looks up a localized string similar to Copyright Holder (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewCopyrightHolderSubLabel">
            <summary>
              Looks up a localized string similar to If blank, default is your username.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewCopyrightHolderWatermark">
            <summary>
              Looks up a localized string similar to Author name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewCopyrightYear">
            <summary>
              Looks up a localized string similar to Copyright Year (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewCopyrightYearSubLabel">
            <summary>
              Looks up a localized string similar to If blank, default is publishing year.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewCopyrightYearWatermark">
            <summary>
              Looks up a localized string similar to Publishing year.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewFilePath">
            <summary>
              Looks up a localized string similar to File Path.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewLicense">
            <summary>
              Looks up a localized string similar to License (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewLicenseSubLabel">
            <summary>
              Looks up a localized string similar to Applies to the latest package version. If blank, the package will be licensed under.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewLicenseWatermark">
            <summary>
              Looks up a localized string similar to License.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewMarkdownFilesDirectory">
            <summary>
              Looks up a localized string similar to Markdown Files Path (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewMarkdownFilesDirectoryToolTip">
            <summary>
              Looks up a localized string similar to An optional location for documenting your package in the markdown format..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewNodeLibrary">
            <summary>
              Looks up a localized string similar to Node Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageDependencies">
            <summary>
              Looks up a localized string similar to Dependencies.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageDescription">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageDescriptionTooltip">
            <summary>
              Looks up a localized string similar to A description that helps people understand what the package might be used for..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageGroup">
            <summary>
              Looks up a localized string similar to Group (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageGroupTooltip">
            <summary>
              Looks up a localized string similar to A group to help categorize this package.  Might be useful for a collection of packages related to a firm, school, etc..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageHostDependency">
            <summary>
              Looks up a localized string similar to Host (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageHostDependencyTooltip">
            <summary>
              Looks up a localized string similar to An indication of what applications outside of Dynamo your package depends on, such as Revit, Civil 3D or Photoshop. Users of your package will need to install these applications to fully utilize your package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageKeywords">
            <summary>
              Looks up a localized string similar to Keywords (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageKeywordsTooltip">
            <summary>
              Looks up a localized string similar to Keywords help find your package in the database.  Separate them by spaces..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageNameTooltip">
            <summary>
              Looks up a localized string similar to A unique name for the package..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageNameWatermark">
            <summary>
              Looks up a localized string similar to Package name.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageVersion">
            <summary>
              Looks up a localized string similar to Version (Major Minor Build).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPackageVersionTooltip">
            <summary>
              Looks up a localized string similar to A version name helps a submitter keep track of updates to the package.  A new version of a package will be REJECTED if this is not incremeneted..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPublish">
            <summary>
              Looks up a localized string similar to Publish a Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPublisherURLWatermark">
            <summary>
              Looks up a localized string similar to URL.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewPublisherWebSite">
            <summary>
              Looks up a localized string similar to Website Url (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewRemoveItemToolTip">
            <summary>
              Looks up a localized string similar to Removes this item from the package contents list..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewRepositoryUrl">
            <summary>
              Looks up a localized string similar to Repository Url (optional).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewResetMarkdownDirectoryButton">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewResetMarkdownDirectoryButtonToolTip">
            <summary>
              Looks up a localized string similar to Clears this package&apos;s Markdown directory..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PublishPackageViewTitle">
            <summary>
              Looks up a localized string similar to Publish a {0} Package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PythonTemplateAddPathTooltip">
            <summary>
              Looks up a localized string similar to Add a file path for Python Node Template.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.PythonZoomScaleTooltipText">
            <summary>
              Looks up a localized string similar to Drag to adjust Python Editor zoom scale between 25% and 300%. You can also adjust this in Python Editor by pressing &quot;Ctrl&quot; and scrolling the mouse wheel..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.QueryMember">
            <summary>
              Looks up a localized string similar to Query.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RecentFileNumberInfo">
            <summary>
              Looks up a localized string similar to Reducing this number will discard all recent files beyond your chosen number..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RecommendedNodes">
            <summary>
              Looks up a localized string similar to Recommended Nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RemovePythonPortWarningMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Remove port?.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RenamePortPopupMenuItem">
            <summary>
              Looks up a localized string similar to Edit Port Properties.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RenderingMemoryOutageDescription">
            <summary>
              Looks up a localized string similar to Please check if you intended to render this amount of geometry, and consider turning off the preview of other nodes within your graph, lowering the amount of Geometry you wish to render, or turning down the render precision..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RenderingMemoryOutageSummary">
            <summary>
              Looks up a localized string similar to Dynamo has run out of memory trying to render your geometry. The geometry preview has been disabled..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RerunButton">
            <summary>
              Looks up a localized string similar to Apply Changes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RerunButtonToolTip">
            <summary>
              Looks up a localized string similar to Rerun the graph..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ResetCPythonButtonText">
            <summary>
              Looks up a localized string similar to Reset CPython.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ResetCPythonButtonToolTip">
            <summary>
              Looks up a localized string similar to Resets CPython environment by reloading modules..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunBlockedMessage">
            <summary>
              Looks up a localized string similar to Run blocked..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunCompletedMessage">
            <summary>
              Looks up a localized string similar to Run completed..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunCompletedWithErrorsMessage">
            <summary>
              Looks up a localized string similar to Run completed with errors..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunCompletedWithScaleChangeAndErrorsMessage">
            <summary>
              Looks up a localized string similar to Run completed with errors on setting new working range..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunCompletedWithScaleChangeAndWarningsMessage">
            <summary>
              Looks up a localized string similar to Run completed with warnings on setting new working range..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunCompletedWithScaleChangeMessage">
            <summary>
              Looks up a localized string similar to Run completed with new working range..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunCompletedWithWarningsDismissedMessage">
            <summary>
              Looks up a localized string similar to Run completed with dismissed warnings..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunCompletedWithWarningsMessage">
            <summary>
              Looks up a localized string similar to Run completed with warnings..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunReady">
            <summary>
              Looks up a localized string similar to Ready to run..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunStartedMessage">
            <summary>
              Looks up a localized string similar to Run started....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunStartedWithScaleChangeMessage">
            <summary>
              Looks up a localized string similar to Run started with new working range....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunTypeToolTipAutomatically">
            <summary>
              Looks up a localized string similar to Graph changes are executed in real time. Best suited for smaller graphs, known graphs, and Dynamo Sandbox..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunTypeToolTipManually">
            <summary>
              Looks up a localized string similar to Graph changes are executed when you click Run. Use this mode when working in large graphs, unfamiliar graphs, or host applications..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunTypeToolTipPeriodicallyDisabled">
            <summary>
              Looks up a localized string similar to Periodic running is disabled when there are no nodes in your graph that support it..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.RunTypeToolTipPeriodicallyEnabled">
            <summary>
              Looks up a localized string similar to Graph changes are executed at a specified interval. Only available when the graph contains specific nodes, such as DateTime.Now or WebRequest..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Save">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SaveModelToSTLDialogTitle">
            <summary>
              Looks up a localized string similar to Save your model to STL..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SaveWorkbenToImageDialogTitle">
            <summary>
              Looks up a localized string similar to Save your Workbench to an Image.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ScalingExtraLargeButton">
            <summary>
              Looks up a localized string similar to Extra large.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ScalingLargeButton">
            <summary>
              Looks up a localized string similar to Large.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ScalingMediumButton">
            <summary>
              Looks up a localized string similar to Medium.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ScalingSmallButton">
            <summary>
              Looks up a localized string similar to Small.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ScreenShotFrom3DParameter">
            <summary>
              Looks up a localized string similar to screenshot_3D.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ScreenShotFrom3DShortcutParameter">
            <summary>
              Looks up a localized string similar to screenshot_3D_shortcut.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ScriptTagsRemovalWarning">
            <summary>
              Looks up a localized string similar to Script tags detected in the help document have been removed..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SearchViewTopResult">
            <summary>
              Looks up a localized string similar to Top Result.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SecurityPathAddPathButtonName">
            <summary>
              Looks up a localized string similar to Add Path.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SecurityWarningExpanderName">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SelectAllTitle">
            <summary>
              Looks up a localized string similar to Select All.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SelectionErrorMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Selection Error.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SelectNodeButtonChange">
            <summary>
              Looks up a localized string similar to Change.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SelectNodeButtonSelect">
            <summary>
              Looks up a localized string similar to Select.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ShortcutExportAsImageMainMenu">
            <summary>
              Looks up a localized string similar to Export as Image.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ShortcutExportBackground3DPreview">
            <summary>
              Looks up a localized string similar to Background 3D Preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ShortcutExportWorkspace">
            <summary>
              Looks up a localized string similar to Workspace.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ShowClassicNodeLibrary">
            <summary>
              Looks up a localized string similar to Show Classic Node Library.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ShowHideLibraryIconTooltip">
            <summary>
              Looks up a localized string similar to Show/hide.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ShowRunPreviewDisableToolTip">
            <summary>
              Looks up a localized string similar to Preview the execution state of your graph. Nodes that are scheduled for execution will highlight in the graph.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ShowRunPreviewEnableToolTip">
            <summary>
              Looks up a localized string similar to Execution preview is not available when running automatically.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ShowWiresPopupMenuItem">
            <summary>
              Looks up a localized string similar to Show Wires.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SideBarPanelViewTitle">
            <summary>
              Looks up a localized string similar to Sidebar.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SignInButtonContentToolTip">
            <summary>
              Looks up a localized string similar to Sign in to access online services that integrate with your desktop software..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SignInButtonText">
            <summary>
              Looks up a localized string similar to Sign In.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SigningInButtonText">
            <summary>
              Looks up a localized string similar to Signing In.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SolutionToFolderNotWritatbleError">
            <summary>
              Looks up a localized string similar to Please update the permissions or go to Preferences &gt;Node and Package Paths...&apos; to change your default directory..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenImportSettings">
            <summary>
              Looks up a localized string similar to Import Settings.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenImportSettingsFailDescription">
            <summary>
              Looks up a localized string similar to Something went wrong when importing your custom setting file. Please try again or proceed with default settings..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenLaunchingDynamo">
            <summary>
              Looks up a localized string similar to Launching Dynamo View....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenLaunchTitle">
            <summary>
              Looks up a localized string similar to Launch Dynamo.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenLoadingTimeLabel">
            <summary>
              Looks up a localized string similar to Loading time.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenShowScreenAgainLabel">
            <summary>
              Looks up a localized string similar to Don&apos;t show this again.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenSignIn">
            <summary>
              Looks up a localized string similar to Sign In.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenSigningIn">
            <summary>
              Looks up a localized string similar to Signing In.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenSignOut">
            <summary>
              Looks up a localized string similar to Sign Out.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenTotalLoadingTimeLabel">
            <summary>
              Looks up a localized string similar to Total loading time:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenViewExtensions">
            <summary>
              Looks up a localized string similar to Loading View Extensions....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.SplashScreenWelcomeToDynamo">
            <summary>
              Looks up a localized string similar to Welcome to Dynamo!.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageAdvancedTutorials">
            <summary>
              Looks up a localized string similar to Advanced Tutorials.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageAsk">
            <summary>
              Looks up a localized string similar to ASK.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageBackupLocation">
            <summary>
              Looks up a localized string similar to Backup location.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageBackupNoCrash">
            <summary>
              Looks up a localized string similar to BACKUP.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageBackupOnCrash">
            <summary>
              Looks up a localized string similar to RECOVER FROM BACKUP.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageCode">
            <summary>
              Looks up a localized string similar to CODE.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageDiscussionForum">
            <summary>
              Looks up a localized string similar to Discussion forum.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageDynamoDictionary">
            <summary>
              Looks up a localized string similar to Dynamo Dictionary.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageDynamoPrimer">
            <summary>
              Looks up a localized string similar to Dynamo Primer.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageFiles">
            <summary>
              Looks up a localized string similar to FILES.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageGithubRepository">
            <summary>
              Looks up a localized string similar to Github repository.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageMoreSamples">
            <summary>
              Looks up a localized string similar to More Samples.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageNewCustomNode">
            <summary>
              Looks up a localized string similar to Custom Node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageNewFile">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageOpenFile">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageRecent">
            <summary>
              Looks up a localized string similar to RECENT.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageReference">
            <summary>
              Looks up a localized string similar to REFERENCE.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageSamples">
            <summary>
              Looks up a localized string similar to SAMPLES.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageSendIssues">
            <summary>
              Looks up a localized string similar to Send issues.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageShowSamples">
            <summary>
              Looks up a localized string similar to Show Samples In Folder.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageVideoTutorials">
            <summary>
              Looks up a localized string similar to Video Tutorials.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageVisitWebsite">
            <summary>
              Looks up a localized string similar to {0} website.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartPageWhatsNew">
            <summary>
              Looks up a localized string similar to Getting Started.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StartTourButtonText">
            <summary>
              Looks up a localized string similar to Start Tour.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.StringInputNodeEditMenu">
            <summary>
              Looks up a localized string similar to Edit....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TabFileNameReadOnlyPrefix">
            <summary>
              Looks up a localized string similar to [Read-Only] .
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TermsOfUseAcceptButton">
            <summary>
              Looks up a localized string similar to I Accept.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TermsOfUseDeclineButton">
            <summary>
              Looks up a localized string similar to I Decline.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TermsOfUseViewTitle">
            <summary>
              Looks up a localized string similar to Package Manager Terms of Use.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TitlePackageTargetOtherHost">
            <summary>
              Looks up a localized string similar to Package Host Error.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TooltipCurrentIndex">
            <summary>
              Looks up a localized string similar to {0} of {1}.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TourLabelProgressText">
            <summary>
              Looks up a localized string similar to of.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TrustedLocationNotAccessible">
             <summary>
               Looks up a localized string similar to A problem occurred when trying to access the location. Dynamo is unable to obtain read/write access to
            {0}.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TrustedPathsExpanderName">
            <summary>
              Looks up a localized string similar to Trusted File Locations.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TrustLocationAddedNotification">
             <summary>
               Looks up a localized string similar to You have trusted file location:
            {0}.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.TrustLocationSkippedNotification">
            <summary>
              Looks up a localized string similar to File location was not added to trusted locations..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnableToAccessPackageDirectory">
            <summary>
              Looks up a localized string similar to Unable To Access Package Directory.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnableToAccessTrustedDirectory">
            <summary>
              Looks up a localized string similar to Unable To Access Directory.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UndeprecatingPackageMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Removing Package Deprecation.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UngroupParentGroupWarning">
            <summary>
              Looks up a localized string similar to Dynamo cannot ungroup when there is no parent group..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UninstallLoadedPackage">
            <summary>
              Looks up a localized string similar to Uninstall loaded package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UninstallLoadedPackages">
            <summary>
              Looks up a localized string similar to Uninstall loaded packages.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitAcres">
            <summary>
              Looks up a localized string similar to Acres.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitArea">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitCentimeters">
            <summary>
              Looks up a localized string similar to Centimeters.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitCubicCentimeter">
            <summary>
              Looks up a localized string similar to CubicCentimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitCubicFoot">
            <summary>
              Looks up a localized string similar to CubicFoot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitCubicInches">
            <summary>
              Looks up a localized string similar to CubicInches.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitCubicMeters">
            <summary>
              Looks up a localized string similar to CubicMeters.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitCubicMillimeter">
            <summary>
              Looks up a localized string similar to CubicMillimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitCubicYards">
            <summary>
              Looks up a localized string similar to CubicYards.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitDecimeters">
            <summary>
              Looks up a localized string similar to Decimeters.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitFeet">
            <summary>
              Looks up a localized string similar to Feet.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitHectares">
            <summary>
              Looks up a localized string similar to Hectares.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitInches">
            <summary>
              Looks up a localized string similar to Inches.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitLength">
            <summary>
              Looks up a localized string similar to Length.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitLitres">
            <summary>
              Looks up a localized string similar to Litres.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitMeters">
            <summary>
              Looks up a localized string similar to Meters.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitMillimeters">
            <summary>
              Looks up a localized string similar to Millimeters.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Units">
            <summary>
              Looks up a localized string similar to Units:.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitSquareCentimeter">
            <summary>
              Looks up a localized string similar to SquareCentimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitSquareFoot">
            <summary>
              Looks up a localized string similar to SquareFoot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitSquareInch">
            <summary>
              Looks up a localized string similar to SquareInch.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitSquareMeter">
            <summary>
              Looks up a localized string similar to SquareMeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitSquareMillimeter">
            <summary>
              Looks up a localized string similar to SquareMillimeter.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitUSGallons">
            <summary>
              Looks up a localized string similar to USGallons.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnitVolume">
            <summary>
              Looks up a localized string similar to Volume.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnknowDateFormat">
            <summary>
              Looks up a localized string similar to Unknown date format.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnloadFailureMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Unload Failure.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnpinNodeTooltip">
            <summary>
              Looks up a localized string similar to Unpin this note from the node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UnsavedChangesMessageBoxTitle">
            <summary>
              Looks up a localized string similar to Unsaved changes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UpdateMessage">
             <summary>
               Looks up a localized string similar to An update is available for Dynamo.
            Installing the latest update requires Dynamo and any host applications to close.
            Do you want to install the latest Dynamo update?.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UsageReportPromptDialogTitle">
            <summary>
              Looks up a localized string similar to Agreement to Collect Usability Data.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UseLevelKeepListStructureHint">
            <summary>
              Looks up a localized string similar to Keep 1 input list&apos;s nesting.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UseLevelKeepListStructurePopupMenuItem">
            <summary>
              Looks up a localized string similar to Keep list structure.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.UseLevelPopupMenuItem">
            <summary>
              Looks up a localized string similar to Use Levels.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.VersionValueGreaterThan0">
            <summary>
              Looks up a localized string similar to At least one of your version values must be greater than 0..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.vsDynamoMesh">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.vsDynamoPointLine">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Watch3DViewContextMenuPan">
            <summary>
              Looks up a localized string similar to _Pan.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Watch3DViewContextMenuRotate">
            <summary>
              Looks up a localized string similar to _Rotate.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Watch3DViewContextMenuSwitchView">
            <summary>
              Looks up a localized string similar to Switch to Node _View.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.Watch3DViewContextMenuZoomToFit">
            <summary>
              Looks up a localized string similar to _Zoom to Fit.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.WatchNodeRawDataMenu">
            <summary>
              Looks up a localized string similar to Show Raw Data.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.WebView2RequiredMessage">
            <summary>
              Looks up a localized string similar to Dynamo requires WebView2 Evergreen Runtime, which is not installed on your computer. Please use the link below to download the Evergreen Standalone Installer and install the program. Then relaunch Dynamo. \n\n#WebView2 Runtime Installer=https://developer.microsoft.com/en-us/microsoft-edge/webview2/#download-sectionedge/webview2/#download-section.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.WebView2RequiredTitle">
            <summary>
              Looks up a localized string similar to WebView2 Required.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.WorkspaceTabNotSavedYet">
            <summary>
              Looks up a localized string similar to You haven&apos;t saved this file yet..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.WorkspaceTabSavingBrandNewFile">
            <summary>
              Looks up a localized string similar to This is a brand new file..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.WorkspaceTabSavingNecessary">
            <summary>
              Looks up a localized string similar to You need to save updates to this file..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.WorkspaceTabSavingUnnecessary">
            <summary>
              Looks up a localized string similar to No need to save!.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.WorkspaceTabTooltipHeaderUnsaved">
            <summary>
              Looks up a localized string similar to Unsaved.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ZeroTouchTypeShortString">
            <summary>
              Looks up a localized string similar to DLL.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.Resources.ZoomLevel">
            <summary>
              Looks up a localized string similar to 0.4.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.CustomRichTextBox">
            <summary>
            This class represent a RichTextBox that will be used in Popups to show hyperlinks, texts, images, bullet points, gifs and other media items.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.CustomRichTextBox.CustomText">
            <summary>
            This Custom property is used for registing the dependency property
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.CustomRichTextBox.GetCustomDocument(System.String)">
            <summary>
            This is the main method of the CustomRichTextBox and is parsing the text provided in order to show hyperlinks, images, bullet points, words in bold
            </summary>
            <param name="Text">Text using a specific format for showing hyperlinks, images, bullet points, words in bold</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.CutOffArea">
            <summary>
            This class will contain information about the area that will be cut off from the background Overlay
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.CutOffArea.WidthBoxDelta">
            <summary>
            Since the box that cuts the elements has its size fixed, this variable applies a value to fix its Width
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.CutOffArea.HeightBoxDelta">
            <summary>
            Since the box that cuts the elements has its size fixed, this variable applies a value to fix its Height
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.CutOffArea.XPosOffset">
            <summary>
            This property will move the CutOff area horizontally over the X axis
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.CutOffArea.YPosOffset">
            <summary>
            This property will move the CutOff area vertically over the Y axis
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.CutOffArea.WindowElementNameString">
            <summary>
            In the case the cutoff area is not the same than HostControlInfo.HostUIElementString the this property needs to be populated
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.CutOffArea.NodeId">
            <summary>
            In cases when we need to put the CutOff area over a node in the Workspace this property will be used
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.CutOffArea.CutOffRect">
            <summary>
            Rect used to cut a rectangle on the guide background 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.ExitGuide.Height">
            <summary>
            Represents the Height of Exit Guide modal
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.ExitGuide.Width">
            <summary>
            Represents the Width of Exit Guide modal
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.ExitGuide.Title">
            <summary>
            Represents the key to the resources related to the Title of Exit Guide modal
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.ExitGuide.FormattedText">
            <summary>
            Represents the formatted text key to the resources related to the Title of Exit Guide modal
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.Guide">
            <summary>
            This class represent just one guided tour that will be shown (just one guide can be shown at one time)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.GuideSteps">
            <summary>
            This list will contain all the steps per guide read from a json file
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.Name">
            <summary>
            This property represent the name of the Guide, e.g. "Get Started", "Packages"
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.SequenceOrder">
            <summary>
            This property represents the workflow of the guides
            I.E: 
            1 - User interface guide
            2 - Onboarding guide
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.GuideNameResource">
            <summary>
            This property has the resource key string for the guide
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.CurrentStep">
            <summary>
            This variable will contain the current step according to the steps flow in the Guide
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.TotalSteps">
            <summary>
            This variable represents the total number of steps that the guide has (every guide can have a different number of steps).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.GuideBackgroundElement">
            <summary>
            This variable represents the Guide Background Element to manipulate it's hole rect
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.LibraryView">
            <summary>
            This variable represents the element of the LibraryView 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Guide.MainWindow">
            <summary>
            This variable represents the element of the MainWindow 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.Finalize">
            <summary>
             Guide class finalizer, it will unsubscribe all the events once the guide is destroyed
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.UnsubscribeFlowEvents">
            <summary>
            Remove all the subscriptions to events
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlowEvents_UpdateLibraryInteractions">
            <summary>
            This method handler will be executed when a package is installed in the LibraryView so the Popup over the library will be updated
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.SubscribeFlowEvents">
            <summary>
            This method will subscribe the handlers for when the Back and Next button are pressed (this subscription happens when the Guide is initialized)
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlowEvents_UpdatePopupLocation">
            <summary>
            This event handler will be executed when the GuideFlowEvents.UpdatePopupLocation event is raised
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.Play">
            <summary>
            This method will be called by the Guide client and this will show the first Step popup in the list
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.Initialize">
            <summary>
            This method will be called by the Guide client and basically subscribe the handlers for the events OnGuidedTourNext and OnGuidedTourPrev
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.SetLibraryViewVisible(System.Boolean)">
            <summary>
            Sets library to visible or hidden 
            </summary>
            <param name="visible">This parameter will contain a boolean to define if the library should be visible or not</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.ClearGuide">
            <summary>
            This method unsubcribe from the corresponding event the Prev and Next handlers, this method is called when the OnGuidedTourFinish event is raised 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.ClearSteps">
            <summary>
            This method will remove/undo all the UI Automations previously done when showing each Step
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.ContinueStep(System.Int32)">
            <summary>
            This method will be executed for continuing to guide tour
            </summary>
            <param name="CurrentStepSequence">This parameter will contain the "sequence" of the current Step so we can continue the same step</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.NextStep(System.Int32)">
            <summary>
            This method will be executed for moving to the next step, basically searches the next step in the list, shows it and hides the current one.
            </summary>
            <param name="CurrentStepSequence">This parameter will contain the "sequence" of the current Step so we can get the next Step from the list</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.PreviousStep(System.Int32)">
            <summary>
            This method will be executed for moving to the previous step, basically searches the previous step in the list, shows it and hides the current one.
            </summary>
            <param name="CurrentStepSequence">This parameter is the "sequence" of the current Step so we can get the previous Step from the list</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.CalculateStep(Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow,System.Int32)">
            <summary>
            This method will be executed for moving to the next, previous or current step, basically searches the step in the list.
            </summary>
            <param name="stepFlow">The direction flow of the Guide, can be BACKWARD, FORWARD or CURRENT</param>
            <param name="CurrentStepSequence">This parameter is the current Step sequence</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlowEvents_GuidedTourPrevStep">
            <summary>
            This event method will be executed when the user press the Back button in the tooltip/popup
            </summary>
            <param name="args">This parameter will contain the "sequence" of the current Step so we can get the previous Step from the list</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlowEvents_GuidedTourNextStep">
            <summary>
            This event method will be executed then the user press the Next button in the tooltip/popup
            </summary>
            <param name="args">This parameter will contain the "sequence" of the current Step so we can get the next Step from the list</param>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.GuideFlowEvents">
            <summary>
            This static class will be used to raise events when the tooltip, welcome and survey popup buttons are clicked.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.GuideFlowEvents.IsAnyGuideActive">
            <summary>
            This property will return if the a guide is being executed or not. 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.GuideFlowEvents.IsGuideExited">
            <summary>
            This property will return a value that says if the tour has been completely closed or not
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.GuidedTourStateEventArgs">
            <summary>
            This event class will be used to hold the Guide.Name (Tour) parameter for the OnGuidedTourStart and OnGuidedTourFinish events
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.GuidesManager">
            <summary>
            This class will manage the Guides read from the json file
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.UI.GuidedTour.GuidesManager.currentGuide">
            <summary>
            currentGuide will contain the Guide being played
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.UI.GuidedTour.GuidesManager.Guides">
            <summary>
            This property contains the list of Guides read from the json file
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.#ctor(System.Windows.UIElement,Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            GuidesManager Constructor 
            </summary>
            <param name="root">root item of the main Dynamo Window </param>
            <param name="dynViewModel"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.Initialize">
            <summary>
            Initialization that will read all the guides/steps from and json file and subscribe handlers for the Start and Finish events
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.CreateBackground">
            <summary>
            Creates the background for the GuidedTour
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.UpdateGuideStepsLocation">
            <summary>
            This method will be used when the PlacementTarget element of the Popup was moved or resize so we need to update each Step and the ExitTour popup
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.LaunchTour(System.String)">
            <summary>
            This method will launch the tour when the user clicks in the Help->Interactive Guides->Guide
            </summary>
            <param name="tourName"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.TourStarted(Dynamo.Wpf.UI.GuidedTour.GuidedTourStateEventArgs)">
            <summary>
            This method will be executed when the OnGuidedTourStart event is raised
            </summary>
            <param name="args">This parameter will contain the GuideName as a string</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.TourFinished(Dynamo.Wpf.UI.GuidedTour.GuidedTourStateEventArgs)">
            <summary>
            This method will be executed when the OnGuidedTourFinish event is raised
            </summary>
            <param name="args">This parameter will contain the GuideName as a string</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.ExitTour">
            <summary>
            This method exits from tour 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.CreateExitModal(Dynamo.Wpf.UI.GuidedTour.ExitGuide)">
            <summary>
            Creates the exit modal when close button is pressed
            </summary>
            <param name="exitGuide">This parameter contains the properties to build exit guide modal</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.ReadGuides(System.String)">
            <summary>
            This method will read all the guides information from a json file located in the same directory than the DynamoSandbox.exe is located.
            </summary>
            <param name="jsonFile">Full path of the json file location containing information about the Guides and Steps</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.CreateGuideSteps(System.String)">
            <summary>
            This method will create all the Guide and add them to the Guides List based in the deserialized info gotten from the json file passed as parameter
            </summary>
            <param name="jsonFile">Full path of the json file location containing information about the Guides and Steps</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.CreateHostControl(Dynamo.Wpf.UI.GuidedTour.HostControlInfo)">
            <summary>
            This method will return a new HostControlInfo object populated with the information passed as parameter
            Basically this method store the information coming from Step and search the UIElement in the main WPF VisualTree
            </summary>
            <param name="jsonStepInfo">Step that contains all the info deserialized from the Json file</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.CreateStep(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.HostControlInfo,System.Int32)">
            <summary>
            Creates a new Step with the information passed as parameter (the only extra-information calculated is the TotalTooltips, the Text for Title and Content and other properties like the Suvey.RatingTextTitle
            </summary>
            <param name="jsonStepInfo">Step that contains all the info deserialized from the Json file</param>
            <param name="hostControlInfo">Information of the host read previously</param>
            <param name="totalTooltips">Total number of tooltips, calculated once we deserialized all the steps from json</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.CreateRealTimeInfoWindow(System.String,System.Boolean)">
            <summary>
            Display a notification to display on top right corner of canvas
            and display message passed as param
            </summary>
            <param name="content">The target content to display.</param>
            <param name="stayOpen">boolean indicates if the popup will stay open until user dismiss it.</param>
            TODO: Make this API out of guide manager to a more generic place
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesManager.CloseRealTimeInfoWindow">
            <summary>
            Closes the exitTourPopup if exist and it's open
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.GuidesManager.ExitTourPopupIsVisible">
            <summary>
            Returns if the ExitTourPopup (Toast Notification) is open or not.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods">
            <summary>
            This static class will be used for adding static methods that will be executed for the Json PreValidation section (or other validations).
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ExecuteTermsOfServiceFlow(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will be executed when passing from Step 2 to Step 3 in the Packages guide, so it will show the TermsOfUse Window in case it was not accepted yet
            </summary>
            <param name="stepInfo"></param>
            <param name="uiAutomationData"></param>
            <param name="enableFunction"></param>
            <param name="currentFlow"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ExecuteClosePackagesSearch(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will be executed when packages search window is opened, so it can identify the close button of the window
            </summary>
            <param name="stepInfo"></param>
            <param name="uiAutomationData"></param>
            <param name="enableFunction"></param>
            <param name="currentFlow"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ExecuteInstallPackagesFlow(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will be executed when passing from Step 6 to Step 7 in the Packages guide, so it will subscribe the install button event
            </summary>
            <param name="stepInfo"></param>
            <param name="uiAutomationData"></param>
            <param name="enableFunction"></param>
            <param name="currentFlow"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ManageEventHandler(System.Object,System.String,System.String,System.Boolean)">
            <summary>
            This methos subscribes and unsubscribes an event by setting the method and the event dynamically
            </summary>
            <param name="element">The element to subscribe the method I.E: Button</param>
            <param name="eventname">The event name that will be subscribed I.E: Click</param>
            <param name="methodname">The method that will listen the event I.E: AcceptButton_Click
            The method need to have Access Modifier internal and return void 
            </param>
            <param name="addEvent">A flag that will check if it's to subscribe or unsubscribe</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.AcceptButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method will be executed when the Accept button is pressed in the TermsOfUseView Window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.DeclineButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method will be executed when the Decline button is pressed in the TermsOfUseView Window and creates the exit tour modal
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method will be executed when the close Button is clicked in the packages search window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ExecutePackageSearch(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will be used to open the PackageManagerSearchView and search for a specific Package
            </summary>
            <param name="stepInfo">Step information</param>
            <param name="uiAutomationData">Specific UI Automation step that is being executed</param>
            <param name="enableFunction">it says if the functionality should be enabled or disabled</param>
            <param name="currentFlow">The current flow of the Guide can be FORWARD or BACKWARD</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ClosePackageManager(Dynamo.PackageManager.UI.PackageManagerSearchView)">
            <summary>
            This method will find the PackageManagerSearch window and then close it
            </summary>
            <param name="packageManager"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.PackageManagerViewModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation)">
            <summary>
            This method is subscribed to the PropertyChanged event so we will be notified when the SearchState changed
            </summary>
            <param name="sender">PackageManagerSearchViewModel</param>
            <param name="e">PropertyChanged</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.SubscribeSearchForPackagesOption(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will subcribe the menu "Packages->Search for a Package" MenuItem to the Next event so when is pressed we will moved to the next Step
            </summary>
            <param name="stepInfo">Information about the Step</param>
            <param name="uiAutomationData">Information about UI Automation that is being executed</param>
            <param name="enableFunction">Variable used to know if we are executing the automation or undoing changes</param>
            <param name="currentFlow">Current Guide Flow</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.SubscribeNextButtonClickEvent(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will subscribe the Next button from the Step8 Popup for clicking the Package already installed (then it will be expanded).
            </summary>
            <param name="stepInfo">Information about the Step</param>
            <param name="uiAutomationData">Specific UI Automation step that is being executed</param>
            <param name="enableFunction">it says if the functionality should be enabled or disabled</param>
            <param name="currentFlow">The current flow of the Guide can be FORWARD or BACKWARD</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ExecuteAutomaticPackage_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This handler will be executed when clicking the next button in the Step 8 Popup so it will be expanding the package content in the LibraryView
            </summary>
            <param name="sender">Next Button</param>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.CollapseExpandPackage(Dynamo.Wpf.UI.GuidedTour.Step)">
            <summary>
            This method will call the collapseExpandPackage javascript method with reflection, so the package expander in LibraryView will be clicked
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.SearchForPackage_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When the "Search for a Package" MenuItem is clicked this method will be executed moving to the next Step
            </summary>
            <param name="sender">MenuItem</param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.SubscribeViewDetailsEvent(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will be used to subscribe a method to the Button.Click event of the ViewDetails button located in the PackageManagerSearch Window
            </summary>
            <param name="stepInfo">Information about the Step</param>
            <param name="uiAutomationData">Information about UI Automation that is being executed</param>
            <param name="enableFunction">Variable used to know if we are executing the automation or undoing changes</param>
            <param name="currentFlow">Current Guide Flow</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ViewDetails_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method will move the flow to the next Step when the ViewDetails button is clicked
            </summary>
            <param name="sender">The ViewDetails button in PackageManagerSearch Window</param>
            <param name="e">No Arguments will be provided</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ExecuteViewDetailsSideBar(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will be opening the SideBar Package Details (or closing it when enableFunction = false)
            </summary>
            <param name="stepInfo">Information about the Step</param>
            <param name="uiAutomationData">Information about UI Automation that is being executed</param>
            <param name="enableFunction">Variable used to know if we are executing the automation or undoing changes</param>
            <param name="currentFlow">Current Guide Flow</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.CalculateLibraryItemLocation(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will calculate the Popup location based in a item from the Library
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.LibraryScrollToBottom(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will call a js function that will scroll down until the bottom of the page
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.HighlightPort(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will highlight the input port of a node (NodeView)
            </summary>
            <param name="stepInfo">Information about the Step</param>
            <param name="uiAutomationData">Information about UI Automation that is being executed</param>
            <param name="enableFunction">Variable used to know if we are executing the automation or undoing changes</param>
            <param name="currentFlow">Current Guide Flow</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.ManagePortConnectionEvents(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will enable or disable the Next Popup Button and also subcribe to the PropertyChanged event so we will know if the Nodes are connected or not
            </summary>
            <param name="stepInfo">Information about the Step</param>
            <param name="uiAutomationData">Information about UI Automation that is being executed</param>
            <param name="enableFunction">Variable used to know if we are executing the automation or undoing changes</param>
            <param name="currentFlow">Current Guide Flow</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.CreateNode(Dynamo.Wpf.UI.GuidedTour.Step,Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will be executed when we are pressing back and it will remove the connection between nodes (if it exists)
            </summary>
            <param name="stepInfo"></param>
            <param name="uiAutomationData"></param>
            <param name="enableFunction"></param>
            <param name="currentFlow"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuidesValidationMethods.GetNotConnectedNode(System.Windows.Window,System.String)">
            <summary>
            Get the first not connected node of the type passed as parameter
            </summary>
            <param name="stepMainWindow">MainWindow that contains the node</param>
            <param name="nodeType">Type of the node to be found</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuideUtilities.FindChild(System.Windows.DependencyObject,System.String)">
            <summary>
            Static method that finds a UIElement child based in the child name of a given root item in the Visual Tree. 
            </summary>
            <param name="parent">Root element in which the search will start</param>
            <param name="childName">Name of child to be found in the VisualTree </param>
            <returns>The first parent item that matches the submitted type parameter. 
            If not matching item can be found, a null parent is being returned.</returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuideUtilities.FindChildInMenuItem(System.Windows.DependencyObject,System.String)">
            <summary>
            Find a Sub MenuItem based in childName passed as parameter
            </summary>
            <param name="parent">Main Window in which the child will be searched </param>
            <param name="childName">Name of the Sub Menu Item</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuideUtilities.FindChildInVisualTree(System.Windows.DependencyObject,System.String)">
            <summary>
            This method will Find a child element in the WPF VisualTree of a Window
            </summary>
            <param name="parent">This represents the Window in which the child will be searched</param>
            <param name="childName">Child UIElement Name</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuideUtilities.FindWindowOwned(System.String,System.Windows.Window)">
            <summary>
            Due that some Windows are opened dynamically, they are in the Owned Windows but not in the DynamoView VisualTree
            </summary>
            <param name="windowName">String name that represent the Window that will be search</param>
            <param name="mainWindow">The main Window, usually will be the DynamoView</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuideUtilities.FindNodeByID(System.Windows.UIElement,System.String)">
            <summary>
            This method will find a Node in the Workspace based in the Node ID provided
            </summary>
            <param name="mainWindow">Dynamo Window</param>
            <param name="nodeID">ID of the node to be found</param>
            <returns>The instance of the NodeView found</returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.GuideUtilities.CloseWindowOwned(System.String,System.Windows.Window)">
            <summary>
            This method will close a specific Window owned by another Window
            </summary>
            <param name="windowName">The name of the Window to be closed</param>
            <param name="mainWindow">MainWindow container of the owned Window</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.HighlightArea.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.HighlightArea.#ctor(Dynamo.Wpf.UI.GuidedTour.HighlightArea)">
            <summary>
            Copy Constructor
            </summary>
            <param name="copyInstance">Instance with the HighlightArea info</param>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.WidthBoxDelta">
            <summary>
            Since the box that highlights the elements has its size fixed, this variable applies a value to fix its Width
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.HeightBoxDelta">
            <summary>
            Since the box that highlights the elements has its size fixed, this variable applies a value to fix its Height
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.HighlightColor">
            <summary>
            This property will highlight the clickable area if its set to true
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.WindowElementName">
            <summary>
            This represent the UIElement of the VisualTree that will be highlighted (according to the json file)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.WindowName">
            <summary>
            This property will contain the Window name in case we need to highligh a control in a different Window than DynamoView
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.WindowElementNameString">
            <summary>
            This represent the UIElement as string of the VisualTree that will be highlighted (readed from the json file)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.UIElementTypeString">
            <summary>
            This property represent the UI Element Type that contains the UIElement (WindowElementName) due that in some cases is not the DynamoView (like the sub MenuItems)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.UIElementGridContainer">
            <summary>
            In case the UIElement to be highlighted is in a Grid, then this property will have the Grid name
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.HighlightRectWidth">
            <summary>
            This property represents the Rectangle.Width that will be used for the highlight rectangle feature
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.HighlightRectHeight">
            <summary>
            This property represents the Rectangle.Height that will be used for the highlight rectangle feature
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.HighlightRectCanvasTop">
            <summary>
            This property represents the Rectangle.CanvasTop that will be used for the highlight rectangle location
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HighlightArea.HighlightRectCanvasLeft">
            <summary>
            This property represents the Rectangle.CanvasLeft that will be used for the highlight rectangle location
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.HighlightArea.SetHighlighRectSize(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This method will be used in case we need to set all the Rectangle location properties in one time
            </summary>
            <param name="top"></param>
            <param name="left"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.HighlightArea.ClearHighlightRectangleSize">
            <summary>
            This method will be used for hiding the highlight rectangle
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.HostControlInfo">
            <summary>
            This class will contain info related to the popup location and the host control in which the popup will appear over
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.#ctor(Dynamo.Wpf.UI.GuidedTour.HostControlInfo,System.Windows.UIElement)">
            <summary>
            Copy Constructor
            </summary>
            <param name="copyInstance"></param>
            <param name="MainWindow"></param>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.Name">
            <summary>
            Host Name, this property will contain the name of the host control located in the TreeView
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.HostUIElement">
            <summary>
            This property will hold the UI Element over which the popup will be shown (it should be any item in the TreeView) 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.HostUIElementString">
            <summary>
            This variable will hold the name of the host (UIElement) in a string representation
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.PopupPlacement">
            <summary>
            This property will hold the placement location of the popup, for now we are just using Right, Left, Top and Bottom
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.VerticalPopupOffSet">
            <summary>
            Once the popup host control and placecement is set we can use this property for moving the popup location Vertically (by specifying an offset) 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.HorizontalPopupOffSet">
            <summary>
            Once the popup host control and placecement is set we can use this property for moving the popup location Horizontally (by specifying an offset) 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.HighlightRectArea">
            <summary>
            Property that represents the highlight rectangle that will be shown over the Overlay
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.CutOffRectArea">
            <summary>
            Property that represents the cut off section that will be removed from the Overlay
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.HtmlPage">
            <summary>
            The html page that is going to be rendered inside the popup
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.WindowName">
            <summary>
            This property will contain the WPF Window Name for the cases when the Popup need to be located in a different Window than DynamoView
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HostControlInfo.DynamicHostWindow">
            <summary>
            This property will decide if the Popup.PlacementTarget needs to be calculated again or not (probably after UI Automation a new Window was opened)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HtmlPage.Resources">
            <summary>
            A dictionary containing the key word to be replaced in page and the filename as values
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.HtmlPage.FileName">
            <summary>
            Filename of the HTML page
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.PreValidation">
            <summary>
            This class will store the information of the actions/methods that should be executed before showing a Popup
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.PreValidation.#ctor">
            <summary>
            Default parameterless constructor used when deserializing
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.PreValidation.#ctor(Dynamo.Wpf.UI.GuidedTour.PreValidation)">
            <summary>
            Copy constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.PreValidation.ReturnType">
            <summary>
            string that will contain the return data type
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.PreValidation.FuncName">
            <summary>
            string that will contain the function name that will be executed(the function might exist in the static class GuidesValidationMethods
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.PreValidation.ExpectedValue">
            <summary>
            string that will contain the the expected value after executing the function (FuncName) if the function result and this value match the popup will be shown
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.PreValidation.ControlType">
            <summary>
            string that will contain the Type of control or feature for example the if the Popup is open or not
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.Step">
            <summary>
            This abstract class include several properties that will be used for childs like Survey, Welcome, Tooltip, ExitTour ....
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.TotalTooltips">
            <summary>
            This static variable represents the total number of steps that the guide has.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.StepType">
            <summary>
            The step type will describe which type of window will be created after reading the json file, it can be  SURVEY, TOOLTIP, WELCOME, EXIT_TOUR
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.StepContent">
            <summary>
            The step content will contain the title and the popup content (included formatted text)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.StepExtraContent">
            <summary>
            There are some specific Steps that will contain extra content (like Survey.RatingTextTitle), then this list will store the information
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.Name">
            <summary>
            Step name, it just represent a step identifier
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.Width">
            <summary>
            When the Step Width property is not provided the default value will be 480
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.Height">
            <summary>
            When the Step Height property is not provide the default value will be 190
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.Sequence">
            <summary>
            Represent a sequencial numeric value for each step, when is a multiflow guide this value can be repeated
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.HostPopupInfo">
            <summary>
            This property contains the Host information like the host popup element or the popup position
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.UIAutomation">
            <summary>
            This property will hold a list of UI Automation actions (information) that will be executed when the Next or Back button are pressed
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.PreValidationInfo">
            <summary>
            This property will hold information about the methods/actions that should be executed before showing a Popup(Step)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.ShowLibrary">
            <summary>
            This property will show the library if It's set to true
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.ExitGuide">
            <summary>
            This propertu will hold information about the exit guide modal 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.TooltipPointerPoints">
            <summary>
            This will contains the 3 points needed for drawing the Tooltip pointer direction
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.ShadowTooltipDirection">
            <summary>
            This will contains the shadow direction in degrees that will be shown in the pointer
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.DynamoViewModelStep">
            <summary>
            This property holds the DynamoViewModel that will be used when executing PreValidation functions
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.PreValidationIsOpenFlag">
            <summary>
            This property is for the Visibility of each Popup in conditional flows, then it will decide if the this Step should be shown or not
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.StepGuideBackground">
            <summary>
            Guide Background that will be used by the Step to show or hide the highlight rectangle
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.MainWindow">
            <summary>
            Main Window (DynamoView) that will be used by the Step for finding Child items (MenuItems) and calculate UIElement coordinates
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.StepUIPopup">
            <summary>
            This will give access to the Popup instance so we can find UIElements on it.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.GuideManager">
            <summary>
            This property contains the object of the current GuideManager
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.TooltipPointerDirection">
            <summary>
            This property describe which will be the pointing direction of the tooltip (if is a Welcome or Survey popup then is not used)
            By default the tooltip pointer will be pointing to the left and will be located at the top
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Step.PointerVerticalOffset">
            <summary>
            A vertical offfset to the pointer of the popups 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.#ctor(Dynamo.Wpf.UI.GuidedTour.HostControlInfo,System.Double,System.Double)">
            <summary>
            Step constructor
            </summary>
            <param name="host">The host and popup information in which the popup will be shown</param>
            <param name="width">Popup Width</param>
            <param name="height">Popup Height</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.Show(Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            Show the tooltip in the DynamoUI, first execute UI Automation, then Prevalidation, then calculate target host and finally highlight an element
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.Hide(Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            Hide the tooltip in the DynamoUI, first undo highlighting an element, then undo UI Automation
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.UpdatePlacementTarget">
            <summary>
            This method will update the Target in case the UI Automation was executed and the Popup was waiting for a specific Window to be opened
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.SetCutOffSectionSize(System.Boolean)">
            <summary>
            This method will update the CutOff rectangle size everytime that the step change
            </summary>
            <param name="bVisible">It will say if the CutOff Area will be disabled or enabled</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.SetHighlightSection(System.Boolean)">
            <summary>
            This method will set the highlight rectangle color if there is any configured in the json file
            </summary>
            <param name="bVisible">It will say if the Highlight Area will be disabled or enabled</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.UpdateLocation">
            <summary>
            This method will update the Popup location by calling the private method UpdatePosition using reflection (just when the PlacementTarget is moved or resized).
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.UpdateLibraryPopupsLocation">
            <summary>
            Update the Location of Popups only when they are located over the Library (HostPopupInfo.WindowName = LibraryView)
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.UpdateLibraryInteractions">
            <summary>
            This method will update the interactions of the Popup with the Library like the highligthed items or the event subscriptions
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.UpdatePopupVerticalPlacement(System.Double)">
            <summary>
            This method will update the Popup vertical location
            </summary>
            <param name="verticalPosition"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.ExecuteUIAutomationStep(Dynamo.Wpf.UI.GuidedTour.StepUIAutomation,System.Boolean,Dynamo.Wpf.UI.GuidedTour.Guide.GuideFlow)">
            <summary>
            This method will execute an UIAutomation action over a specific UIElement
            </summary>
            <param name="uiAutomationData">UIAutomation info read from a json file</param>
            <param name="enableUIAutomation">Enable/Disable the automation action for a specific UIElement</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.ExecutePreValidation">
            <summary>
            This method will execute the PreValidation action/method for this Step.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.CalculateTargetHost">
            <summary>
            Calculate the Popup.PlacementTarget dynamically if is the case and highlight the sub MenuItem if the information was provided
            </summary>
            <param name="bVisible">When the Step is shown this variable will be false when is hidden(due to passing to the next Step) it will be false</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dynamo.Wpf.UI.GuidedTour.Step.HighlightWindowElement(System.Boolean)" -->
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.HighlightMenuItem(System.Windows.Controls.MenuItem,System.Boolean)">
            <summary>
            Shows the Highlight rectangle or hides it depending of the bVisible parameter
            </summary>
            <param name="highlighMenuItem"></param>
            <param name="bVisible">True for showing the Highlight rectangle otherwise is false</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.HighlightLibraryItem(System.Boolean)">
            <summary>
            This method will execute a js function for highlighting a item (<div></div>) in the WebBrowser instance located inside the LibraryView using reflection
            </summary>
            <param name="visible">enable or disable the highlight in a specific Library item</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.CreateRectangle(System.Windows.FrameworkElement,System.String)">
            <summary>
            This method will create a Rectangle with glow effect and animation
            </summary>
            <param name="targetElement">the element in which the rectangle will be animated (basically is for creating the Scope)</param>
            <param name="recColor">string representing the rectangle color</param>
            <returns>The Rectangle with the animation started</returns>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.SetPointerDirection(Dynamo.Wpf.UI.GuidedTour.Step.PointerDirection)">
            <summary>
            This method will be used to update the pointer direction if is needed
            </summary>
            <param name="direction"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Step.CreatePopup">
            <summary>
            This virtual method should be overriden by the childs and creates the Popup (SURVEY, TOOLTIP, WELCOME, EXIT_TOUR)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Content.Title">
            <summary>
            Title of the Popup shown at the top-center
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.Content.FormattedText">
            <summary>
            The content of the Popup using a specific format for showing text, hyperlinks,images, bullet points in a RichTextBox
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.ExtraContent">
            <summary>
            This class will be used in some specific cases in which the Popup needs extra information to be displayed in the UI
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation">
            <summary>
            This class will be used as a container for the UI Automation information read from the json file
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.UIAction">
            <summary>
            Represent all the actions that can be done when executing UI Automation
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.UIControlType">
            <summary>
            Represent all Control Types that can be used in UI Automation for executing actions like disable or open
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.Sequence">
            <summary>
            This Sequence will be unique for each automation step
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.ControlType">
            <summary>
            The Control type represent the WPF Control type that will be Automated, like MenuItem, Window, Dropdown
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.Name">
            <summary>
            This contain a string ID of the UI Automation 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.Action">
            <summary>
            This will represent the action that will be executed as part of the UI Automation
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.Parameters">
            <summary>
            The list of arguments sent to the function to be executed
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.UIElementAutomation">
            <summary>
            This will be the WPF UI Element in which the Action will be executed
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.UpdatePlacementTarget">
            <summary>
            This property will if that after executing the UI Automation action the Popup.PlacementTarget needs to be updated
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.ExecuteCleanUpForward">
            <summary>
            This property will decide if we should undo the UI Automation Steps when moving Forward in the Guide Flow
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.ExecuteCleanUpBackward">
            <summary>
            This property will decide if we should undo the UI Automation Steps when moving Backward in the Guide Flow
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.WindowName">
            <summary>
            This property will be used when we need to do UI Automation over an element that is not in the DynamoView (For example the Accept button in the TermsOfUseView)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.AutomaticHandlers">
            <summary>
            This is a list of events to be trigerred and methods subscribed to those events
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.JSFunctionName">
            <summary>
            The javascript function name (located in library.html) to be executed if is the case
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.JSParameters">
            <summary>
            The list of arguments sent to the javascript function
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.CheckPackagesListEnableNextStep">
            <summary>
            This flag checks if is necessary to enable next step button only if packages list is already loaded
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.ElementName">
            <summary>
            This string contains the element to execute the Automatic Function
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.StepUIAutomation.NodePosition">
            <summary>
            This property is the position of the node that will be placed
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.AutomaticHandlers.HandlerElement">
            <summary>
            Name of the element to get the event
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.AutomaticHandlers.HandlerElementEvent">
            <summary>
            Name of the event
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.GuidedTour.AutomaticHandlers.ExecuteMethod">
            <summary>
            Method to be subscribed 
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.Tooltip">
            <summary>
            The tooltip class represents the popup that will be shown over the Dynamo UI pointing to a specific control
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Tooltip.#ctor(Dynamo.Wpf.UI.GuidedTour.HostControlInfo,System.Double,System.Double,Dynamo.Wpf.UI.GuidedTour.Step.PointerDirection,System.Double)">
            <summary>
            The Tooltip constructor
            </summary>
            <param name="host">Host control (of the TreeView) in which the tooltip will be shown</param>
            <param name="width">Tooltip width</param>
            <param name="height">Tooltip height</param>
            <param name="direction">The pointer direction of the tooltip</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Tooltip.DrawPointerDirection(Dynamo.Wpf.UI.GuidedTour.Step.PointerDirection)">
            <summary>
            This method will create the X,Y points (3 sets) for drawing a triangle that represents the Tooltip pointer direction
            </summary>
            <param name="direction"></param>
        </member>
        <member name="M:Dynamo.Wpf.UI.GuidedTour.Tooltip.CreatePopup">
            <summary>
            Overriding the parent method for creating a popup
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.GuidedTour.Welcome">
            <summary>
            The Welcome class represents a Popup that will be shown over the Dynamo UI when a Guided Tour starts
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.MouseBehaviour">
            <summary>
            Class that handles passing mouse position to Connectors for placement of ConnectorPins.
            Stack overflow reference: https://stackoverflow.com/questions/30047415/how-do-i-get-mouse-positions-in-my-view-model
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.MouseBehaviour.MouseY">
            <summary>
            MouseY location
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.UI.MouseBehaviour.MouseX">
            <summary>
            MouseX location
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.UI.DraggedAdorner">
            <summary>
            Adorner to visualize dragged content
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.UI.DraggedAdorner.#ctor(System.Object,System.Windows.DataTemplate,System.Windows.UIElement,System.Windows.Documents.AdornerLayer)">
            <summary>
            Initializes a new instance of the DraggedAdorner class.
            </summary>
            <param name="dragDropData">Dragged content data</param>
            <param name="dragDropTemplate">Template to visualize dragged content</param>
            <param name="adornedElement">The element to bind the adorner to</param>
            <param name="layer">AdornerLayer element to attach the adorner</param>
        </member>
        <member name="M:Dynamo.Wpf.UI.DraggedAdorner.SetPosition(System.Double,System.Double,System.Windows.Rect)">
            <summary>
            Set position of the dragged data
            </summary>
            <param name="left">X coordinate</param>
            <param name="top">Y coordianate</param>
            <param name="bounds">Visible rectangle of dragged content</param>
        </member>
        <member name="T:Dynamo.Wpf.Utilities.CompactBubbleHandler">
            <summary>
            Helper class to process node output
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.CompactBubbleHandler.Process(ProtoCore.Mirror.MirrorData)">
            <summary>
            Creates an instance of <cref name="CompactBubbleViewModel"/> class
            from given node value
            </summary>
            <param name="value">Node value</param>
            <returns>Instance of <cref name="CompactBubbleViewModel"/> class</returns>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.CompactBubbleHandler.ProcessThing(ProtoCore.Mirror.MirrorData,System.Boolean)">
            <summary>
            Counts the number of all collection items of node output and if specified 
            it generates appropriate view model for compact preview bubble
            </summary>
            <param name="mirrorData">Data which represents the value of node output</param>
            <param name="generateViewModel">Flag to not create unused view models</param>
            <returns><cref name="CompactBubbleViewModel"/> instance 
            if <paramref name="generateViewModel"/> is specified. Otherwise, null</returns>
        </member>
        <member name="T:Dynamo.Wpf.Utilities.CrashReportTool.MINIDUMP_EXCEPTION_INFORMATION">
            <summary>
            Struct mapping to MINIDUMP_EXCEPTION_INFORMATION for Win32 API
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.Utilities.CrashReportTool.MINIDUMP_EXCEPTION_INFORMATION.ThreadId">
            <summary>
            The thread id
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.Utilities.CrashReportTool.MINIDUMP_EXCEPTION_INFORMATION.ExceptionPointers">
            <summary>
            The exception pointers
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.Utilities.CrashReportTool.MINIDUMP_EXCEPTION_INFORMATION.ClientPointers">
            <summary>
            The client pointers
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.CrashReportTool.ShowCrashErrorReportWindow(Dynamo.ViewModels.DynamoViewModel,Dynamo.Core.CrashErrorReportArgs)">
            <summary>
            Calls external CER tool (with UI)
            </summary>
            <param name="viewModel">The Dynamo view model</param>
            <param name="args"></param>
            <returns>True if the CER tool process was successfully started. False otherwise</returns>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.CrashUtilities.PackagesToMakrdown(Dynamo.PackageManager.PackageLoader)">
            <summary>
            Converts packages information into markdown format for use in Github issue body
            </summary>
            <param name="packageLoader">Package loader</param>
            <returns>A markdown format string to use in issue body.</returns>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.CrashUtilities.GitHubCrashReportBody(System.Object)">
            <summary>
            Formats crash details and adds metadata for use in Github issue body
            </summary>
            <param name="details">Crash details, such as a stack trace.</param>
            <returns>A formatted, but not escaped, string to use as issue body.</returns>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.CrashUtilities.BuildMarkdownContent(System.String,System.String)">
            <summary>
            Builds a Markdown string that will be posted to our new GitHub issue
            </summary>
            <param name="dynamoVersion">Dynamo version that should be recorded in the issue report</param>
            <param name="markdownPackages">Section of the issue with the loaded packages in markdown format</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.Wpf.Utilities.GroupStyleItemSelector">
            <summary>
            This class will be used for select a specific Style depending if the list item is a Separator or MenuItem
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.Utilities.LibraryDragAndDrop.startPosition">
            <summary>
            Position of mouse, when user clicks on button.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.Utilities.LibraryDragAndDrop.isDragging">
            <summary>
            Indicates whether item is dragging or not, so that there won't be more than one DoDragDrop event.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Utilities.NodeContextMenuBuilder">
            <summary>
            A static class containing methods for dynamically building a Node's Context Menu.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Utilities.NodeContextMenuBuilder.NodeViewModel">
            <summary>
            A reference to the NodeViewModel whose ContextMenu is being built.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Utilities.NodeContextMenuBuilder.ContextMenu">
            <summary>
            A reference to the ContextMenu to which items are being added. 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.NodeContextMenuBuilder.AddContextMenuItem(System.Windows.Controls.MenuItem)">
            <summary>
            Adds items to a context menu.
            </summary>
            <param name="menuItem"></param>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.NodeContextMenuBuilder.AddContextMenuSeparator">
            <summary>
            Adds a new separator a context menu.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.NodeContextMenuBuilder.CreateMenuItem(System.String,System.String,System.Windows.Data.Binding,System.String,System.Boolean,System.Windows.Data.Binding,System.Windows.Data.Binding,System.Windows.Data.Binding,System.Windows.Data.Binding,System.String)">
            <summary>
            Creates a new MenuItem in the node's Context Menu.
            Using optional named arguments here as it makes the Binding syntax
            much cleaner if all handled in the method body.
            </summary>
            <param name="name"></param>
            <param name="header"></param>
            <param name="command"></param>
            <param name="commandParameter"></param>
            <param name="isCheckable"></param>
            <param name="isChecked"></param>
            <param name="visibility"></param>
            <param name="isEnabled"></param>
            <param name="itemsSource"></param>
            <param name="hotkey"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.NodeContextMenuBuilder.DismissedAlertsMenuItemOnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Allows for any previously-dismissed errors/warnings/info messages to be un-dismissed
            and re-displayed on the node in question.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.NodeContextMenuBuilder.AddInjectedNodeViewCustomizationMenuItems(System.Collections.Specialized.OrderedDictionary)">
            <summary>
            Loops through the previously-stashed collection of MenuItems that were injected
            during the NodeViewCustomization process and adds them back into the node's
            context menu. This ensures they appear in a consistent location.
            </summary>
            <param name="nodeViewCustomizationMenuItems"></param>
        </member>
        <member name="F:Dynamo.Wpf.Utilities.NodeContextMenuBuilder.NodeContextMenuDefaultItemNames">
            <summary>
            A list of the names of nodes' default menu items, which cannot be dynamically injected into its context menu.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Utilities.PreferencesPanelUtilities">
            <summary>
            Utilities for the Preferences panel
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Utilities.PreferencesPanelUtilities.OpenPreferencesPanel(System.Windows.Window,System.Windows.WindowStartupLocation,System.String,System.String)">
            <summary>
            This static method will open the Preferences panel in the specified tab (if is provided) and expand the specified expander (if is provided)
            </summary>
            <param name="mainWindow">This window needs to be the DynamoView</param>
            <param name="location">Location in which the Preference panel will be shown</param>
            <param name="tabName">Tab name in which the preference panel will be opened</param>
            <param name="expanderName">Expander name that will be expanded (it has to be inside the tab)</param>
        </member>
        <member name="P:Dynamo.Wpf.Interfaces.IBrandingResourceProvider.AdditionalPackagePublisherTermsOfUse">
            <summary>
            This property returns the full file path to the additional terms of 
            use document, if any. The terms of use will be shown in addition to 
            the existing Dynamo TermsOfUse.rtf before the user is allowed to 
            publish any package. If specified, this property should represent an
            existing file, otherwise an exception will be thrown. If there is no
            additional terms of use document to show, this property should return
            an empty string.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Rendering.HelixRenderPackageFactory">
            <summary>
            A Helix-specific IRenderPackageFactory implementation.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Rendering.HelixRenderPackage">
            <summary>
            A Helix-specifc IRenderPackage implementation.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.RequiresCustomTransform">
            <summary>
            A flag indicating whether the render package has had its Transform property set
            explicitly.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.Transform">
            <summary>
            A 4x4 matrix that is used to transform all geometry in the render packaage.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.SetTransform(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Set the transform that is applied to all geometry in the renderPackage.
            </summary>
            <param name="transform"></param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.SetTransform(Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Set the transform that is applied to all geometry in the renderPackage
            by computing the matrix that transforms between from and to.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.SetTransform(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set the transform that is applied to all geometry in the renderPackage,
            as this is a helix specific implementation it should be noted that the this matrix
            should be as follows when converting from a ProtoGeometry/Dynamo CoordinateSystem
            [ xaxis.X, xaxis.Z, -xaxis.Y, 0,
            zaxis.X, zaxis.Z, -zaxis.Y, 0,
            -yaxis.X, -yaxis.Z, yaxis.Y, 0,
            org.X, org.Z, -org.Y, 1 ]
            as Helix and Dynamo have their Y and Z axes reversed.
            </summary>
            <param name="m11"></param>
            <param name="m12"></param>
            <param name="m13"></param>
            <param name="m14"></param>
            <param name="m21"></param>
            <param name="m22"></param>
            <param name="m23"></param>
            <param name="m24"></param>
            <param name="m31"></param>
            <param name="m32"></param>
            <param name="m33"></param>
            <param name="m34"></param>
            <param name="m41"></param>
            <param name="m42"></param>
            <param name="m43"></param>
            <param name="m44"></param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.SetTransform(System.Double[])">
            <summary>
            Set the transform as a double array, this transform is applied to all geometry in the renderPackage.
            This matrix should be laid out as follows in row vector order:
            [Xx,Xy,Xz, 0,
             Yx, Yy, Yz, 0,
             Zx, Zy, Zz, 0,
             offsetX, offsetY, offsetZ, W]
            NOTE: This method should transform the matrix from row vector order to whatever form is needed by the implementation.
            When converting from ProtoGeometry CoordinateSystem form to input matrix, set the first row to the X axis of the CS,
            the second row to the Y axis of the CS, the third row to the Z axis of the CS, and the last row to the CS origin, where W = 1. 
            </summary>
            <param name="matrix"></param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddPointVertex(System.Double,System.Double,System.Double)">
            <summary>
            Add a point vertex to the render package.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddPointVertexColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Add a point color to the render package.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddTriangleVertex(System.Double,System.Double,System.Double)">
            <summary>
            Add a triangle vertex location to the render package.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddTriangleVertexNormal(System.Double,System.Double,System.Double)">
            <summary>
            Add a triangle normal to the render package.
            Triangle normals are per-vertex.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddTriangleVertexUV(System.Double,System.Double)">
            <summary>
            Add a triangle texture coordinate to the render package.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddTriangleVertexColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Add a triangle vertex color to the render package.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddLineStripVertex(System.Double,System.Double,System.Double)">
            <summary>
            Add a line vertex to the render package.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddLineStripVertexCount(System.Int32)">
            <summary>
            Add a line strip vertex count to the render package.
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddLineStripVertexColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Add a line strip vertex color to the render package.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.ApplyPointVertexColors(System.Byte[])">
            <summary>
            Apply a color to each point vertex.
            </summary>
            <param name="colors">A buffer of R,G,B,A values corresponding to each vertex.</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.ApplyLineVertexColors(System.Byte[])">
            <summary>
            Apply a color to each line vertex.
            </summary>
            <param name="colors">A buffer of R,G,B,A values corresponding to each vertex.</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.ApplyMeshVertexColors(System.Byte[])">
            <summary>
            Apply a color to each mesh vertex.
            </summary>
            <param name="colors">A buffer of R,G,B,A values corresponding to each vertex.</param>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.Description">
            <summary>
            A tag used to store information about the render package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.IsSelected">
            <summary>
            A flag indicating whether the render package is selected.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.HasRenderingData">
            <summary>
            A flag indicating whether the render package has data.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.DisplayLabels">
            <summary>
            A flag indicating whether the render package is displaying labels
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.RequiresPerVertexColoration">
            <summary>
            A flag indicating whether the render package requires 
            per vertex coloration.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.PointVertexCount">
            <summary>
            The number of point vertices in the package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.LineVertexCount">
            <summary>
            The number of line vertices in the package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.MeshVertexCount">
            <summary>
            The number of mesh vertices in the package.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddLabel(System.String,Autodesk.DesignScript.Interfaces.VertexType,System.Int32)">
            <summary>
            Add a label position to the render package with position information from an existing geometry vertex.
            </summary>
            <param name="label">Text to be displayed in the label</param>
            <param name="vertexType">The type of vertex geometry used to look up a position: Point, Line, or Mesh</param>
            <param name="index">The index of the vertex geometry used to look up a position</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.Autodesk#DesignScript#Interfaces#IRenderInstancedLabels#AddInstancedLabel(System.String,Autodesk.DesignScript.Interfaces.VertexType,System.Int32,System.Int32,System.Guid)">
            <summary>
            Adds a label to the render package, but first transforms the label by the transform matrix of the 
            relevant graphicItem.
            </summary>
            <param name="label">label</param>
            <param name="vertexType">type of vertex</param>
            <param name="vertIndex">vertex index for base label position</param>
            <param name="instanceIndex">index to use for transform matrix</param>
            <param name="BaseTessellationId">baseTessellation Id of the item this label belongs to.
            Aids in lookup of the correct transform matrix.</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddLabel(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Add a label position to the render package.
            </summary>
            <param name="label">Text to be displayed in the label</param>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.AutoGenerateLabels">
            <summary>
            A flag indicating whether the render package should auto generate labels based on replication indices
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.ClearLabels">
            <summary>
            Clear all label data from the render package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.PointVertexColorCount">
            <summary>
            The number of point vertices colors in the package (Optimized for speed).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.LineVertexColorCount">
            <summary>
            The number of line vertices colors in the package (Optimized for speed).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.MeshVertexColorCount">
            <summary>
            The number of mesh vertices colors in the package (Optimized for speed).
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.UpdatePointVertexColorForRange(System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Update a color to a range of point vertices.
            </summary>
            <param name="startIndex">The index associated with the first vertex in PointVertices we want to associate with a color</param>
            <param name="endIndex">The index associated with the last vertex in PointVertices we want to associate with a color</param>
            <param name="red">byte for the red RGB value</param>
            <param name="green">byte for the green RGB value</param>
            <param name="blue">byte for the blue RGB value</param>
            <param name="alpha">byte for the alpha RGB value</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AppendPointVertexColorRange(System.Byte[])">
            <summary>
            Append a color range for point vertices.
            </summary>
            <param name="colors">A buffer of R,G,B,A values corresponding to each vertex.</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.UpdateLineVertexColorForRange(System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Update a color to a range of line vertices.
            </summary>
            <param name="startIndex">The index associated with the first vertex in LineVertices we want to associate with a color</param>
            <param name="endIndex">The index associated with the last vertex in LineVertices we want to associate with a color</param>
            <param name="red">byte for the red RGB value</param>
            <param name="green">byte for the green RGB value</param>
            <param name="blue">byte for the blue RGB value</param>
            <param name="alpha">byte for the alpha RGB value</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AppendLineVertexColorRange(System.Byte[])">
            <summary>
            Append a color range for line vertices.
            </summary>
            <param name="colors">A buffer of R,G,B,A values corresponding to each vertex.</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.UpdateMeshVertexColorForRange(System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Update a color to a range of of mesh vertices.
            </summary>
            <param name="startIndex">The index associated with the first vertex in MeshVertices we want to associate with a color</param>
            <param name="endIndex">The index associated with the last vertex in MeshVertices we want to associate with a color</param>
            <param name="red">byte for the red RGB value</param>
            <param name="green">byte for the green RGB value</param>
            <param name="blue">byte for the blue RGB value</param>
            <param name="alpha">byte for the alpha RGB value</param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AppendMeshVertexColorRange(System.Byte[])">
            <summary>
            Append a color range for mesh vertex.
            </summary>
            <param name="colors">A buffer of R,G,B,A values corresponding to each vertex.</param>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.TextureMapsList">
            <summary>
            A List containing arrays of bytes representing RGBA colors.
            These arrays can be used to populate textures for mapping onto specific meshes
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.TextureMapsStrideList">
            <summary>
            A list containing the size of one dimension of the associated texture map array in TextureMapsList.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.MeshVerticesRangesAssociatedWithTextureMaps">
            <summary>
            A list of mesh vertices ranges that have associated texture maps
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddTextureMapForMeshVerticesRange(System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Set a color texture map for a specific range of mesh vertices
            </summary>
            <param name="startIndex">The index associated with the first vertex in MeshVertices we want to associate with the texture map</param>
            <param name="endIndex">The index associated with the last vertex in MeshVertices we want to associate with the texture map</param>
            <param name="textureMap">An array of bytes representing RGBA colors to be used as a color texture map</param>
            <param name="stride">The size of one dimension of the colors array</param>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.AllowLegacyColorOperations">
            <summary>
            Allow legacy usage of the color methods in IRenderPackage
            This flag is used by the UpdateRenderPackageAsyncTask implementation to flag
            any third party usage of deprecated color methods in IRenderPackageSupplement.MeshVerticesRangesAssociatedWithTextureMaps
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.MeshVertexRangesAssociatedWithInstancing">
            <summary>
            A list of mesh vertices ranges that have associated instance references
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddInstanceGuidForMeshVertexRange(System.Int32,System.Int32,System.Guid)" -->
        <member name="P:Dynamo.Wpf.Rendering.HelixRenderPackage.LineVertexRangesAssociatedWithInstancing">
            <summary>
            A list of line vertices ranges that have associated instance references
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddInstanceGuidForLineVertexRange(System.Int32,System.Int32,System.Guid)" -->
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddInstanceMatrix(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Guid)">
            <summary>
            Set the transform using a series of doubles. The resulting transform is applied to all geometry in the renderPackage.
            Following conventional matrix notation, m11 is the value of the first row and first column, and m12
            is the value of the first row and second column.
            NOTE: This method will set the matrix exactly as described by the caller.
            </summary>
            <param name="m11"></param>
            <param name="m12"></param>
            <param name="m13"></param>
            <param name="m14"></param>
            <param name="m21"></param>
            <param name="m22"></param>
            <param name="m23"></param>
            <param name="m24"></param>
            <param name="m31"></param>
            <param name="m32"></param>
            <param name="m33"></param>
            <param name="m34"></param>
            <param name="m41"></param>
            <param name="m42"></param>
            <param name="m43"></param>
            <param name="m44"></param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.AddInstanceMatrix(System.Single[],System.Guid)">
            <summary>
            Set the transform as a double array, this transform is applied to all geometry in the renderPackage.
            This matrix should be laid out as follows in row vector order:
            [Xx,Xy,Xz, 0,
             Yx, Yy, Yz, 0,
             Zx, Zy, Zz, 0,
             offsetX, offsetY, offsetZ, W]
            NOTE: The caller of this method should transform the matrix from row vector order to whatever form is needed by the implementation.
            When converting from ProtoGeometry CoordinateSystem form to input matrix, set the first row to the X axis of the CS,
            the second row to the Y axis of the CS, the third row to the Z axis of the CS, and the last row to the CS origin, where W = 1. 
            </summary>
            <param name="matrix"></param>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.ContainsTessellationId(System.Guid)">
            <summary>
            Checks if a base tessellation guid has already been registered with this <see cref="T:Autodesk.DesignScript.Interfaces.IInstancingRenderPackage"/>.
            Both Line and Mesh ids are checked.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.Rendering.HelixRenderPackage.Autodesk#DesignScript#Interfaces#IRenderInstancedLabels#InstanceCount(System.Guid)">
            <summary>
            Number of instances for a particular baseTessellation type(cuboid, sphere etc)
            </summary>
            <param name="baseTessellationID"></param>
            <returns>returns -1 if id cannot be found in package.</returns>
        </member>
        <member name="M:Dynamo.Wpf.INodeViewCustomizations.GetCustomizations(Dynamo.Logging.ILogger)">
            <summary>
            Returns a dictionary of collections of INodeViewCustomization types.
            </summary>
            <param name="logger">An ILogger used for logging exceptions when loading INodeViewCustomizations from assemblies.</param>
            <returns>A dictionary of collections of INodeViewCustomization types.</returns>
        </member>
        <member name="M:Dynamo.Wpf.NodeViewCustomizationLibrary.ContainsCustomizationForNodeModel(System.Type)">
            <summary>
            Used only for testing.
            </summary>
            <param name="nodeModel"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.FunctionNodeViewCustomization.SerializeCustomNodeWorkspaceWithNewInfo(Dynamo.Models.FunctionNamePromptEventArgs,Dynamo.ViewModels.DynamoViewModel,Dynamo.Graph.Nodes.CustomNodes.Function)">
            <summary>
            Serialize and update dyf based on FunctionNamePromptEventArgs
            </summary>
            <param name="args">FunctionNamePromptEventArgs which contains updated dyf info</param>
            <param name="dynamoViewModel">Dynamo View Model</param>
            <param name="functionNodeModel">Custom Node</param>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Core.AnnotationExtensions">
            <summary>
            Extension method to check if a model exists in a group
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Core.Converters.DynamoPythonScriptEditorTextOptions">
            <summary>
            Class to interact with ICSharp Text Editor Options
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.Converters.DynamoPythonScriptEditorTextOptions.ShowWhiteSpaceCharacters(System.Boolean)">
            <summary>
            Sets the Python Script Editor options
            </summary>
            <param name="IsEnabled">Whitespaces and Tabs will be visible in the Python Script Editor if true.</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.Converters.DynamoPythonScriptEditorTextOptions.GetTextOptions">
            <summary>
            Gets the Python Script Editor options
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Core.Converters.WorkspaceViewWriteConverter">
            <summary>
            WorkspaceWriteConverter is used for serializing Workspaces to JSON.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Core.Converters.AnnotationViewModelConverter">
            <summary>
            The AnnotationViewModelConverter is used to serialize AnnotationViewModels.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.HasErrors">
            <summary>
            Boolean indicates if home workspace run with errors
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.HasInfos">
            <summary>
            Boolean indicates if home workspace is displayed with infos
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.HasWarnings">
            <summary>
            Boolean indicates if home workspace run with warnings
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.FooterNotificationItems">
            <summary>
            Contains all footer notification item bindings
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.SetupFooterNotificationItems">
            <summary>
            Setup the initial collection of FooterNotificationItems
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.OnNodeModified(Dynamo.Graph.Nodes.NodeModel)">
            <summary>
            When a node is modified, this calls the executing nodes on Homeworkspace
            to compute the delta state.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.UpdateRunStatusMsgBasedOnStates">
            <summary>
            Update run status message based on error/warning/info states
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.UpdateFooterItems(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the Info, Warning and Error footer notification items
            </summary>
            <param name="hasInfo"></param>
            <param name="hasWarnings"></param>
            <param name="hasErrors"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.SelectIssues(System.Object)">
            <summary> 
            Fit the current workspace view to the current selection
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.FitSelection(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.NodeModel},Dynamo.Wpf.ViewModels.Core.FooterNotificationItem.FooterNotificationType)">
            <summary>
            A sequence of methods to zoom around a selection of nodes 
            </summary>
            <param name="selectedNodes"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.HomeWorkspaceViewModel.Dispose">
            <summary>
            Object dispose function
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Core.ZeroToVisibilityCollapsedConverter">
            <summary>
            Value converter from 0 to Visibility Collapsed
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Core.FooterNotificationItem">
            <summary>
            An object that contains information about the number of 
            Info, Warning or Error Nodes after a Run 
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Core.FooterNotificationItem.FooterNotificationType">
            <summary>
            Represents the different types of item - Error, Warning or Info
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.FooterNotificationItem.NotificationCount">
            <summary>
            The number of Warnings, Errors or Info Nodes
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.FooterNotificationItem.NotificationImage">
            <summary>
            The glyph associated with this footer item
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.FooterNotificationItem.NotificationToolTip">
            <summary>
            The tooltip associated with the respective item
            The tooltip message stays the same, no update required
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.FooterNotificationItem.NotificationType">
            <summary>
            The type of control, either Error, Warning or Info
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Core.SerializationExtensions">
            <summary>
            SerializationExtensions contains methods for serializing a WorkspaceViewModel to json.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Core.SerializationExtensions.ToJson(Dynamo.ViewModels.WorkspaceViewModel)">
            <summary>
            Serialize the WorkspaceViewModel to JSON.
            </summary>
            <param name="viewModel"></param>
            <returns>A JSON string representing the WorkspaceViewModel</returns>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.ShortcutToolbarViewModel.ValidateWorkSpaceBeforeToExportAsImageCommand">
            <summary>
            Exports an image from the user's 3D background or workpace
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.ShortcutToolbarViewModel.NotificationsNumber">
            <summary>
            This property represents the number of new notifications 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.ShortcutToolbarViewModel.LoginState">
            <summary>
            Keeps track of the user's login state
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Core.ShortcutToolbarViewModel.Username">
            <summary>
            Keeps track of the logged in user's username
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel">
            <summary>
            The View Model used for FileTrustWarning.xaml view
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel.PointerHorizontalOffset">
            <summary>
            This offset is set to make the popup pointer point at the middle of the RunMode combo box
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel.TooltipPointerPoints">
            <summary>
            This will contains the 3 points needed for drawing the Tooltip pointer direction
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel.PopupRectangleWidth">
            <summary>
            Popup Width, by default it will have an exaggerated Width to accommodate localized languages
            TODO it should really be responsive either using grid of auto canvas:
            https://stackoverflow.com/questions/855334/wpf-how-to-make-canvas-auto-resize
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel.PopupRectangleHeight">
            <summary>
            Popup Height, by default it will have a Height of 220
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel.ShowWarningPopup">
            <summary>
            This property indicates if the Popup should be displayed or not
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel.AllowOneTimeTrust">
            <summary>
            This property indicates if the Popup has been dismissed once, temporarily ignoring the trust warning
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel.DynFileDirectoryName">
            <summary>
            This property will contain the full path of the file to be opened and is used to check if already exists in the Trusted Paths 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.FileTrust.FileTrustWarningViewModel.#ctor">
            <summary>
            Default empty constructor
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.Width">
            <summary>
            Popup Width, by default it will have a Width of 480
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.Height">
            <summary>
            Popup Height, by default it will have a Height of 190
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.TooltipPointerPoints">
            <summary>
            This PointCollection property will have the 3 points needed for drawing the Tooltip Pointer 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.ShadowTooltipDirection">
            <summary>
            This will contains the shadow direction in degrees that will be shown in the pointer
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.ShowPopupPointer">
            <summary>
            Due that some popups doesn't need the pointer then this property hides or show the pointer
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.ShowPopupButton">
            <summary>
            Due that some popups doesn't need the button (Start Tour button) then this property hides or show the button
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.ShowTooltipNavigationControls">
            <summary>
            Due that some popups doesn't need the NavigationControls (e.g. 1 of 6) then this property hides or show the controls
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.Step">
            <summary>
            This property hold a reference to the Step that was created (can be Welcome, Survey, Tooltip, ExitTour). 
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.TourLabelProgress">
            <summary>
            This string will be shown in the Navigation Controls for showing some specific info (for example the "1 of 6" label)
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.GuidedTour.PopupWindowViewModel.#ctor(Dynamo.Wpf.UI.GuidedTour.Step)">
            <summary>
            Foir creating a PopupWindowViewModel we need to pass the step to be used 
            </summary>
            <param name="popupType">Step is a abstract class then the parameter can be any of the child clases like Welcome, Tooltip, Survey....</param>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.GuidedTour.SurveyPopupViewModel.Step">
            <summary>
            This property hold a reference to the Step that was created (can be Welcome, Survey, Tooltip, ExitTour). 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.GuidedTour.SurveyPopupViewModel.#ctor(Dynamo.Wpf.UI.GuidedTour.Survey)">
            <summary>
            For creating a SurveyPopupViewModel we need to pass the Survey to be used 
            </summary>
            <param name="popupType">Passing as parameter a Survey type (base class is Step)</param>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.RunTypeItem">
            <summary>
            The RunTypeItem class wraps a RunType for display in the ComboBox.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.RunTypeItem.Enabled">
            <summary>
            The enabled flag sets whether the RunType is selectablable
            in the view.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.RunTypeItem.IsSelected">
            <summary>
            If this RunTypeItem is selected
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.RunSettingsViewModel">
            <summary>
            The RunSettingsViewModel is the view model for the 
            RunSettings object on a given HomeWorkspaceModel. This class
            handles property change notification from the underlying RunSettings
            object, raising corresponding property change notifications. Those
            property change notifications are, in turn, handled by the WorkspaceViewModel.
            Setters on the properties in this class do not raise property change
            notifications as those notifications are raised when the value is set on the
            model.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.RunSettingsViewModel.RunTypesEnabled">
            <summary>
            This value will enable/disable the RunType ComboBox located in RunSettingsControl.xaml
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.RunSettingsViewModel.Dispose">
            <summary>
            When switching workspace, this need to be called in HomeworkspaceViewModel dispose function
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.RunSettingsViewModel.NotifyOfGraphRunChanged">
            <summary>
            Notifies all relevant Dynamo features (UI elements, commands) that the Graph exection has been enabled/disabled. 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.RunSettingsViewModel.Model_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when the RunSettings model has property changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.RunPeriodConverter">
            <summary>
            The RunPeriodConverter converts input text to and from an integer
            value with a trailing "ms".
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeCategoryViewModel.SmallIcon">
            <summary>
             Small icon for class and method buttons.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.NodeCategoryViewModel.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Category name</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.NodeCategoryViewModel.#ctor(System.String,System.Collections.Generic.IEnumerable{Dynamo.Wpf.ViewModels.NodeSearchElementViewModel},System.Collections.Generic.IEnumerable{Dynamo.Wpf.ViewModels.NodeCategoryViewModel})">
            <summary>
            Constructor
            </summary>
            <param name="name">Category name</param>
            <param name="entries">Sub elements</param>
            <param name="subs">Sub Categories</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.NodeCategoryViewModel.Dispose">
            <summary>
            Dispose function
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.NodeCategoryViewModel.DisposeTree">
            <summary>
            Dispose the category and all the sub categories.
            note: does not seem to be called in Dynamo
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.AutoCompletionNodeMachineLearningInfo">
            <summary>
            Machine Learning related info
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.Class">
            <summary>
            Indicates class from which node came, e.g. Point - class, ByCoordinates - node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.Category">
            <summary>
            Indicates category from which node came, e.g. Geometry - category, ByCoordinates - node.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.Group">
            <summary>
            Indicates node's group. It can be create, action or query. 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.LoadFonts">
            <summary>
            Loads font awesome icons for node's groups, e.g. create - plus icon.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.GroupIconName">
            <summary>
            Indicates group icon, e.g. create - plus icon.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.SmallIcon">
            <summary>
             Small icon for class and method buttons.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.LargeIcon">
            <summary>
             Large icon for tooltips.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.CreateAndConnectCommand">
            <summary>
            Create the search element as node and connect to target port
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.NodeSearchElementViewModel.CreateAndConnectToPort(System.Object)">
            <summary>
            Create new node for search element, connect to port and place using graph auto layout.
            </summary>
            <param name="parameter">Port model to connect to</param>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.ClassInformationViewModel.IsRootCategoryDetails">
            <summary>
            Specifies whether or not parent is root category (BrowserRootElement).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.ClassInformationViewModel.ClassDetailsVisibility">
            <summary>
            Specifies whether or not instance should be shown as ClassInformationView.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.ClassInformationViewModel.currentDisplayMode">
            <summary>
            Specifies which of QueryMembers of ActionMembers list is active for the moment.
            If any of CreateMembers, ActionMembers or QueryMembers lists is empty
            it returns 'None'.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.SearchCategory">
            <summary>
            Class that is used to filter nodes in search ui.
            If search category is selected, then nodes of this category are shown in search.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.SearchCategory.Name">
            <summary>
            Name of category
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.SearchCategory.IsSelected">
            <summary>
            If category is selected, nodes of this category are shown as search results.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.SearchCategory.ClickCommand">
            <summary>
            Fires, when category button is clicked.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.SearchCategory.OnlyClickCommand">
            <summary>
            Fires, when "only" textblock is clicked.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.SearchCategory.#ctor(System.String)">
            <summary>
            Creates search category, it's used in Search UI to filter nodes.
            </summary>
            <param name="title">name of category, e.g. Core, BuiltIn etc.</param>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.DynamoGeometryMeshCore">
            <summary>
            A low level (non wpf) object which can be rendered. 
            This class handles actually updating the scene and shaders. Updates to the properties on this class invalidate
            the renderer and pass new data to the shader.
            This class can override callbacks that occur during low level rendering updates. The only one we use currently is
            OnUpdatePerModelStruct() to modify the per model data that is passed to our shader.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.DynamoGeometryModel3D">
            <summary>
            A Dynamo mesh class which supports sending data to our custom shader.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DynamoGeometryModel3D.RequiresPerVertexColoration">
            <summary>
            Does this model require displaying vertex colors.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.DynamoMeshNode">
            <summary>
            This class represents a DynamoMesh in the scene and is used to attach a custom shader and 
            a custom Core - that lets us pass custom data to the shader.
            Each WPF Model object relates to a sharpdx - scene node - Element3d is a wrapper on sceneNode so
            these are essentially the same.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.DynamoLineGeometryModel3D">
            <summary>
            A Dynamo line class which supports the RenderCustom technique.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DynamoLineGeometryModel3D.SetState(System.Int32)">
            <summary>
            This method is used to set the dynamo interaction state into an existing material slot
            which is sent to the shader buffer for lines.
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.DynamoPointGeometryModel3D">
            <summary>
            A Dynamo point class which supports the RenderCustom technique.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.DynamoMeshShaderStates.IsFrozen">
            <summary>
            Used to determine if alpha should be lowered.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.DynamoMeshShaderStates.IsSelected">
            <summary>
            Used to determine if selection color should be set.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.DynamoMeshShaderStates.IsIsolated">
            <summary>
            Used to determine if alpha should be lowered.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.DynamoMeshShaderStates.IsSpecialRenderPackage">
            <summary>
            Used to mark a mesh as coming from a special or meta(gizmo) render package.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.DynamoMeshShaderStates.HasTransparency">
            <summary>
            Currently this flag is not used in the shader.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.DynamoMeshShaderStates.RequiresPerVertexColor">
            <summary>
            Used to determine if vertex colors should be displayed with shading.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.DynamoMeshShaderStates.FlatShade">
            <summary>
            Currently this flag is not used in the shader.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DynamoRenderCoreDataStore.IsFrozenData">
            <summary>
            Is this model Frozen.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DynamoRenderCoreDataStore.IsSelectedData">
            <summary>
            Is this model currently selected.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DynamoRenderCoreDataStore.IsIsolatedData">
            <summary>
            Is IsolationMode active.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DynamoRenderCoreDataStore.IsSpecialRenderPackageData">
            <summary>
            Is this model marked as a special render package.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DynamoRenderCoreDataStore.HasTransparencyData">
            <summary>
            Does this model have alpha less than 255.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DynamoRenderCoreDataStore.RequiresPerVertexColor">
            <summary>
            Should this model display vertex colors.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DynamoRenderCoreDataStore.IsFlatShaded">
            <summary>
            Should this model disregard lighting calculations and display unlit texture or vertex colors.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dynamo.Wpf.ViewModels.Watch3D.DynamoRenderCoreDataStore.GenerateEnumFromState" -->
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.CameraData.containsNaN">
            <summary>
            returns true if any of components are NaN.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel">
            <summary>
            The HelixWatch3DViewModel establishes a full rendering 
            context using the HelixToolkit. An instance of this class
            can act as the data source for a <see cref="T:Dynamo.Controls.Watch3DView"/>
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.RequestCreateModels">
            <summary>
            An event requesting to create geometries from render packages.
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.RequestRemoveModels">
            <summary>
            An event requesting to remove geometries generated by the node.
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.RequestZoomToFit">
            <summary>
            An event requesting a zoom to fit operation around the provided bounds.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.SceneTransform">
            <summary>
            This is the initial transform applied to 
            elements of the scene, like the grid and world axes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.GridScale">
            <summary>
            Sets the scale of the Grid helper
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.HasRenderedGeometry">
            <summary>
            Identifies if the Graph yields any rendered, visible or hidden, geometry
            Any graph would always render at least 3 elements:
            Headlight, Grid, and Axis
            Should be used after all Tasks have been processed by the Dispatcher
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.LeftClickCommand">
            <summary>
            The LeftClickCommand is set according to the
            ViewModel's IsPanning or IsOrbiting properties.
            When those properties are changed, this command is
            set to ViewportCommand.Pan or ViewportCommand.Rotate depending. 
            If neither panning or rotating is set, this property is set to null 
            and left clicking should have no effect.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.TryCreateHelixWatch3DViewModel(Dynamo.Graph.Nodes.NodeModel,Dynamo.Wpf.ViewModels.Watch3D.Watch3DViewModelStartupParams,Dynamo.Logging.DynamoLogger)">
            <summary>
            Attempt to create a HelixWatch3DViewModel. If one cannot be created,
            fall back to creating a DefaultWatch3DViewModel and log the exception.
            </summary>
            <param name="model">The NodeModel to associate with the returned view model.</param>
            <param name="parameters">A Watch3DViewModelStartupParams object.</param>
            <param name="logger">A logger to be used to log the exception.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.DeserializeCamera(System.Xml.XmlNode)">
            <summary>
            Create a CameraData object from an XmlNode representing the Camera's serialized
            position data.
            </summary>
            <param name="cameraNode">The XmlNode containing the camera position data.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.DeleteGeometryForNode(Dynamo.Graph.Nodes.NodeModel,System.Boolean)">
            <summary>
            Delete render packages generated by the node.
            Note this function should be called from UI thread; otherwise call
            RemoveGeometryForNodeAsync().
            </summary>
            <param name="node"></param>
            <param name="requestUpdate"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.DeleteGeometryForIdentifier(System.String,System.Boolean)">
            <summary>
            Delete render packages associated with the specified identifier.
            Note this function should be called from UI thread.
            </summary>
            <param name="identifier"></param>
            <param name="requestUpdate"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.OnIsolationModeRequestUpdate">
            <summary>
            Update the attached properties and recalculate transparency sorting
            after any update under Isolate Selected Geometry mode.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.FindIdentifiersForContext">
            <summary>
            Finds all output identifiers based on the context.
            
            Ex. If there are nodes selected, returns all identifiers for outputs
            on the selected nodes. If you're in a custom node, returns all identifiers
            for the outputs from instances of those custom nodes in the graph. etc.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:System.String"/> containing the output identifiers found in the context.</returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.UpdateHelpers">
            <summary>
            Updates background graphic helpers
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.InitializeHelix">
            <summary>
            Initialize the Helix with these values. These values should be attached before the 
            visualization starts. Deleting them and attaching them does not make any effect on helix.         
            So they are initialized before the process starts.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.DrawGrid">
            <summary>
            Create the grid
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.AddLabelForPath(System.String)">
            <summary>
            Display a label for geometry based on the paths.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.ClearPathLabel(System.String)">
            <summary>
            Remove the labels (in Watch3D View) for geometry once the Watch node is disconnected
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.ToggleTreeViewItemHighlighting(System.String,System.Boolean)">
            <summary>
            Toggles on the highlighting for the specific node (in Helix preview) when
            selected in the PreviewBubble as well as the Watch Node
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.AggregateRenderPackages(System.Collections.Generic.IEnumerable{Dynamo.Wpf.Rendering.HelixRenderPackage})">
            <summary>
            Given a collection of render packages, generates
            corresponding <see cref="T:HelixToolkit.Wpf.SharpDX.GeometryModel3D"/> objects for visualization, and
            attaches them to the visual scene.
            </summary>
            <param name="packages">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Dynamo.Wpf.Rendering.HelixRenderPackage"/>.</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.CloneMeshGeometry(HelixToolkit.Wpf.SharpDX.MeshGeometry3D)">
            <summary>
            Duplicate the mesh object
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.CloneLineGeometry(HelixToolkit.Wpf.SharpDX.LineGeometry3D)">
            <summary>
            Duplicate the point object
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.RemoveMeshGeometryByRange(System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32}},HelixToolkit.Wpf.SharpDX.MeshGeometry3D)">
            <summary>
            Remove mesh vertex data from a MeshGeometry object by a set of vertices ranges
            </summary>
            <param name="vertexRanges">List of vertices ranges to remove</param>
            <param name="m">mesh object</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.RemoveLineGeometryByRange(System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32}},HelixToolkit.Wpf.SharpDX.LineGeometry3D)">
            <summary>
            Remove line vertex data from a LineGeometry object by a set of vertices ranges
            </summary>
            <param name="verticesRange">List of vertices ranges to remove</param>
            <param name="l">line object</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.AddMeshData(System.String,HelixToolkit.Wpf.SharpDX.MeshGeometry3D,System.Int32,System.Int32,System.Boolean,System.String,System.Collections.Generic.IEnumerable{System.Byte},System.Int32,System.Double[],System.Boolean,System.Collections.Generic.List{SharpDX.Matrix})">
            <summary>
            Add or update specific mesh geometry to the Element3DDictionary for the scene
            </summary>
            <param name="id">Unique id of the mesh geometry in the scene</param>
            <param name="m">Mesh data</param>
            <param name="index">Start index of the mesh vertices to process</param>
            <param name="count">Count of mesh vertices to add</param>
            <param name="drawDead">Bool overriding the transparency of the added mesh to 20% visible.</param>
            <param name="name">Name of the mesh object in the scene. Can be used to differentiate geometry like the grid or axis</param>
            <param name="colors">A collection containing all mesh vertex colors as r1,g1,b1,a1,r2,g2,b2,a2...</param>
            <param name="stride">The size of one dimension of the Colors collection</param>
            <param name="transform">A 4x4 matrix that is used to transform all mesh geometry</param>
            <param name="requiresPerVertexColoration">Whether the individual vertices should be colored using the data in the corresponding arrays</param>
            <param name="instances">A Collection of 4x4 matrix that is used to define all instances of the mesh geometry</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.AddLineData(System.String,HelixToolkit.Wpf.SharpDX.LineGeometry3D,System.Int32,System.Int32,System.Boolean,System.String,System.Double[],System.Boolean,System.Boolean,System.Collections.Generic.List{SharpDX.Matrix})">
            <summary>
            Add or update specific line geometry to the Element3DDictionary for the scene
            </summary>
            <param name="id">Unique id of the mesh geometry in the scene</param>
            <param name="l">Line data</param>
            <param name="index">Start index of the line vertices to process</param>
            <param name="count">Count of line vertices to add</param>
            <param name="drawDead">Bool overriding the transparency of the added mesh to 20% visible.</param>
            <param name="name">Name of the mesh object in the scene. Can be used to differentiate geometry like the grid or axis</param>
            <param name="transform">A 4x4 matrix that is used to transform all mesh geometry</param>
            <param name="isSelected">Bool defining the selected state</param>
            <param name="edgeGeometry">Bool defining if this line geometry is rendered as independent vs edge lines</param>
            <param name="instances">A Collection of 4x4 matrix that is used to define all instances of the mesh geometry</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.FilterOutInvalidPackages(System.Collections.Generic.IEnumerable{Dynamo.Wpf.Rendering.HelixRenderPackage})">
            <summary>
            Filters out packages that are considered invalid by Helix. This includes any package
            that has a coordinate with a special value like NaN or Infinite.
            </summary>
            <param name="packages">Original packages to render</param>
            <returns>List of packages considered valid</returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.UpdateGeometryModelForSpecialRenderPackage(Dynamo.Wpf.Rendering.HelixRenderPackage,System.String)">
            <summary>
            Updates or replaces the GeometryModel3D for special IRenderPackage. Special 
            IRenderPackage has a Description field that starts with a string value defined 
            in RenderDescriptions. See RenderDescriptions for details of possible values.
            </summary>
            <param name="rp">The target HelixRenderPackage object</param>
            <param name="id">id of the HelixRenderPackage object</param>
            <returns>Returns true if rp is a special render package, and its GeometryModel3D
            is successfully updated.</returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.HandleViewClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles View Click event and performs a hit tests for geometry selection.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.CreateDynamoGeometryModel3D(System.Double[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Byte},System.Int32)">
            <summary>
            Create the Mesh Geometry Model object for the scene
            </summary>
            <param name="transform">A 4x4 matrix that is used to transform all mesh geometry</param>
            <param name="requiresPerVertexColoration">Whether or not the individual vertices should be colored using the data in the corresponding arrays</param>
            <param name="isHitTestVisible">Boolean determine if the geometry is hit test visible in the scene</param>
            <param name="colors">A collection containing all mesh vertex colors as r1,g1,b1,a1,r2,g2,b2,a2...</param>
            <param name="colorStride">The size of one dimension of the Colors collection</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.CreateLineGeometryModel3D(System.Double[],System.Boolean,System.Double,System.Boolean)">
            <summary>
            Create the Line Geometry Model object for the scene
            </summary>
            <param name="transform">A 4x4 matrix that is used to transform all mesh geometry</param>
            <param name="isSelected">Bool defining the selected state</param>
            <param name="thickness">Thickness of the line geometry</param>
            <param name="isHitTestVisible">Boolean determine if the geometry is hit test visible in the scene</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.ComputeClipPlaneDistances(SharpDX.Vector3,SharpDX.Vector3,System.Collections.Generic.IEnumerable{HelixToolkit.Wpf.SharpDX.Element3D},System.Double,System.Double@,System.Double@,System.Double,System.Double)">
            <summary>
            This method clamps the near and far clip planes around the scene geometry
            to achiever higher z-buffer precision.
            
            It does this by finding the distance from each GeometryModel3D object's corner points
            to the camera plane. The camera's far clip plane is set to 2 * dfar, and the camera's 
            near clip plane is set to nearPlaneDistanceFactor * dnear
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.FindIdentifiersForCustomNodes(Dynamo.Graph.Workspaces.HomeWorkspaceModel)">
            <summary>
            Find all output identifiers for all custom nodes in the provided workspace. 
            </summary>
            <param name="workspace">A workspace</param>
            <returns>An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:System.String"/> containing all output identifiers for 
            all custom nodes in the provided workspace, or null if the workspace is null.</returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel.ComputeBoundsForGeometry(HelixToolkit.Wpf.SharpDX.GeometryModel3D[])">
            <summary>
            For a set of selected nodes, compute a bounding box which
            encompasses all of the nodes' generated geometry.
            </summary>
            <param name="geometry">A collection of <see cref="T:HelixToolkit.Wpf.SharpDX.GeometryModel3D"/> objects.</param>
            <returns>A <see cref="T:SharpDX.BoundingBox"/> object.</returns>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.Element3DComparer">
            <summary>
            The Model3DComparer is used to sort arrays of Model3D objects. 
            After sorting, the target array's objects will be organized
            as follows:
            1. All not GeometryModel3D objects
            2. All opaque mesh geometry
            3. All opaque line geometry
            4. All opaque point geometry
            5. All transparent geometry, ordered by distance from the camera.
            6. All text.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.BoundingBoxExtensions.ToRect3D(SharpDX.BoundingBox,System.Double)">
            <summary>
            Convert a <see cref="T:SharpDX.BoundingBox"/> to a <see cref="T:System.Windows.Media.Media3D.Rect3D"/>
            </summary>
            <param name="bounds">The <see cref="T:SharpDX.BoundingBox"/> to be converted.</param>
            <param name="minRectSize"> No dimension of the resulting Rect3d will be smaller than this length.</param>
            <returns>A <see cref="T:System.Windows.Media.Media3D.Rect3D"/> object.</returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.BoundingBoxExtensions.Bounds(HelixToolkit.Wpf.SharpDX.GeometryModel3D,System.Single)">
            <summary>
            If a <see cref="T:HelixToolkit.Wpf.SharpDX.GeometryModel3D"/> has more than one point, then
            return its bounds, otherwise, return a bounding
            box surrounding the point of the supplied size.
            
            This extension method is to correct for the Helix toolkit's GeometryModel3D.Bounds
            property which does not update correctly as new geometry is added to the GeometryModel3D.
            </summary>
            <param name="pointGeom">A <see cref="T:HelixToolkit.Wpf.SharpDX.GeometryModel3D"/> object.</param>
            <returns>A <see cref="T:SharpDX.BoundingBox"/> object encapsulating the geometry.</returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.Watch3DViewModelStartupParams.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.Watch3DViewModelStartupParams.#ctor(Dynamo.Models.DynamoModel)">
            <summary>
            Constructor
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel">
            <summary>
            The DefaultWatch3DViewModel is the base class for all 3D previews in Dynamo.
            Classes which derive from this base are used to prepare geometry for
            rendering by various render targets. The base class handles the registration
            of all necessary event handlers on models, workspaces, and nodes.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.PreferenceWatchName">
            <summary>
            Represents the name of current Watch3DViewModel which will be saved in preference settings
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.Active">
            <summary>
            A flag which indicates whether this Watch3DView should process
            geometry updates. When set to False, the Watch3DView corresponding
            to this view model is not displayed.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.IsGridVisible">
            <summary>
            A flag indicating whether the grid is visible in 3D.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.GridScale">
            <summary>
            Sets the scale of the Grid helper
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.Name">
            <summary>
            A name which identifies this view model when multiple
            Watch3DViewModel objects exist.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.IsBackgroundPreview">
            <summary>
            A flag which indicates whether this view model is used for a background preview.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.CanNavigateBackground">
            <summary>
            Indicate if user can natigvate background geometry view
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.IsolationMode">
            <summary>
            A flag which indicates whether Isolate Selected Geometry mode is activated.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.navigationKeyIsDown">
            <summary>
            A flag which indicates whether the user is holding the
            navigation override key (ESC).
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.IsPanning">
            <summary>
            A flag which indicates whether the Watch3DViewModel
            is currently in pan mode.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.IsOrbiting">
            <summary>
            A flag which indicates whether the Watch3DViewModel
            is currently in orbit mode.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.#ctor(Dynamo.Graph.Nodes.NodeModel,Dynamo.Wpf.ViewModels.Watch3D.Watch3DViewModelStartupParams)">
            <summary>
            The DefaultWatch3DViewModel is used in contexts where a complete rendering environment
            cannot be established. Typically, this is machines that do not have GPUs, or do not
            support DirectX 10 feature levels. For most purposes, you will want to use a <see cref="T:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel"/>
            </summary>
            <param name="model">The NodeModel that this watch is displaying.</param>
            <param name="parameters">A Watch3DViewModelStartupParams object.</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.Setup(Dynamo.ViewModels.IDynamoViewModel,Dynamo.Visualization.IRenderPackageFactory)">
            <summary>
            Call setup to establish the visualization context for the
            Watch3DViewModel. Because the Watch3DViewModel is passed into the DynamoViewModel,
            Setup is required to fully establish the rendering context.
            </summary>
            <param name="viewModel">An IDynamoViewModel object.</param>
            <param name="renderPackageFactory">An IRenderPackageFactory object.</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.UpdateHelpers">
            <summary>
            Updates background graphic helpers
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.CanNavigateBackgroundPropertyChanged">
            <summary>
            Event to be handled when the background preview is toggled on or off
            On/off state is passed using the bool parameter
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.RegenerateAllPackages">
            <summary>
            Forces a regeneration of the render packages for all nodes.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.RemoveGeometryForNode(Dynamo.Graph.Nodes.NodeModel)">
            <summary>
            Call this method to remove render pakcages that created by node.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.AddGeometryForRenderPackages(Dynamo.Visualization.RenderPackageCache,System.Boolean)">
            <summary>
            Call this method to add the render package.
            </summary>
            <param name="packages"></param>
            <param name="forceAsyncCall"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.ClearPathLabel(System.String)">
            <summary>
            Remove the labels (in Watch3D View) for geometry once the Watch node is disconnected
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.GenerateViewGeometryFromRenderPackagesAndRequestUpdate(Dynamo.Visualization.RenderPackageCache)">
            <summary>
            Called from derived classes when a collection of render packages
            are available to be processed as render geometry.
            </summary>
            <param name="taskPackages">A collection of packages from which to
            create render geometry.</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel.GetClickRay(System.Windows.Input.MouseEventArgs)">
            <summary>
            Returns a 3D ray from the camera to the given mouse location
            in world coordinates that can be used to perform a hit-test
            on objects in the view
            </summary>
            <param name="args">mouse click location in screen coordinates</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.IRay">
            <summary>
            Interface to expose origin point and direction vector of any given Ray
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.RenderDescriptions">
            <summary>
            These constants are defined to specify special render packages, so that
            they can be rendered differently.
            
            If a render package description starts with any of the following constants
            that will be rendered differently.
            
            We need to ensure that all the strings are of same length and starts with 
            an alphabet. Usually these are taken from the last part of a GUID.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.RenderDescriptions.ManipulatorAxis">
            <summary>
            Draws line strip segment as a 3D arrow.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.RenderDescriptions.AxisLine">
            <summary>
            Draws line strip segment as thin(0.3) line to represent axis line.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.RenderDescriptions.ManipulatorPlane">
            <summary>
            Draws a line strip segment as little thinner(0.7) line to represent a plane.
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel">
            <summary>
            An interface to expose API's on the Watch UI ViewModel to extensions
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.GetClickRay(System.Windows.Input.MouseEventArgs)">
            <summary>
            Returns a 3D ray from the camera to the given mouse location
            in world coordinates that can be used to perform a hit-test 
            on objects in the view
            </summary>
            <param name="args">mouse click location in screen coordinates</param>
            <returns></returns>
        </member>
        <member name="P:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.PreferenceWatchName">
            <summary>
            Represents the name of current IWatch3DViewModel which will be saved in preference settings
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.GetCameraPosition">
            <summary>
            Returns the current camera position of the 3D background preview
            Note: GetCameraInformation returns the camera position but without the correct
            transformation to model coordinates. This function takes care of that transformation
            TODO: Task to fix GetCameraInformation to return the correct camera position
            so that we can remove this API and simply use GetCameraInformation consistently
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.GetCameraInformation">
            <summary>
            Returns information about camera position in background 3D preview
            </summary>
            <returns>Information about camera position</returns>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.AddGeometryForRenderPackages(Dynamo.Visualization.RenderPackageCache,System.Boolean)">
            <summary>
            Converts render packages into drawable geometry primitives 
            for display in the canvas
            </summary>
            <param name="packages">render packages to be drawn</param>
            <param name="forceAsyncCall">set to 'true' if calling from UI thread and still need to queue 
            the creation of display geometry for asynchronous execution</param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.DeleteGeometryForIdentifier(System.String,System.Boolean)">
            <summary>
            Finds a geometry corresponding to a string identifier
            and removes it from the collection of geometry objects to be drawn
            </summary>
            <param name="identifier"></param>
            <param name="requestUpdate"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.DeleteGeometryForNode(Dynamo.Graph.Nodes.NodeModel,System.Boolean)">
            <summary>
            Finds geometries corresponding to a node and remove
            them from the collection of geometry objects to be drawn.
            </summary>
            <param name="node"></param>
            <param name="requestUpdate"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.HighlightNodeGraphics(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.NodeModel})">
            <summary>
            Highlight geometry corresponding to their respective nodes 
            </summary>
            <param name="nodes"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.UnHighlightNodeGraphics(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.NodeModel})">
            <summary>
            Unhighlight geometry corresponding to their respective nodes 
            </summary>
            <param name="nodes"></param>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.Invoke(System.Action)">
            <summary>
            Invoke an Action synchronously on the UI thread via the ViewModel's Dispatcher 
            </summary>
            <param name="action"></param>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.ViewMouseDown">
            <summary>
            Event to be handled for a mouse down event in the Watch view
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.ViewMouseUp">
            <summary>
            Event to be handled for a mouse up event in the Watch view
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.ViewMouseMove">
            <summary>
            Event to be handled for a mouse move event in the Watch view
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.CanNavigateBackgroundPropertyChanged">
            <summary>
            Event to be handled when the background preview is toggled on or off
            On/off state is passed using the bool parameter
            </summary>
        </member>
        <member name="E:Dynamo.Wpf.ViewModels.Watch3D.IWatch3DViewModel.ViewCameraChanged">
            <summary>
            Camera changed events to be handled for zoom/pan/rotate events in watch view
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.AttachedProperties">
            <summary>
            The AttachedProperties class includes a number of Dependency
            Properties used by Dynamo to extend the capabilities of 
            GeometryModel3D objects. 
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.AttachedProperties.ShowSelectedProperty">
            <summary>
            A flag indicating whether the geometry renders as selected.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.AttachedProperties.HasTransparencyProperty">
            <summary>
            A flag indicating whether the geometry has transparency.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.AttachedProperties.IsFrozenProperty">
            <summary>
            A flag indicating whether the geometry is frozen
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.AttachedProperties.IsFrozenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This updates the transparency on the Geometry object.
            </summary>
            <param name="obj">The object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.AttachedProperties.IsolationModeProperty">
            <summary>
            A flag indicating whether the geometry is currently under Isolate Selected Geometry mode.
            </summary>
        </member>
        <member name="F:Dynamo.Wpf.ViewModels.Watch3D.AttachedProperties.IsSpecialRenderPackageProperty">
            <summary>
            A flag indicating whether the geometry is special render package, such as used to draw manipulators.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.ViewModels.Watch3D.AttachedProperties.HandleMeshPropertyChange(Dynamo.Wpf.ViewModels.Watch3D.DynamoGeometryModel3D,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Sets the property value on the DynamoMeshCore - this makes its way down to our shader and invalidates the render.
            </summary>
            <param name="meshGeom"></param>
            <param name="args"></param>
        </member>
        <member name="T:Dynamo.Wpf.ViewModels.Watch3D.DynamoEffectsManager">
            <summary>
            The DynamoEffectsManager loads shaders
            from shader byte code, and defines data layouts for rendering. 
            By extending the DefaultEffectsManager, the DynamoEffectsManager 
            makes available effects like Blinn rendering, and adds custom
            Dynamo rendering shaders for meshes.
            For an intro to dx vertex and fragment shaders see 
            https://docs.microsoft.com/en-us/windows/win32/direct3dgetstarted/work-with-shaders-and-shader-resources
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.Debug.DebugModesWindow">
            <summary>
            Interaction logic for DebugModesWindow.xaml
            </summary>
            <summary>
            DebugModesWindow
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.Debug.DebugModesWindow.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.Debug.DebugModesWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.FileTrust.FileTrustWarning">
            <summary>
            Interaction logic for RealTimeInfoWindow.xaml
            </summary>
            <summary>
            FileTrustWarning
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.FileTrust.FileTrustWarning.UpdatePopupLocation">
            <summary>
            Relocate the Popup when the Dynamo window is moved or resized
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.FileTrust.FileTrustWarning.ManagePopupActivation(System.Boolean)">
            <summary>
            This method will show/hide the Popup when the main window is Activated or Deactivated
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.FileTrust.FileTrustWarning.CloseWarningPopup">
            <summary>
            Close the warning popup
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.FileTrust.FileTrustWarning.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.GuidedTour.ExitGuideWindow">
            <summary>
            Interaction logic for ExitGuideWindow.xaml
            </summary>
            <summary>
            ExitGuideWindow
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.ExitGuideWindow.HideRichTextBox">
            <summary>
            This method hides the text box to give the possibility to use this popup in other steps
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.ExitGuideWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.GuidedTour.RealTimeInfoWindow">
            <summary>
            Interaction logic for RealTimeInfoWindow.xaml
            </summary>
            <summary>
            RealTimeInfoWindow
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Views.GuidedTour.RealTimeInfoWindow.TextContent">
            <summary>
            This property contains the text that will be shown in the popup and it can be updated on runtime.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.RealTimeInfoWindow.GuideFlowEvents_GuidedTourStart(Dynamo.Wpf.UI.GuidedTour.GuidedTourStateEventArgs)">
            <summary>
            This method remove the existing subscription to events and close the current RealTimeInfo window
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.RealTimeInfoWindow.GuideFlowEvents_GuidedTourFinish(Dynamo.Wpf.UI.GuidedTour.GuidedTourStateEventArgs)">
            <summary>
            When the Tour has finished we need to close the RealTimeInfo window and remove subscriptions to events
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.RealTimeInfoWindow.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method is executed when the Close button in the RealTimeInfo window is pressed, so we clean the subscriptions to events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.RealTimeInfoWindow.UpdateLocation">
            <summary>
            This method will update the current location of the RealTimeInfo window due that probably the window was moved or resized
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.RealTimeInfoWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.GuidedTour.GuideBackground">
            <summary>
            Interaction logic for GuideBackground.xaml
            </summary>
            <summary>
            GuideBackground
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Views.GuidedTour.GuideBackground.OverlayRect">
            <summary>
            Rect with the size of the Dynamo Window regularly updating its size depending the window's size, this will be used for drawing the overlay
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Views.GuidedTour.GuideBackground.CutOffBackgroundArea">
            <summary>
            Property that holds information used to cut a rectangle on the guide background so the user can have interaction
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Views.GuidedTour.GuideBackground.HighlightBackgroundArea">
            <summary>
            Property that holds information used for drawing the Highlight rectangle on the guide background 
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.GuideBackground.ClearHighlightSection">
            <summary>
            This method clears the Highlight rectangle from the Canvas
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.GuideBackground.ClearCutOffSection">
            <summary>
            This method will clean the cutoff area so the removed rectangle will be shown again
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.GuideBackground.MainWindow_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            This method updates the width and height of the background window everytime it resizes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.GuideBackground.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.GuidedTour.PopupWindow">
            <summary>
            Interaction logic for PopupWindow.xaml
            </summary>
            <summary>
            PopupWindow
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Views.GuidedTour.PopupWindow.WebBrowserUserDataFolder">
            <summary>
            This property will be hold the path of the WebView2 cache folder, the value will change based in if DynamoSandbox is executed or Dynamo is executed from a different host (like Revit, FormIt, Civil, etc).
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.PopupWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.GuidedTour.RatingControl">
            <summary>
            Interaction logic for RatingControl.xaml
            </summary>
            <summary>
            RatingControl
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Views.GuidedTour.RatingControl.Value">
            <summary>
            This property represent the rating(Value) provided by the user
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.RatingControl.RatingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method will be executed everytime the RatingControl DependencyProperty change
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Arguments</param>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.RatingControl.ClickEventHandler(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method will be executed when a specific star in the Rating controls is clicked and the rating Value is updated
            </summary>
            <param name="sender">Sender</param>
            <param name="args">Arguments</param>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.RatingControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.GuidedTour.SurveyPopupWindow">
            <summary>
            Interaction logic for SurveyPopupWindow.xaml
            </summary>
            <summary>
            SurveyPopupWindow
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.SurveyPopupWindow.#ctor(Dynamo.Wpf.ViewModels.GuidedTour.SurveyPopupViewModel,Dynamo.Wpf.UI.GuidedTour.HostControlInfo)">
            <summary>
            Constructor
            </summary>
            <param name="viewModel"></param>
            <param name="hInfo"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.GuidedTour.SurveyPopupWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.TrustedPathView">
            <summary>
            Interaction logic for TrustedPathView.xaml
            </summary>
            <summary>
            TrustedPathView
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.TrustedPathView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.PackageManager.PackagePathView">
            <summary>
            Interaction logic for PackagePathView.xaml
            </summary>
            <summary>
            PackagePathView
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.PackageManager.PackagePathView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.PreferencesView">
            <summary>
            Interaction logic for PreferencesView.xaml
            </summary>
            <summary>
            PreferencesView
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.StoreOriginalCustomGroupStyles">
            <summary>
            Storing the original custom styles before the user could update them
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.#ctor(Dynamo.Controls.DynamoView)">
            <summary>
            Constructor of Preferences View
            </summary>
            <param name="dynamoViewModel"> Dynamo ViewModel</param>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.SetupPreferencesViewModel(Dynamo.ViewModels.DynamoViewModel)">
             <summary>
            Given that the PreferencesViewModel persists through the Dynamo session, 
            this method will setup all the necessary properties for when the Preferences window is opened.
             </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.TrustedPathsViewModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Evaluates if the user interacts over the Trusted Locations
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.InitRadioButtonsDescription">
            <summary>
            Add inline description for each geometry scalling radio button
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Dialog close button handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.PreferencesPanel_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            handler for preferences dialog dragging action. When the TitleBar is clicked this method will be executed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.OnMoreInfoClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Unified handler for more info request from mouse left button click
            </summary>
            <param name="sender">sender control</param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Wpf.Views.PreferencesView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.Preview.Watch3DSettingsControl">
            <summary>
            Interaction logic for Watch3DSettingsControl.xaml
            </summary>
            <summary>
            Watch3DSettingsControl
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.Preview.Watch3DSettingsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Views.CodeHighlightingRuleFactory">
            <summary>
            Help to create rules related to code highligh
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Views.CodeHighlightingRuleFactory.CreateNumberHighlightingRule">
            <summary>
            Create hight lighting rule for number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.Views.CodeHighlightingRuleFactory.CreateClassHighlightRule(Dynamo.Engine.EngineController)">
            <summary>
            Create hight lighting rule for class.
            </summary>
            <param name="engineController"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Wpf.Views.CodeHighlightingRuleFactory.CreateMethodHighlightRule(Dynamo.Engine.EngineController)">
            <summary>
            Create hight lighting rule for method.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dynamo.Wpf.BrowserWindow">
            <summary>
            BrowserWindow
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.BrowserWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Windows.ExtensionWindow">
            <summary>
            Interaction logic for ExtensionWindow.xaml
            </summary>
            <summary>
            ExtensionWindow
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Windows.ExtensionWindow.DockRequested">
            <summary>
            Indicates whether the window was closed using the dock button.
            Note: Setter is internal for testing purposes only.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Windows.ExtensionWindow.ShouldMaximize">
            <summary>
            Indicates if the window should be maximized when it is loaded.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Windows.ExtensionWindow.#ctor">
            <summary>
            Creates a window with an initially empty window rectangle.
            Note: This constructor assumes Owner is set externally.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Windows.ExtensionWindow.#ctor(System.Windows.DependencyObject,Dynamo.Wpf.Windows.ModelessChildWindow.WindowRect@)">
            <summary>
            Creates a window with the specified owner and window rectangle.
            </summary>
            <param name="viewParent">A UI object in the Dynamo visual tree.</param>
            <param name="rect">A reference to the Rect object that will store the window's position during this session.</param>
        </member>
        <member name="M:Dynamo.Wpf.Windows.ExtensionWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Windows.ModelessChildWindow.WindowRect">
            <summary>
             Screen position of the child window (in a reference type.)
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Windows.ModelessChildWindow.SavedWindowRect">
            <summary>
            Gets the window rectangle (location + size)
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Windows.ModelessChildWindow.#ctor">
            <summary>
            Creates a window with an initially empty window rectangle.
            Note: This constructor assumes Owner is set externally.
            </summary>
        </member>
        <member name="M:Dynamo.Wpf.Windows.ModelessChildWindow.#ctor(System.Windows.DependencyObject,Dynamo.Wpf.Windows.ModelessChildWindow.WindowRect@)">
            <summary>
            Construct a ModelessChildWindow.
            </summary>
            <param name="viewParent">A UI object in the Dynamo visual tree.</param>
            <param name="rect">A reference to the Rect object that will store the window's position during this session.</param>
        </member>
        <member name="T:Dynamo.ViewModels.ConnectorPinViewModel">
            <summary>
            This partial class (will) contain delegate commands relating
            to grouping/ungrouping ConnectorPins.
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.ConnectorPinViewModel.RequestSelect">
            <summary>
            Raises a 'select' event for this ConnectorPinViewModel
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.ConnectorPinViewModel.RequestRedraw">
            <summary>
            Raises a 'redraw' event for this ConnectorPinViewModel
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.ConnectorPinViewModel.RequestRemove">
            <summary>
            Raises a 'remove' event for this ConnectorPinViewModel
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.ConnectorPinViewModel.zIndex">
            initialize the start Z-Index of a pin to a default
            zIndex is mutable depending on mouse behaviour
        </member>
        <member name="F:Dynamo.ViewModels.ConnectorPinViewModel.StaticZIndex">
            <summary>
            StaticZIndez is static Z-level of all ConnectorPins (which currently is
            set to match that of nodes)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.ZIndex">
            <summary>
            ZIndex represents the order on the z-plane in which the pins and other objects appear. 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.Model">
            <summary>
            ConnectorPinModel reference (listens to property changes of it).
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.OneThirdWidth">
            <summary>
            This property is used to center the ConnectorPinIcon in views
            as well as to offset the coordinate used for drawing
            bezier connectors through.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.Left">
            <summary>
            Element's center position is two-way bound to this value
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.Top">
            <summary>
            Element's center position is two-way bound to this value
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.IsHoveredOver">
            <summary>
            This flag let's the ConnectorViewModel when it can and cannot run a ConnectorContextMenu. It CANNOT
            do so when IsHoveredOver for any pin is set to true, as in that case we want only that ConnectorPins 
            ContextMenu to be enabled on right click.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.IsSelected">
            <summary>
            Provides the ViewModel (this) with the selected state of the ConnectorPinModel.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.IsTemporarilyVisible">
            <summary>
            Provides the ViewModel (this) with the visibility state of the Connector.
            When set to 'hidden', 'IsHalftone' is set to true, and viceversa.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.ConnectorGuid">
            <summary>
            This property is purely used for serializing/ deserializing.
            In reconstructing ConnectorPins, we need to know what Connector they belong to.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorPinViewModel.UnpinConnectorCommand">
            <summary>
            Delegate command handling the removal of this ConnectorPin from its corresponding connector.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorPinViewModel.#ctor(Dynamo.ViewModels.WorkspaceViewModel,Dynamo.Graph.ConnectorPinModel)">
            <summary>
            Constructor
            </summary>
            <param name="workspaceViewModel"></param>
            <param name="model"></param>
        </member>
        <member name="F:Dynamo.ViewModels.AutomationSettings.EXIT_ATTRIB_NAME">
            <summary>
            This attribute specifies if Dynamo main window should be 
            closed after all the loaded commands have been played back. 
            This is set to "true" by default for recorded command files.
            </summary>
            
        </member>
        <member name="F:Dynamo.ViewModels.AutomationSettings.PAUSE_ATTRIB_NAME">
            <summary>
            This attribute specifies the amount of time in milliseconds that 
            Dynamo window should pause before closing. This value is ignored 
            if ExitAttribName is set to "false" (in which case Dynamo 
            window will not be closed after playback is completed).
            </summary>
            
        </member>
        <member name="F:Dynamo.ViewModels.AutomationSettings.INTERVAL_ATTRIB_NAME">
            <summary>
            This attribute specifies the interval between two consecutive 
            commands in milliseconds. When a command is completed, the next 
            command will be executed after this interval elapsed. The default
            value for command interval is 20 milliseconds.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AutomationSettings.HasPendingEvaluation">
            <summary>
            When HomeWorkspace.RunSettings.RunType is set to Automatically, "HomeWorkspace"
            starts its internal "DispatcherTimer" whenever its content is being 
            modified. This timer starts a round of evaluation after a predefined 
            amount of time has ellapsed, preventing modifications in quick 
            succession from triggering too many evaluations. However, the timer 
            does not always have a chance to tick. This is especially true when 
            AutomationSettings exhausted all available commands in its list and 
            is ready to end the current test run. The shutdown timer that  
            AutomationSettings kicks start may tick before the evaluation timer 
            in WorkspaceModel has a chance to tick. When this happens, validation
            code at the end of the recorded test ends up with invalid evaluation
            results, failing the test case.
            </summary>
            <returns>Returns true if there is a pending evaluation and that the 
            shutdown process should be deferred.</returns>
            
        </member>
        <member name="F:Dynamo.ViewModels.ConnectorViewModel.hoverTimer">
            <summary>
            Required timer for desired delay prior to ' connector anchor' display.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.ConnectorPinViewCollection">
            <summary>
            Collection of ConnectorPinViewModels associated with this connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.BezierControlPoints">
            <summary>
            Used to draw multi-segment bezier curves.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.PanelX">
            <summary>
            Property tracks 'X' location from mouse poisition
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.PanelY">
            <summary>
            Property tracks 'Y' property of the mouse position
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.MousePosition">
            <summary>
            Constructed mouse position (point) for children of this viewmodel to consume.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.ConnectorAnchorViewModel">
            <summary>
            This WatchHoverViewModel controls the visibility and behaviour of the WatchHoverIcon
            which appears when you hover over this connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.ConnectorContextMenuViewModel">
            <summary>
            Instantiates the context menu when required.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.ActiveStartPort">
            <summary>
            Used to point to the active start port corresponding to this connector
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.ConnectorModel">
            <summary>
            Refers to the connector model associated with this connector view model.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.IsConnecting">
            <summary>
            Provides us with the status of this connector with regards to whether it is currently connecting.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.IsCollapsed">
            <summary>
            Controls connector visibility: on/off. When wire is off, additional styling xaml turns off tooltips.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.IsTemporarilyDisplayed">
            <summary>
            Property which overrides 'isDisplayed==false' condition. When this prop is set to true, wires are set to 
            40% opacity.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.ConnectorDataTooltip">
            <summary>
            Contains up-to-date tooltip corresponding to connector you are hovering over.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.CanShowConnectorTooltip">
            <summary>
            Flag controlling whether the connector tooltip is visible.
            Worth noting that in addition to this flag, connector tooltip
            is only visible when the connectors are set to
            'bezier' mode.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.IsDataFlowCollection">
            <summary>
            Property to determine whether the data corresponding to this connector holds a collection or a single value.
            'Collection' is defined as 5 or more items in this case.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.MouseHoverOn">
            <summary>
            Flags whether or not the user is hovering over the current connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.ConnectorAnchorViewModelExists">
            <summary>
            Flags whether or not the user is hovering over the current connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.Left">
            <summary>
            Binding property for connector canvas
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.Top">
            <summary>
            Binding property for connector canvas
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.CurvePoint0">
            <summary>
                The start point of the path pulled from the port's center
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.AnyPinSelected">
            <summary>
            Toggle used to turn Connector PreviewState to the correct state when a pin is selected.
            Modelled after connector preview behaviour when a node is selected.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.UpdateConnectorDataToolTip">
            <summary>
            Updates 'ConnectorDataTooltip' to reflect data of wire being hovered over.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.BreakConnectionCommand">
            <summary>
            Delegate command used to dispose the existing connector and thus
            its connectivity to nodes.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.ShowhideConnectorCommand">
            <summary>
            Delegate command used to set the visibility of the connector to 'transparent'.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.SelectConnectedCommand">
            <summary>
            Delegate command us to select the nodes connected to this connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.MouseHoverCommand">
            <summary>
            Delegate command to run when the mouse is hovering over this connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.MouseUnhoverCommand">
            <summary>
            Delegate command to run when the mouse just ended hovering over this connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.PinConnectorCommand">
            <summary>
            Delegate command to run when 'Pin Wire' item is clicked on this connector ContextMenu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.InstantiateContextMenuCommand">
            <summary>
            Delegate command to trigger a construction of a ContextMenu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.GoToStartNodeCommand">
            <summary>
            Delegate command to focus the view on the start node
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorViewModel.GoToEndNodeCommand">
            <summary>
            Delegate command to focus the view on the end node
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.MouseHoverCommandExecute(System.Object)">
            <summary>
            When mouse hovers over connector, if the data coming through the connector is collection of 5 or more,
            a 'watch' icon appears at the midpoint of the connector, enabling the user to place a watch node
            at that location by clicking on it.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.MouseUnhoverCommandExecute(System.Object)">
            <summary>
            Timer gets triggered when the user 'unhovers' from the connector. This allows enough time for the user
            to click on the 'watch' icon.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.FlipOnConnectorAnchor">
            <summary>
            Called from outside during unit tests and thus 'internal' as opposed to 'private'.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.StartTimer(System.Windows.Threading.DispatcherTimer,System.TimeSpan)">
            <summary>
            If hover == true, then after the timer is up something will appear.
            IF set to false, the object in question will disappear.
            </summary>
            <param name="timer"></param>
            <param name="timeSpan"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.TimerDoneShow(System.Object,System.EventArgs)">
            <summary>
            Handles showing ConnectorAnchor when timer is stopped.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.ForceTimerOff(System.Windows.Threading.DispatcherTimer)">
            <summary>
            Stops timer, sets ConnectorAnchorViewModel to null.
            </summary>
            <param name="timer"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.BreakConnectionCommandExecute(System.Object)">
            <summary>
            Breaks connections between node models it is connected to.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.HideConnectorCommandExecute(System.Object)">
            <summary>
            Toggles wire viz on/off. This can be overwritten when a node is selected in hidden mode.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.SelectConnectedCommandExecute(System.Object)">
            <summary>
            Selects nodes connected to this wire.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.PinConnectorCommandExecute(System.Object)">
            <summary>
            Places pin at the location of mouse (over a connector)
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.InstantiateContextMenuCommandExecute(System.Object)">
            <summary>
            Instantiates this connector's ContextMenu.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.PinConnectorPlacementFromWatchNode(Dynamo.Graph.Connectors.ConnectorModel[],System.Int32,System.Windows.Point,System.Collections.Generic.List{Dynamo.Graph.ModelBase})">
            <summary>
            Helper function ssed for placing (re-placing) connector
            pins when a WatchNode is placed in the center of a connector.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.#ctor(Dynamo.ViewModels.WorkspaceViewModel,Dynamo.Graph.Nodes.PortModel)">
            <summary>
            Construct a view and start drawing.
            </summary>
            <param name="workspace"></param>
            <param name="port"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.#ctor(Dynamo.ViewModels.WorkspaceViewModel,Dynamo.Graph.Connectors.ConnectorModel)">
            <summary>
            Construct a view and respond to property changes on the model. 
            </summary>
            <param name="workspace"></param>
            <param name="connectorModel"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.RemoveConnectorPinModelViewModel(Dynamo.Graph.ConnectorPinModel)">
            <summary>
            Removes connectorPinViewModel, given a model
            </summary>
            <param name="connectorPin"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.RemoveConnectorPinModelViewModel(Dynamo.ViewModels.ConnectorPinViewModel)">
            <summary>
            Removes connectorPinViewModel from collections it belongs to.
            </summary>
            <param name="connectorPinViewModel"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.AddConnectorPinViewModel(Dynamo.Graph.ConnectorPinModel)">
            <summary>
            View model adding method only- given a model
            </summary>
            <param name="pinModel"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.PinViewModelPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Checking to see if any connector pin is selected, if so
            global 'AnyPinSelected' is set to true and wire Preview State is set to 'Selected'
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.HandleConnectorPinViewModelRemove(System.Object,System.EventArgs)">
            <summary>
            Handles ConnectorPin 'Unpin' command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.Dispose">
            <summary>
            Dispose function
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.StartOwner_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            If the start owner changes position or size, redraw the connector.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.EndOwner_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            If the end owner changes position or size, redraw the connector.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.DiscardAllConnectorPinModels(System.Collections.Generic.List{Dynamo.Graph.ModelBase})">
            <summary>
             Removes all connectorPinViewModels/ connectorPinModels. This occurs during 'dispose'
            operation as well as during the 'PlaceWatchNode', where all previous pins corresponding 
            to a connector are cleareed.
            </summary>
            <param name="allDeletedModels"> This argument is used when placing a WatchNode from ConnectorAnchorViewModel. A reference
            to all previous pins is required for undo/redo recorder.</param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.CollectPinLocations">
            <summary>
            Collects pin locations of a connector. These are needed to reconstruct
            pins when new connectors are constructed. Specifically when a Watch node is 
            placed on a connector, thereby creating new connectors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.Redraw">
            <summary>
                Recalculate the path points using the internal model.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.Redraw(System.Object)">
            <summary>
            Recalculate the connector's points given the end point
            </summary>
            <param name="p2">The position of the end point</param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorViewModel.BreakIntoPointPairs(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Point pairs from a chain of sorted points.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.BeginCommandPlayback(System.Windows.Window)">
            <summary>
            DynamoView calls this method at the end of its initialization
            sequence so that loaded commands, if any, begin to playback.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.DumpRecordedCommands">
            <summary>
            Saves all recorded commands on disk (%TMP%/Commands-{0:yyyyMMdd-hhmmss}.xml)
            </summary>
            <returns>The path to the commands file</returns>
        </member>
        <member name="F:Dynamo.ViewModels.DynamoViewModel.workspaces">
            <summary>
            An observable collection of workspace view models which tracks the model.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.DockedNodeWindows">
            <summary>
            Set of node window id's that are currently docked in right side sidebar.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.NodeWindowsState">
            <summary>
             Node window's state, either DockRight or FloatingWindow.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.SideBarTabItems">
            <summary>
            Collection of Right SideBar tab items: view extensions and docked windows.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.MainGuideManager">
            <summary>
            Guided Tour Manager
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.LinterIssuesCount">
            <summary>
            Count of unresolved issues on the linter manager.
            This is used for binding in the NotificationsControl
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.FileTrustViewModel">
            <summary>
            This property is the ViewModel that will be passed to the File Trust Warning popup when is created.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.CurrentWorkspaceIndex">
            <summary>
            The index in the collection of workspaces of the current workspace.
            This property is bound to the SelectedIndex property in the workspaces tab control
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.CurrentSpaceViewModel">
            <summary>
            Returns the workspace view model whose workspace model is the model's current workspace
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.ShowPreviewBubbles">
            <summary>
            Indicates if preview bubbles should be displayed on nodes.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.ShowCodeBlockLineNumber">
            <summary>
            Indicates if line numbers should be displayed on code block nodes.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.EnableNodeAutoComplete">
            <summary>
            Indicates whether to enabled node Auto Complete feature for port interaction.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.IsShowingConnectorTooltip">
            <summary>
            Relaying the flag `IsShowingConnectorTooltip' coming from
            the Dynamo model.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.ShowLogin">
            <summary>
                Whether sign in should be shown in Dynamo.  In instances where Dynamo obtains
                authentication capabilities from a host, Dynamo's sign in should generally be 
                hidden to avoid inconsistencies in state.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.Watch3DViewModels">
            <summary>
            A collection of <see cref="T:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel"/> objects. 
            
            Each DefaultWatch3DViewModel object is responsible for converting
            data for visualization in a different context. For example, the 
            <see cref="T:Dynamo.Wpf.ViewModels.Watch3D.HelixWatch3DViewModel"/> provides the geometry for the
            background preview.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.BackgroundPreviewViewModel">
            <summary>
            A <see cref="T:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel"/> which provides the
            geometry for the primary background 3d preview.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.PythonScriptEditorTextOptions">
            <summary>
            Gets/Sets the text editor options for python script editor.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.ShowTabsAndSpacesInScriptEditor">
            <summary>
            Indicates if the whitespaces and tabs should be visible in the python script editor.
            This property is for the global whitespace toggle option in settings menu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.StartConfiguration.BrandingResourceProvider">
            <summary>
            This property is initialized if there is an external host application
            at startup in order to be used to pass in host specific resources to DynamoViewModel
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.StartConfiguration.HideReportOptions">
            <summary>
            If true, Analytics and Usage options are hidden from UI 
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.RegisterWatch3DViewModel(Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel,Dynamo.Visualization.IRenderPackageFactory)">
            <summary>
            Sets up the provided <see cref="T:Dynamo.Wpf.ViewModels.Watch3D.DefaultWatch3DViewModel"/> object and 
            adds it to the Watch3DViewModels collection.
            </summary>
            <param name="watch3DViewModel"></param>
            <param name="factory"></param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ReportABug(System.Object)">
            <summary>
            Opens a new browser window pointing to the Dynamo repo new issue page, pre-filling issue 
            title and content based on crash details. Uses system default browser.
            </summary>
            <param name="bodyContent">Crash details body. If null, nothing will be filled-in.</param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ClearLog(System.Object)">
            <summary>
            Clear the UI log.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.AddNote(System.Object)">
            <summary>
            After command framework is implemented, this method should now be only 
            called from a menu item (i.e. Ctrl + W). It should not be used as a way
            for any other code paths to create a note programmatically. For that we
            now have AddNoteInternal which takes in more configurable arguments.
            </summary>
            <param name="parameters">This is not used and should always be null,
            otherwise an ArgumentException will be thrown.</param>
            
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.CanCloseDockedNodeWindows(System.Collections.ObjectModel.ObservableCollection{Dynamo.ViewModels.NodeViewModel})">
            <summary>
            Closes any docked python script windows if there are no unsaved changes.
            Show warning message on the script editor if it has unsaved changes.
            </summary>
            <param name="nodes">Nodes in the workspace</param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.GetSaveDialog(Dynamo.Graph.Workspaces.WorkspaceModel)">
            <summary>
            Returns the file-save dialog with customized file types of Dynamo.
            </summary>
            <param name="workspace"></param>
            <returns>A customized file-save dialog</returns>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.OpenFromJsonIfSaved(System.Object)">
            <summary>
            Attempts to open a file using the Json content passed to OpenFromJsonCommand, but wraps
            the call with a check to make sure no unsaved changes to the HomeWorkspace are lost.
            </summary>
            <param name="openFromJsonCommand"> <see cref="T:Dynamo.Models.DynamoModel.OpenFileFromJsonCommand"/> </param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.OpenIfSaved(System.Object)">
            <summary>
            Attempts to open a file using the passed open command, but wraps the call
            with a check to make sure no unsaved changes to the HomeWorkspace are lost.
            </summary>
            <param name="openCommand"> <see cref="T:Dynamo.Models.DynamoModel.OpenFileCommand"/> </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dynamo.ViewModels.DynamoViewModel.OpenFromJson(System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Dynamo.ViewModels.DynamoViewModel.Open(System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Dynamo.ViewModels.DynamoViewModel.Insert(System.Object)" -->
        <member name="M:Dynamo.ViewModels.DynamoViewModel.model_ComputeModelDeserialized">
            <summary>
            Read the contents of the file and set the view parameters for that current workspace
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.model_RequestNotification(System.String)">
            <summary>
            Create a toast notification with a notification sent by the DynamoModel
            </summary>
            <param name="notification"></param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ShowOpenDialogAndOpenResult(System.Object)">
            <summary>
            Present the open dialog and open the workspace that is selected.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ShowInsertDialogAndInsertResult(System.Object)">
            <summary>
            Present the open dialog and open the workspace that is selected.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.Save(System.Object)">
            <summary>
            Attempts to save an the current workspace.
            Assumes that workspace has already been saved.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.SaveAs(System.Object)">
            <summary>
            Save the current workspace.
            </summary>
            <param name="parameters">The file path.</param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.SaveAs(System.String,System.Boolean)">
            <summary>
            Save the current workspace to a specific file path. If the file path is null or empty, an
            exception is written to the console.
            </summary>
            <param name="path">The path to the file.</param>
            <param name="isBackup">Indicates if an automated backup save has called this function.</param>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.UnauthorizedAccessException"></exception>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.SaveAs(System.String,Dynamo.Graph.SaveContext,System.Boolean)">
            <summary>
            Save the current workspace to a specific file path. If the file path is null or empty, an
            exception is written to the console.
            </summary>
            <param name="path">The path to the file.</param>
            <param name="saveContext">The context of the save operation.</param>
            <param name="isBackup">Indicates if an automated backup save has called this function.</param>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.UnauthorizedAccessException"></exception>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.SaveAs(System.Guid,System.String,System.Boolean,Dynamo.Graph.SaveContext)">
            <summary>
            Save the current workspace to a specific file path. If the file path is null or empty, an
            exception is written to the console.
            </summary>
            <param name="id">Indicate the id of target workspace view model instead of defaulting to 
            current workspace view model. This is critical in crash cases.</param>
            <param name="path">The path to the file.</param>
            <param name="isBackup">Indicates if an automated backup save has called this function.</param>
            <param name="saveContext">The context of the save operation.</param>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.UnauthorizedAccessException"></exception>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ShowSaveDialogIfNeededAndSave(Dynamo.Graph.Workspaces.WorkspaceModel)">
            <summary>
                Attempts to save a given workspace.  Shows a save as dialog if the 
                workspace does not already have a path associated with it
            </summary>
            <param name="workspace">The workspace for which to show the dialog</param>
            <returns>true if save was successful, false otherwise</returns>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.FocusCustomNodeWorkspace(System.Guid)">
            <summary>
                Change the currently visible workspace to a custom node's workspace
            </summary>
            <param name="symbol">The function definition for the custom node workspace to be viewed</param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ShowElement(Dynamo.Graph.Nodes.NodeModel,System.Boolean)">
            <summary>
            Attempts to find a NodeModel and focuses the view around it
            Default boolean introduced to allow for this method to be used in Automatic mode
            </summary>
            <param name="e"></param>
            <param name="forceShowElement"></param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ShowNewFunctionDialogAndMakeFunction(System.Object)">
            <summary>
            Present the new function dialogue and create a custom function.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ShowNewPresetStateDialogAndMakePreset(System.Object)">
            <summary>
            Present the new preset dialogue and add a new presetModel 
            to the preset set on this graph
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.GetInputNodesFromSelectionForPresets">
            <summary>
            Returns the selected nodes that are "input" nodes, and makes an 
            exception for CodeBlockNodes and Filename nodes as these are marked 
            false so they do not expose a IsInput checkbox
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.UpdateGraphicHelpersScale(System.Object)">
            <summary>
            Updates grapic helpers (grid) inside the background preview VM
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.GoHomeView(System.Object)">
            <summary>
            Resets the offset and the zoom for a view
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ClearHomeWorkspaceInternal">
            <summary>
            TODO(Ben): Both "CloseHomeWorkspace" and "MakeNewHomeWorkspace" are 
            quite close in terms of functionality, but because their callers 
            have different expectations in different scenarios, they remain 
            separate now. A new task has been scheduled for them to be unified 
            into one consistent way of handling.
            
                http://adsk-oss.myjetbrains.com/youtrack/issue/MAGN-3813
            
            </summary>
            <returns>Returns true if the home workspace has been saved and 
            cleared, or false otherwise.</returns>
            
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.AskUserToSaveWorkspaceOrCancel(Dynamo.Graph.Workspaces.WorkspaceModel,System.Boolean)">
            <summary>
            Requests a message box asking the user to save the workspace and allows saving.
            </summary>
            <param name="workspace">The workspace for which to show the dialog</param>
            <returns>False if the user cancels, otherwise true</returns>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.CheckCustomGroupStylesChanges(System.Collections.Generic.List{Dynamo.Configuration.GroupStyleItem})">
            <summary>
            Checking if a custom Group style has been updated, if so it will update the styling of the existing groups
            </summary>
            <param name="originalCustomGroupStyles"></param>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.ShowHideFileTrustWarningIfCurrentWorkspaceTrusted">
            <summary>
            Hide or show file trust warning popup for the current workspace when preference settings are updated.
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.DynamoViewModel.ShutdownParams">
            <summary>
            This struct represents parameters for PerformShutdownSequence call.
            It exposes several properties to control the way shutdown process goes.
            </summary>
            
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.ShutdownParams.ShutdownHost">
            <summary>
            The call to PerformShutdownSequence results in the host 
            application being shutdown if this property is set to true.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.ShutdownParams.AllowCancellation">
            <summary>
            If this property is set to true, the user is given
            an option to cancel the shutdown process.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.DynamoViewModel.ShutdownParams.CloseDynamoView">
            <summary>
            Set this to true to close down DynamoView as part of shutdown 
            process. This is typically desirable for calls originated from 
            within the DynamoViewModel layer to shutdown Dynamo. If the 
            shutdown is initiated by DynamoView when it is being closed, 
            then this should be set to false since DynamoView is already 
            being closed.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.PerformShutdownSequence(Dynamo.ViewModels.DynamoViewModel.ShutdownParams)">
            <summary>
            Call this method to initiate DynamoModel shutdown sequence.
            See the definition of ShutdownParams structure for more details.
            </summary>
            <param name="shutdownParams">A set of parameters that control the 
            way in which shutdown sequence is to be performed. See ShutdownParams
            for more details.</param>
            <returns>Returns true if the shutdown sequence is started, or false 
            otherwise (i.e. when user chooses not to proceed with shutting down 
            Dynamo).</returns>
            
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.AskUserToSaveWorkspacesOrCancel(System.Boolean)">
            <summary>
            Ask the user if they want to save any unsaved changes.
            </summary>
            <param name="allowCancel">Whether to show cancel button to user. </param>
            <returns>Returns true if the cleanup is completed and that the shutdown 
            can proceed, or false if the user chooses to cancel the operation.</returns>
            
        </member>
        <member name="M:Dynamo.ViewModels.DynamoViewModel.CheckCurrentFileInTrustedLocation">
            <summary>
            Check if the current file is located in a Trusted Location in order to display to the User the proper message
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.DynamoViewModel.SaveWarningOnUnresolvedIssuesShows">
            <summary>
            Event used to verify that the correct dialog is being showed when saving a graph with unresolved linter issues.
            This is only meant to be used for unit testing purposes.
            As the GenericTaskDialog is not owned by the DynamoWindow we need another way to verify that it shows up
            when doing unit tests.
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.DynamoViewModel.ViewExtensionOpenRequest">
            <summary>
            Event raised when there's a request to open the view extension in the side panel.
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.DynamoViewModel.ViewExtensionOpenWithParameterRequest">
            <summary>
            Event raised when there's a request to open the view extension in the side panel.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.DismissMessageCommand">
            <summary>
            Fires when the user manually dismisses a message by clicking the little 'X' button next to it.
            Users can only dismiss Info Messages and Warnings - not Errors.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.UndismissMessageCommand">
            <summary>
            Fires when the user manually selects a previously-dismissed message from the node's ContextMenu.
            This un-dismisses the message and causes it to reappear above the node again.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.DoesNodeDisplayMessages">
            <summary>
            Determines whether any messages are shown to the user at all; switches chevron icon on/off in the view.
            Nodes inside of collapsed groups do not display an error bubble.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeInfoShowMoreButtonVisible">
            <summary>
            Determines whether the show more/show less buttons are visible to the user at the Info Message level.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeWarningsShowMoreButtonVisible">
            <summary>
            Determines whether the show more/show less buttons are visible to the user at the Warning level.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeErrorsShowMoreButtonVisible">
            <summary>
            Determines whether the show more/show less buttons are visible to the user at the Error level.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeInfoShowLessMessageVisible">
            <summary>
            Determines what the show more/show less buttons say at the Info Message level, which depends on whether
            the NodeMessageVisibility at this level is set to CollapseMessages or ShowAllMessages.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeWarningsShowLessMessageVisible">
            <summary>
            Determines what the show more/show less buttons say at the Warning level, which depends on whether
            the NodeMessageVisibility at this level is set to CollapseMessages or ShowAllMessages.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeErrorsShowLessMessageVisible">
            <summary>
            Determines what the show more/show less buttons say at the Error Message level, which depends on whether
            the NodeMessageVisibility at this level is set to CollapseMessages or ShowAllMessages.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.BubbleWidth">
            <summary>
            Bound to the width of the InfoBubbleView, to ensure it has the same width as the NodeModel's width.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.IsCollapsed">
            <summary>
            Reports whether the node this InfoBubble is inside a collapsed group.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeInfoToDisplay">
            <summary>
            A collection of formatted, user-visible strings relating to the node's information state
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeWarningsToDisplay">
            <summary>
            A collection of formatted, user-visible strings relating to the node's warning state
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeErrorsToDisplay">
            <summary>
            A collection of formatted, user-visible strings relating to the node's error state
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeMessages">
            <summary>
            A collection of InfoBubbleDataPacket objects that are received when the node executes
            and its state changes to reflect errors or warnings that have been detected.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.DismissedMessages">
            <summary>
            A collection of messages this node has received that have been manually dismissed by the user.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeInfoVisible">
            <summary>
            Used to determine whether the UI container for node Info is visible
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeWarningsVisible">
            <summary>
            Used to determine whether the UI container for node Warnings is visible
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeErrorsVisible">
            <summary>
            Used to determine whether the UI container for node Errors is visible
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeInfoSectionExpanded">
            <summary>
            Used to determine whether the UI container for node Info is expanded
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeWarningsSectionExpanded">
            <summary>
            Used to determine whether the UI container for node Warnings is expanded
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeErrorsSectionExpanded">
            <summary>
            Used to determine whether the UI container for node Errors is expanded
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.InfoBubbleViewModel.NodeMessageVisibility">
            <summary>
            Represents whether a node information state (e.g. warnings) are displaying just the
            warning icon, a condensed summary of all messages at this level or fully-displaying each message
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeInfoVisibilityState">
            <summary>
            Determines whether the node infos are showing just an icon, a condensed summary of messages or
            displaying each message in turn.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeWarningsVisibilityState">
            <summary>
            Determines whether the node warnings are showing just an icon, a condensed summary of messages or
            displaying each message in turn.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeErrorsVisibilityState">
            <summary>
            Determines whether the node errors showing just an icon, a condensed summary of messages or
            displaying each message in turn.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeInfoIteratorVisible">
            <summary>
            Used to switch out the DataTemplate from one that shows an iterator beside each message
            to one which doesn't. This is necessary because empty TextBlock Runs are non zero-width
            and cannot have their Width (or Visibility) set manually.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeWarningsIteratorVisible">
            <summary>
            Used to switch out the DataTemplate from one that shows an iterator beside each message
            to one which doesn't. This is necessary because empty TextBlock Runs are non zero-width
            and cannot have their Width (or Visibility) set manually.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleViewModel.NodeErrorsIteratorVisible">
            <summary>
            Used to switch out the DataTemplate from one that shows an iterator beside each message
            to one which doesn't. This is necessary because empty TextBlock Runs are non zero-width
            and cannot have their Width (or Visibility) set manually.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.#ctor(Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            Constructor
            </summary>
            <param name="dynamoViewModel"></param>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.#ctor(Dynamo.ViewModels.NodeViewModel)">
            <summary>
            This constructor will update the TopBottom and BottomRight positions of the warnings since the beginning.
            </summary>
            <param name="dynamoViewModel"></param>
            <param name="nodeViewModel">This parameter will be used to get the TopBottom and BottomRight positions of the NodeModel</param>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.NodeInformation_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Rebuilds the user-facing message collections when the underlying messages coming from the node evaluation change.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.OpenDocumentationLink(System.Object)">
            <summary>
            Used to open the documentation link relating to an error/warning (if any exists)
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.DismissMessage(System.Object)">
            <summary>
            Fired by the users to manually 'dismiss' a user-facing message, such as a Warning or an Error.
            Adds the message(s) to the collection of DismissedAlerts, then rebuilds the
            user-facing messages display from scratch.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.UndismissMessage(System.Object)">
            <summary>
            Accessed via the node's ContextMenu, used to make a user-facing message reappear above the node.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.UpdateUserFacingCollectionVisibility">
            <summary>
            Checks whether to show/hide all user facing collections.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.ClearUserFacingCollections">
            <summary>
            Clears all collections of user-facing info/warning/errors.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.SetMessageSectionsExpansion">
            <summary>
            Determines whether to display the message body to the user.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.GetMessagesOfStyle(System.Collections.ObjectModel.ObservableCollection{Dynamo.ViewModels.InfoBubbleDataPacket},Dynamo.ViewModels.InfoBubbleViewModel.Style)">
            <summary>
            Filters a collection of InfoBubbleDataPackets by whether they have a given style (e.g. Error).
            </summary>
            <param name="infoBubbleDataPackets"></param>
            <param name="style">The style of messages to be returned</param>
            <param name="secondStyle">A second (optional) style.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.UpdateShowMoreButtonText">
            <summary>
            Determines whether the 'show more/less' button says 'show more' or 'show less' for each section.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.UpdateShowMoreButtonVisibility">
            <summary>
            Determines whether the 'Show More' button is visible to the user, which displays when
            the node is in a CollapsedMessages visibility state and there is more than one message to show
            at this particular message level (e.g. Warning).
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.UpdateNodeMessageIteratorsVisibility">
            <summary>
            Triggers an update to the visibility of the iterators beside messages when there is
            more than one message per level, (e.g. 5 Warnings, showing 1/5, 2/5, etc).
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.AutoCollapseSections(System.Int32,System.Int32,System.Int32)">
            <summary>
            A UX refinement; if a user dismisses a message and one remains, we need to switch off the iterator (to stop it saying 1/1)
            and auto-collapse that section back to CollapseMessages if it was on ShowAllMessages.
            </summary>
            <param name="nonDismissedInfoMessageCount"></param>
            <param name="nonDismissedWarningMessageCount"></param>
            <param name="errorsCount"></param>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.RefreshNodeInformationalStateDisplay">
            <summary>
            Refreshes all of the user-facing Node Informational State UI.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.GetTargetCollection(Dynamo.ViewModels.InfoBubbleViewModel.Style)">
            <summary>
            Takes in a style and determines what the corresponding collection of display messages is.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.GetAlternativeStyle(Dynamo.ViewModels.InfoBubbleViewModel.Style)">
            <summary>
            Used for handling the old InfoBubble APIs, which kept track of
            condensed and expanded styles for errors and warnings.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.DuplicateInfoBubbleDataPacket(Dynamo.ViewModels.InfoBubbleDataPacket)">
            <summary>
            Creates a new object with the same properties as the original InfoBubbleDataPacket.
            Needed so that we can display certain properties in a user, formatted in a certain way
            without polluting the original object.
            </summary>
            <param name="infoBubbleDataPacketToCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.SetDisplayMessages(System.Collections.Generic.List{Dynamo.ViewModels.InfoBubbleDataPacket},Dynamo.ViewModels.InfoBubbleViewModel.NodeMessageVisibility)">
            <summary>
            Takes in a list of messages and their corresponding NodeMessageVisibility state and returns
            NodeMessage objects for display to the user, with an iterating count where necessary.
            </summary>
            <param name="infoBubbleDataPackets"></param>
            <param name="nodeMessageVisibility"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.ValidateWorkspaceRunStatusMsg">
            <summary>
            Validate and update workspace run status message
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InfoBubbleViewModel.Dispose">
            <summary>
            Unsubscribes from any events this class is subscribed to.
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.NodeViewModel">
            <summary>
            Interaction logic for dynControl.xaml
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.SelectConnectedUpstreamCommand">
            <summary>
            Command to select connected upstream nodes of the selected nodeModel
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.SelectConnectedDownstreamCommand">
            <summary>
            Command to select connected downstream nodes of the selected nodeModel
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.SelectConnectedUpAndDownstreamCommand">
            <summary>
            Command to select connected upstream and downstream nodes of the selected nodeModel
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.Id">
            <summary>
            Returns NodeModel ID
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.Name">
            <summary>
            The Name of the nodemodel this view points to
            this is the name of the node as it is displayed in the UI.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.OriginalName">
            <summary>
            The original name of the node. Notice this property will return
            current node name if the node is dummy node or unloaded custom node.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.PackageName">
            <summary>
            Returns the Package name of the node, if it comes from a package
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.IsRenamed">
            <summary>
            If a node has been renamed. Notice this boolean will be disabled
            (always false) if the node is dummy node or unloaded custom node.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.NumberOfDismissedAlerts">
            <summary>
            The total number of info/warnings/errors dismissed by the user on this node.
            This is displayed on the node by a little icon beside the Context Menu button.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.Left">
            <summary>
            Element's left position is two-way bound to this value
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.Top">
            <summary>
            Element's top position is two-way bound to this value
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.NodeViewModel.StaticZIndex">
            <summary>
            ZIndex is used to order nodes, when some node is clicked.
            This selected node should be moved above others.
            Start value of zIndex is 3, because 1 is for groups and 2 is for connectors.
            Nodes should be always at the top.
            
            Static is used because every node should know what is the highest z-index right now.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.ZIndex">
            <summary>
            ZIndex represents the order on the z-plane in which nodes appear.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.IsInteractionEnabled">
            <summary>
            Input grid's enabled state is now bound to this property
            which tracks the node model's InteractionEnabled property
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.NodeOverlayVisible">
            <summary>
            Determines whether or not the semi-transparent overlay is displaying on the node.
            This reflects whether the node is in a info/warning/error/frozen state
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.NodeWarningBarVisible">
            <summary>
            Determines whether the node is showing a bar at its base, indicating that the
            node has undismissed info/warning/error messages.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.WarningBarColor">
            <summary>
            The color of the warning bar: blue for info, orange for warnings, red for errors.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.NodeOverlayColor">
            <summary>
            Determines the color of the node's visual overlay, which displays
            if the node is in a Frozen, Info, Error or Warning state.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.IsDisplayingLabels">
            <summary>
            Enable or disable text labels on nodes.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.NodeHoveringState">
            <summary>
            This is used to determine if there is
            a node hovering over this group.
            When this is true the views nodeHoveringStateBorder
            is activated.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.IsFrozen">
            <summary>
            Returns a value indicating whether this model is frozen.
            </summary>
            <value>
              <c>true</c> if this instance is frozen; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.IsFrozenExplicitly">
            <summary>
            A flag indicating whether the node is set to freeze by the user.
            </summary>
            <value>
             Returns true if the node has been frozen explicitly by the user, otherwise false.
            </value>  
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.CanToggleFrozen">
            <summary>
            A flag indicating whether the underlying NodeModel's IsFrozen property can be toggled.      
            </summary>
            <value>
             This will return false if this node is not the root of the freeze operation, otherwise it will return 
             true.
            </value>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.X">
            <summary>
                Returns or set the X position of the Node.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.Y">
            <summary>
                Returns or set the Y position of the Node.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.UserDescription">
            <summary>
            Node description defined by the user.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.IsNodeInCollapsedGroup">
            <summary>
            Used as a flag to indicate to associated connectors what ZIndex to be drawn at.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeViewModel.DismissedAlerts">
            <summary>
            A collection of error/warning/info messages, dismissed via a sub-menu in the node Context Menu.
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.NodeViewModel.Selected">
            <summary>
            Event to determine when Node is selected
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.NodeViewModel.Removed">
            <summary>
            Event to determine when Node is removed
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.#ctor(Dynamo.ViewModels.WorkspaceViewModel,Dynamo.Graph.Nodes.NodeModel)">
            <summary>
            Constructor
            </summary>
            <param name="workspaceViewModel"></param>
            <param name="logic"></param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.UpdateOverlays(System.Object,System.EventArgs)">
            <summary>
            Updates whether the Warning Bar is visible or not and whether the node's
            Frozen/Info/Warning/Error overlay is displaying.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.Logic_NodeMessagesClearing(Dynamo.Graph.Nodes.NodeModel)">
            <summary>
            Clears the existing messages on a node before it executes and re-evalutes its warnings/errors. 
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.Logic_NodeInfoMessagesClearing(Dynamo.Graph.Nodes.NodeModel)">
            <summary>
            Clears the existing messages on a node before it executes and re-evalutes its warnings/errors. 
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.UpdateModelDismissedAlertsCount">
            <summary>
            Calls an update for the DismissedAlertCount inside the NodeModel to push PropertyChanged fire
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.Dispose">
            <summary>
            Dispose function
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.EngineController_AstBuilt(System.Object,Dynamo.Engine.CodeGeneration.CompiledEventArgs)">
            <summary>
            Handler for the EngineController's AstBuilt event.
            Formats a string of AST for preview on the node.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.SetupInitialPortViewModels">
            <summary>
            Do a one setup of the ports 
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.Model_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Respond to property changes on the Dynamo model
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.logic_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Respond to property changes on the node model.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.ErrorBubble_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Respond to property changes on the error bubble.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.HandleColorOverlayChange">
            <summary>
            A single method that handles all color-related overrides
            The following events trigger color update:
            Error, Warning, Frozen, PreviewOff, Info 
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.UpdateErrorBubbleWidth">
            <summary>
            Updates the width of the node's Warning/Error bubbles, in case the width of the node changes.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.BuildErrorBubble">
            <summary>
            Creates a new ErrorBubble and assigns it to the ErrorBubble property.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.GetWarningColor">
            <summary>
            Sets the color of the warning bar, which informs the user that the node is in
            either an error or a warning state.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.GetBorderColor">
            <summary>
            Determines the color of the overlay border based on the
            state of the node. Priorities apply in order of appearance in if/else statement.
            Applicable if zoom is smaller than 60% (State 2)
            TODO: Can be done with switch case statement if we refactor node view states
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.DisposeErrorBubble">
            <summary>
            Disposes the ErrorBubble when it's no longer needed.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.SubscribeInPortEvents(Dynamo.Graph.Nodes.PortModel)">
            <summary>
            Registers the in port events.
            </summary>
            <param name="item">PortModel.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.SubscribeOutPortEvents(Dynamo.Graph.Nodes.PortModel)">
            <summary>
            Registers the out port events.
            </summary>
            <param name="item">PortModel.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.UnSubscribePortEvents(Dynamo.ViewModels.PortViewModel)">
            <summary>
            Unsubscribe port events.
            </summary>
            <param name="item">The PortViewModel.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.OnMouseLeftButtonDown(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseLeftButtonDown event of the port control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.OnRectangleMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseLeave event of the port control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.OnRectangleMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseEnter event of the port control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeViewModel.RaisePropertyChangedOnDownStreamNodes">
            <summary>
            When a node is frozen, raise the IsFrozen property changed event on
            all its downstream nodes, to ensure UI updates correctly.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NoteViewModel.PinToNodeCommand">
            <summary>
            Command to pin the current note to a selected node
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NoteViewModel.UnpinFromNodeCommand">
            <summary>
            Command to unpin the pinned node (sets it to null)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NoteViewModel.Left">
            <summary>
            Element's left position is two-way bound to this value
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NoteViewModel.Top">
            <summary>
            Element's top position is two-way bound to this value
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NoteViewModel.ZIndex">
            <summary>
            ZIndex represents the order on the z-plane in which the notes and other objects appear. 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NoteViewModel.IsOnEditMode">
            <summary>
            Property determines if note is being edited, 
            is set to true when double clicking the note
            is set to false when note's textbox looses focus
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NoteViewModel.PinnedNode">
            <summary>
            NodeViewModel which this Note is pinned to
            When using the pin to node command  
            note and node become entangled so that 
            if you select and move one the other one 
            moves as well.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NoteViewModel.CanUnpinFromNode(System.Object)">
            <summary>
            This method will be executed for validate if the "Unpin from node" option should be shown or not in the context menu (when clicking right over the note)
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.ViewModels.PortViewModel">
            <summary>
            Port View Model
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.NodeAutoCompleteCommand">
            <summary>
            Command to trigger Node Auto Complete from node port interaction
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.NodePortContextMenuCommand">
            <summary>
            Command to open an Port's Context Menu popup
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.PortModel">
            <summary>
            Port model.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.ToolTipContent">
            <summary>
            The content of tooltip.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.PortName">
            <summary>
            Port name.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.PortType">
            <summary>
            Port type.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.IsSelected">
            <summary>
            If port is selected.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.IsConnected">
            <summary>
            If port is connected.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.IsPortCondensed">
            <summary>
            Sets the condensed styling on Code Block output ports.
            This is used to style the output ports on Code Blocks to be smaller.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.IsEnabled">
            <summary>
            If port is enabled.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.Height">
            <summary>
            The height of port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.Center">
            <summary>
            The center point of port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.State">
            <summary>
            The state of host node.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.DefaultValueEnabled">
            <summary>
            Returns whether this port has a default value that can be used.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.UsingDefaultValue">
            <summary>
            Returns whether the port is using its default value, or whether this been disabled
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.IsHitTestVisible">
            <summary>
            IsHitTestVisible property gets a value that declares whether 
            a Snapping rectangle can possibly be returned as a hit test result.
            When FirstActiveConnector is not null, Snapping rectangle handles click events.
            When FirstActiveConnector is null, Snapping rectangle does not handle click events 
            and user can "click though invisible snapping area".
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.MarginThickness">
            <summary>
            The margin thickness of port view.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.ShowUseLevelMenu">
            <summary>
            If should display Use Levels popup menu. 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.UseLevels">
            <summary>
            If UseLevel is enabled on this port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.ShouldKeepListStructure">
            <summary>
            If should keep list structure on this port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.Level">
            <summary>
            Levle of list.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.UseLevelVisibility">
            <summary>
            The visibility of Use Levels menu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.PortBorderBrushColor">
            <summary>
            Sets the color of the port's border brush
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.PortBackgroundColor">
            <summary>
            Sets the color of the port's background - affected by multiple factors such as
            MouseOver, IsConnected, Node States (active, inactie, frozen 
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.SetupNodeAutocompleteWindowPlacement(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Sets up the node autocomplete window to be placed relative to the node.
            </summary>
            <param name="popup">Node autocomplete popup.</param>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.SetupPortContextMenuPlacement(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Sets up the PortContextMenu window to be placed relative to the port.
            </summary>
            <param name="popup">Node context menu popup.</param>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.UseLevelsCommand">
            <summary>
            UseLevels command
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PortViewModel.KeepListStructureCommand">
            <summary>
            ShouldKeepListStructure command
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.OnRectangleMouseEnter(System.Object)">
            <summary>
            Handles the Mouse enter event on the port
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.OnRectangleMouseLeave(System.Object)">
            <summary>
            Handles the Mouse leave on the port
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.OnRectangleMouseLeftButtonDown(System.Object)">
            <summary>
            Handles the Mouse left button down on the port
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.OnMouseLeftButtonDownOnLevel(System.Object)">
            <summary>
            Handles the Mouse left button down on the level.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.OnMouseLeftUseLevel(System.Object)">
            <summary>
            Handle the Mouse left from Use Level popup.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.RefreshPortColors">
            <summary>
            Handles the logic for updating the PortBackgroundColor and PortBackgroundBrushColor
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PortViewModel.GetPortDisplayName(System.String)">
            <summary>
            Replaces the old PortNameConverter.
            Ports without names are generally converter chevrons i.e. '>'. However, if an output
            port is displaying its context menu chevron AND has no name (e.g. the Function node)
            the output port is renamed in order to avoid confusing the user with double chevrons.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.OnSearchTextChanged(System.Object,System.EventArgs)">
            <summary>
            Invokes the SearchTextChanged event handler and executes the SearchCommand
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.SearchViewModel.InCanvasSearchPosition">
            <summary>
            Position, where canvas was clicked. 
            After node will be called, it will be created at the same place.
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.SearchViewModel.browserVisibility">
            <summary>
                Indicates whether the node browser is visible or not
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.SearchViewModel.SearchText">
            <summary>
                SearchText property
            </summary>
            <value>
                This is the core UI for Dynamo, primarily used for logging.
            </value>
        </member>
        <member name="F:Dynamo.ViewModels.SearchViewModel.searchIconAlignment">
            <summary>
                SearchIconAlignment property
            </summary>
            <value>
                This is used for alignment search icon and text.
            </value>
        </member>
        <member name="F:Dynamo.ViewModels.SearchViewModel.visible">
            <summary>
                Visible property
            </summary>
            <value>
                Indicates whether the View is visible or not
            </value>
        </member>
        <member name="P:Dynamo.ViewModels.SearchViewModel.CurrentMode">
            <summary>
            The property specifies which View is active now.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.SearchViewModel.IsDetailedMode">
            <summary>
             The property specifies which layout(detailed or compact) is used in search view.
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.SearchViewModel.searchResults">
            <summary>
                Items that were found during search.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.SearchViewModel.FilteredResults">
            <summary>
            Filtered search results.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.SearchViewModel.FilteredHighConfidenceResults">
            <summary>
            Filtered high confidence search results.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.SearchViewModel.FilteredLowConfidenceResults">
            <summary>
            Filtered low confidence search results.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.Filter">
            <summary>
            Filters search items, if category was selected.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.ToggleSelect(System.Collections.Generic.IEnumerable{Dynamo.Wpf.ViewModels.NodeSearchElementViewModel})">
            <summary>
            Unselects all items and selects the first one.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.SearchViewModel.IsAnySearchResult">
            <summary>
            Returns true, if it was found at least one item. Otherwise it returns false.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.SearchViewModel.SearchCategories">
            <summary>
            Categories that were found after search. Used to filter search results.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.FindViewModelForNode(System.String)">
            <summary>
            To get view model for a node based on its name
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="F:Dynamo.ViewModels.SearchViewModel.ClassNameToBeOpened">
            <summary>
            Class name, that has been clicked in library search view.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.Dispose">
            <summary>
            Dispose function
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.InsertEntry(Dynamo.Wpf.ViewModels.NodeSearchElementViewModel,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Insert a new search element under the category.
            </summary>
            <param name="entry">This could represent a function of a given 
            class. For example, 'MyAssembly.MyNamespace.MyClass.Foo'.</param>
            <param name="categoryNames">A list of entries that make up the fully qualified
            class name that contains function 'Foo', e.g. 'MyAssembly.MyNamespace.MyClass'.
            </param>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.SearchAndUpdateResults">
            <summary>
                Performs a search using the internal SearcText as the query.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.SearchAndUpdateResults(System.String)">
            <summary>
                Performs a search and updates searchResults.
            </summary>
            <param name="query"> The search query </param>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.UpdateSearchCategories">
            <summary>
            Select unique search categories, which are used in search UI.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.IsSelectedChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            When category is selected, search results should be updated and contain nodes from this category.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.Search(System.String,System.Collections.Generic.IEnumerable{Dynamo.Search.SearchElements.NodeSearchElement})">
            <summary>
                Performs a search using the given string as query and subset, if provided.
            </summary>
            <returns> Returns a list with a maximum MaxNumSearchResults elements.</returns>
            <param name="search"> The search query </param>
            <param name="subset">Subset of nodes that should be used for the search instead of the complete set of nodes. This is a list of NodeSearchElement types</param>   
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.Search(System.String,System.Boolean)">
            <summary>
                Performs a search using the given string as query and subset, if provided.
            </summary>
            <returns> Returns a list with a maximum MaxNumSearchResults elements.</returns>
            <param name="search"> The search query </param>
            <param name="useLucene"> Temporary flag that will be used for searching using Lucene.NET </param>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.FindViewModelForNodeNameAndCategory(System.String,System.String,System.String)">
            <summary>
            To get view model for a node based on its name and category
            </summary>
            <param name="nodeName">Name of the node</param>
            <param name="nodeCategory">Full Category of the node</param>
            <param name="parameters">Node input parameters</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.ExecuteSelectedItem">
            <summary>
            Executes selected item in search UI.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.MoveSelection(Dynamo.ViewModels.SearchViewModel.Direction)">
            <summary>
            When down key is pressed, selected element should move forward.
            When up key is pressed, selected element should move back.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.RemoveLastPartOfSearchText">
            <summary>
                If there's a period in the SearchText property, remove text
                to the end until you hit a period.  Otherwise, remove the
                last character.  If the SearchText property is empty or null
                return doing nothing.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.RemoveLastPartOfText(System.String)">
            <summary>
                If there's a period in the argument, remove text
                to the end until you hit a period.  Otherwise, remove the
                last character.  If the argument is empty or null
                return the empty string.
            </summary>
            <returns>The string cleaved of everything </returns>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.CollapseAll(System.Collections.Generic.IEnumerable{Dynamo.Wpf.ViewModels.NodeCategoryViewModel})">
            <summary>
            Sets IsExpanded = false to open category and all subcategories.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.OpenSelectedClass(System.String)">
            <summary>
            This method is fired, when user clicks on class name in the search library view.
            </summary>
            <param name="className">Name of the class, that should be opened.</param>
        </member>
        <member name="M:Dynamo.ViewModels.SearchViewModel.TryGetNodeIcon(Dynamo.ViewModels.NodeViewModel,System.Windows.Media.ImageSource@)">
            <summary>
            Attempts to find the node's icon, which is the same as its type name plus a Postfix, such as '.Small'.
            </summary>
            <returns>An ImageSource object pointing to the icon image for the NodeViewModel</returns>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.HideAllPopupCommand">
            <summary>
            View Command to hide all popup in special cases
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.ShowAllWiresCommand">
            <summary>
            View Command to show all connection wires (on current selection), if any are hidden
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.HideAllWiresCommand">
            <summary>
            View Command to hide all connection wires (on current selection), if any are shown
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.WorkspaceViewModel.DraggedNode">
            <summary>
            Each instance of this class represents a node that is being dragged.
            It keeps the offset of a node from the mouse cursor when a click 
            event occurs, and it updates the node position based on the internal
            offset values, and the updated mouse cursor position.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.DraggedNode.#ctor(Dynamo.Graph.ILocatable,Dynamo.Utilities.Point2D)">
            <summary>
            Construct a DraggedNode for a given ILocatable object.
            </summary>
            <param name="locatable">The ILocatable (usually a node) that is 
            associated with this DraggedNode object. During an update, the 
            position of ILocatable will be updated based on the specified 
            mouse position and the internal delta values.</param>
            <param name="mouseCursor">The mouse cursor at the point this 
            DraggedNode object is constructed. This is used to determine the 
            offset of the ILocatable from the mouse cursor.</param>
            
        </member>
        <member name="T:Dynamo.ViewModels.WorkspaceViewModel.StateMachine">
            <summary>
            The StateMachine class manages states in the WorkspaceViewModel it 
            belongs. The class is made nested private class because there are 
            things that we don't expose beyond WorkspaceViewModel object, but 
            should still be readily accessible by the StateMachine class.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.StateMachine.CancelActiveState">
            <summary>
            The owning WorkspaceView calls this to cancel the current state
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.StateMachine.RequestTogglePanMode">
            <summary>
            The owning WorkspaceViewModel calls this method in an attempt to
            place the StateMachine into view panning mode. Note that as a 
            result of calling this method, the StateMachine may be kicked
            out of its existing state.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.StateMachine.RequestToggleOrbitMode">
            <summary>
            The owning WorkspaceViewModel calls this method in an attempt to
            place the StateMachine into view orbiting mode. Note that as a 
            result of calling this method, the StateMachine may be kicked
            out of its existing state.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dynamo.ViewModels.WorkspaceViewModel.StateMachine.PerformDropNotes(System.Windows.Point)" -->
        <member name="F:Dynamo.ViewModels.WorkspaceViewModel.ZOOM_MAXIMUM">
            <summary>
            Represents maximum value of workspace zoom
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.WorkspaceViewModel.ZOOM_MINIMUM">
            <summary>
            Represents minimum value of workspace zoom
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.WorkspaceViewModel.ZoomEventHandler">
            <summary>
                Function that can be used to respond to a changed workspace Zoom amount.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="E:Dynamo.ViewModels.WorkspaceViewModel.ZoomChanged">
            <summary>
                Event that is fired every time the zoom factor of a workspace changes.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.OnZoomChanged(System.Object,Dynamo.Models.ZoomEventArgs)">
            <summary>
            Used during open and workspace changes to set the zoom of the workspace
            </summary>
            <param name="sender">The object which triggers the event</param>
            <param name="e">The zoom event data.</param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.OnRequestZoomToViewportCenter(System.Object,Dynamo.Models.ZoomEventArgs)">
            <summary>
            For requesting registered workspace to zoom in center
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.OnRequestZoomToViewportPoint(System.Object,Dynamo.Models.ZoomEventArgs)">
            <summary>
            For requesting registered workspace to zoom in out from a point
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.OnRequestZoomToFitView(System.Object,Dynamo.Models.ZoomEventArgs)">
            <summary>
            For requesting registered workspace to zoom in or out to fitview
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.DynamoPreferences">
            <summary>
            Gets the collection of Dynamo-specific preferences.
            This is used when serializing Dynamo preferences in the View block of Graph.Json.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.Camera">
            <summary>
            Gets the Camera Data. This is used when serializing Camera Data in the View block
            of Graph.Json.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.InCanvasSearchViewModel">
            <summary>
            ViewModel that is used in InCanvasSearch in context menu and called by Shift+DoubleClick.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.NodeAutoCompleteSearchViewModel">
            <summary>
            ViewModel that is used in NodeAutoComplete feature in context menu and called by Shift+DoubleClick.
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.WorkspaceViewModel.currentCursor">
            <summary>
            Cursor Property Binding for WorkspaceView
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.WorkspaceViewModel.isCursorForced">
            <summary>
            Force Cursor Property Binding for WorkspaceView
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.X">
            <summary>
                Returns or set the X position of the workspace.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.Y">
            <summary>
                Returns or set the Y position of the workspace
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.IsHomeSpace">
            <summary>
            Boolean indicating if the target workspace is home workspace (true), or custom node workspace (false)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WorkspaceViewModel.Zoom">
            <summary>
                Get or set the zoom value of the workspace.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.Model_PopulateJSONWorkspace(Newtonsoft.Json.Linq.JObject)">
            <summary>
            This event is triggered from Workspace Model. Used in instrumentation
            </summary>
            <param name="modelData"> Workspace model data as JSON </param>
            <returns>workspace model with view block in string format</returns>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.Save(System.String,System.Boolean,Dynamo.Engine.EngineController,Dynamo.Graph.SaveContext)">
            <summary>
            WorkspaceViewModel's Save method does a two-part serialization. First, it serializes the Workspace,
            then adds a View property to serialized Workspace, and sets its value to the serialized ViewModel.
            </summary>
            <param name="filePath"></param>
            <param name="isBackup"></param>
            <param name="engine"></param>
            <param name="saveContext"></param>
            <exception cref="T:System.ArgumentNullException">Thrown when the file path is null.</exception>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.AddViewBlockToJSON(Newtonsoft.Json.Linq.JObject)">
            <summary>
            This function appends view block to the model json
            </summary>
            <param name="modelData">Workspace Model data in JSON format</param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.ExtraWorkspaceViewInfoFromJson(System.String)">
            <summary>
            Load the extra view information required to fully construct a WorkspaceModel object 
            </summary>
            <param name="json"></param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.OnNodeModified(Dynamo.Graph.Nodes.NodeModel)">
            <summary>
            This is required here to compute the nodes delta state.
            This is overriden in HomeWorkspaceViewModel
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.nodeViewModel_SnapInputEvent(Dynamo.ViewModels.PortViewModel)">
            <summary>
            Handles the port snapping on Mouse Enter.
            </summary>
            <param name="portViewModel">The port view model.</param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.NodeToCode(System.Object)">
            <summary>
            After command framework is implemented, this method should now be only 
            called from a menu item (i.e. Ctrl + W). It should not be used as a 
            way for any other code paths to convert nodes to code programmatically. 
            For that we now have ConvertNodesToCodeInternal which takes in more 
            configurable arguments.
            </summary>
            <param name="parameters">This is not used and should always be null,
            otherwise an ArgumentException will be thrown.</param>
            
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.IsModelInCollapsedGroup(Dynamo.Graph.ModelBase)">
            <summary>
            Determine if a Dynamo element belongs to a collapsed group or sub group of a collapsed group
            </summary>
            <param name="model">Target node, note, annotation</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.FitViewInternal(System.Boolean)">
            <summary>
                Zoom around current selection
                _fitViewActualZoomToggle is used internally to toggle
            between the default 1.0 zoom level and the intended zoom around selection
                The optional toggle boolean is introduced to avoid this behavior and only zoom around the selection
            no matter how many times the operation is performed
            </summary>
            <param name="toggle"></param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.FocusNode(System.Object)">
            <summary>
            Selects an Element by ID and focuses the view around it
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.ShowHideAllWires(System.Collections.Generic.List{Dynamo.Graph.Nodes.NodeModel},System.Boolean)">
            <summary>
            Shows or Hides all wires of a list of nodeModels
            </summary>
            <param name="nodeModels"></param>
            <param name="isHidden"></param>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.CollapseSelectedNodes">
            <summary>
            Collapse a set of nodes and notes currently selected in workspace
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.GetViewModelInternal(System.Guid)">
            <summary>
            Returns ViewModelBase by GUID
            </summary>
            <param name="modelGuid">Identifier of the requested model.</param>
            <returns>Found <see cref="T:Dynamo.ViewModels.ViewModelBase"/> object.</returns>
        </member>
        <member name="M:Dynamo.ViewModels.WorkspaceViewModel.GetViewModelsInternal(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Gets viewModels by their GUIDs
            </summary>
            <param name="modelGuids">Identifiers of the requested models.</param>
            <returns>All found <see cref="T:Dynamo.ViewModels.ViewModelBase"/> objects.</returns>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.AnnotationDescriptionText">
            <summary>
            Group description
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.GroupStyleId">
            <summary>
            Id of the applied GroupStyle
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.ViewModelBases">
            <summary>
            Collection of ViewModelBases that belongs to
            this group.
            Same as AnnotationModel.Nodes but with ViewModels
            instead of ModelBase.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.InPorts">
            <summary>
            Collection of all input ports on this group.
            All nodes contained in the group which input port
            is either not connected or connected to a node outside
            of this group will have their input ports
            added to this collection.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.OutPorts">
            <summary>
            Collection of all output ports on this group.
            All nodes contained in the group which output port 
            is connected to a node outside of this group will have
            their output ports added to this collection.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.IsExpanded">
            <summary>
            Gets or sets the models IsExpanded property.
            When set it will either show all of the groups node
            or hide them and create input and output ports on the group.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.NodeHoveringState">
            <summary>
            This is used to determine if there is
            a node hovering over this group.
            When this is true the views nodeHoveringStateBorder
            is activated.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.NestedGroups">
            <summary>
            Collection of the nested groups in this group.
            This is used for displaying nested groups info
            when this group is collapsed.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.NodeContentCount">
            <summary>
            Counter of all nodes in the group that
            aren't either an input or output node.
            This is used to display the amount of nodes
            the are in between the input and output nodes.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.ModelAreaRect">
            <summary>
            Rectangle of the ModelArea
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.NestedGroupsGeometryCollection">
            <summary>
            This property getter returns an empty GeometryCollection
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.AnnotationViewModel.NestedGroupsGeometries">
            <summary>
            Collection of rectangles based on AnnotationModels
            that belongs to this group.
            This is used to make a cutout in this groups background
            where another group is placed so there wont be an overlay.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.GroupStyleList">
            <summary>
            This property will be used to populate the GroupStyle context menu (the one shown when clicking right over a Group)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.AddGroupToGroupCommand">
            <summary>
            Adds the selected groups to this group
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.RemoveGroupFromGroupCommand">
            <summary>
            Command to remove this group from the group it
            belongs to.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.DissolveNestedGroupsCommand">
            <summary>
            Command to dissolve hosted groups inside the host group
            belongs to.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.AnnotationViewModel.ToggleIsVisibleGroupCommand">
            <summary>
            Command to toggle this group's node preview visibility.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.AnnotationViewModel.SetGroupInputPorts">
            <summary>
            Creates input ports for the group based on its Nodes.
            Input ports that either is connected to a Node outside of the
            group, or has a port that is not connected will be used for the group.
            This function appends to the inputs
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.AnnotationViewModel.SetGroupOutPorts">
            <summary>
            Creates output ports for the group based on its Nodes.
            Output ports that are not connected will be used for the group.
            This function appends to the outports
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.AnnotationViewModel.CollapseGroupContents(System.Boolean)">
            <summary>
            Collapse all nodes in this group
            by settings its IsCollapsed property
            to true.
            Only the Parent group should handle collapsing
            the connector that needs it.
            </summary>
            <param name="collapseConnectors"></param>
        </member>
        <member name="M:Dynamo.ViewModels.AnnotationViewModel.ShowGroupContents">
            <summary>
            Shows all content of the group by setting
            its IsCollapsed property to false.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.AnnotationViewModel.UpdateGroupStyle(Dynamo.Configuration.GroupStyleItem)">
            <summary>
            This method will be called by the ChangeGroupStyleCommand when a GroupStyle is selected from the ContextMenu
            </summary>
            <param name="itemEntryParameter">GroupStyle item selected</param>
        </member>
        <member name="M:Dynamo.ViewModels.AnnotationViewModel.LoadGroupStylesFromPreferences(System.Collections.Generic.IEnumerable{Dynamo.Configuration.StyleItem})">
            <summary>
            This method loads the group styles defined by the user and stored in the xml file
            </summary>
            <param name="styleItemsList"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.AnnotationViewModel.ReloadGroupStyles">
            <summary>
            This method will be executed when the MenuIte.SubmenuOpened event is executed
            The purpose is adding to the GroupStyles ContextMenu the Styles added in the Preferences panel.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.AnnotationViewModel.SelectAll">
            <summary>
            Selects this group and models within it.
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.CustomColorItem.PropertyChanged">
            <summary>
            This event will help to execute the method  OnPropertyChanged used for xaml bindings (NotificationObject class cannot be used due that we already derive from ColorItem)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.CustomColorItem.IsColorItemSelected">
            <summary>
            This property will decide if we show a blue square over the color selected in CustomColoPicker or not.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.CustomColorItem.#ctor(System.Nullable{System.Windows.Media.Color},System.String)">
            <summary>
            Constructor that initialize the base class with the values passed as paramters
            </summary>
            <param name="color">color that will be displayed in the ColorPicker list</param>
            <param name="name">description or color name that will be displayed as tooltip when mouse hover a specific color</param>
        </member>
        <member name="P:Dynamo.ViewModels.CustomColorPickerViewModel.IsCustomColorSelectionEnabled">
            <summary>
            This property will decide if we should show the normal color selection controls or the custom colors selection controls in the Popup
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.CustomColorPickerViewModel.ColorPickerSelectedColor">
            <summary>
            This property will contain the current color selected in the CustomColorPicker
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.CustomColorPickerViewModel.BasicColors">
            <summary>
            List of Basic Colors that will be displayed in the CustomColorPicker
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.CustomColorPickerViewModel.CustomColors">
            <summary>
            List of Custom Colors that will be displayed in the CustomColorPicker
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.DefaultValueEnabled">
            <summary>
            Returns whether this port has a default value that can be used.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.UsingDefaultValue">
            <summary>
            Returns whether the port is using its default value, or whether this been disabled
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.ShowUseLevelMenu">
            <summary>
            If should display Use Levels popup menu. 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.IsPythonNodePort">
            <summary>
            Returns whether the port belongs to a Python node
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.UseLevels">
            <summary>
            If UseLevel is enabled on this port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.UseLevelSpinnerVisible">
            <summary>
            Determines whether or not the UseLevelsSpinner is visible on the port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.ShouldKeepListStructure">
            <summary>
            If should keep list structure on this port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.Level">
            <summary>
            Levle of list.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.UseLevelVisibility">
            <summary>
            The visibility of Use Levels menu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.PortValueMarkerColor">
            <summary>
            Sets the color of the small rectangular marker on each input port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.PortDefaultValueMarkerVisible">
            <summary>
            Determines whether the blue circular marker to the left of this port is visible.
            This indicates whether the port has a default value which is in use.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.UseLevelsCommand">
            <summary>
            UseLevels command
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.KeepListStructureCommand">
            <summary>
            ShouldKeepListStructure command
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.MouseLeftButtonDownOnLevelCommand">
            <summary>
            Handles the Mouse left button click on the node levels context menu button.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InPortViewModel.EditPortPropertiesCommand">
            <summary>
            Used by the 'Edit Port Properties' button in the node output context menu.
            Triggers the Port Properties Panel
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InPortViewModel.EditPortProperties(System.Object)">
            <summary>
            Used by the 'Edit Port Properties' button in the node output context menu.
            Triggers the Port Properties Panel
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InPortViewModel.OnMouseLeftButtonDownOnLevel(System.Object)">
            <summary>
            Handles the Mouse left button down on the level.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.InPortViewModel.RefreshPortColors">
            <summary>
            Handles the logic for updating the PortBackgroundColor and PortBackgroundBrushColor
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.IsPortCondensed">
            <summary>
            Sets the condensed styling on Code Block output ports.
            This is used to style the output ports on Code Blocks to be smaller.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.ShowContextMenu">
            <summary>
            If should display Use Levels popup menu. 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.UseContextMenuVisibility">
            <summary>
            The visibility of Use Levels menu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.ShowHideWiresButtonContent">
            <summary>
            Determines whether the output port button says 'Hide Wires' or 'Show Wires'
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.AreConnectorsHidden">
            <summary>
            Sets the visibility of the connectors from the port. This will overwrite the 
            individual visibility of the connectors. However when visibility is controlled 
            from the connector, that connector's visibility will overwrite its previous state.
            In order to overwrite visibility of all connectors associated with a port, us this 
            flag again.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.HideWiresButtonEnabled">
            <summary>
            Enables or disables the Hide Wires button on the node output port context menu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.RenameNodeButtonEnabled">
            <summary>
             Enables or disables the Rename Node button on the node output port context menu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.PortValueMarkerColor">
            <summary>
            Sets the color of the small rectangular marker on each input port.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.ValueMarkerWidth">
            <summary>
            Returns the width from the ValueMarkerColumn
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.ValueMarkerWidthWithFunction">
            <summary>
            Returns the width to assign to the ValueMarkerColumn when is function state
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.ValueMarkerWidthWithoutFunction">
            <summary>
            Returns the width to assign to the ValueMarkerColumn when is not function state
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.OutPortViewModel.RefreshHideWiresState">
            <summary>
            Takes care of the multiple UI concerns when dealing with the Unhide/Hide Wires button
            on the output port's context menu.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.BreakConnectionsCommand">
            <summary>
            Used by the 'Break Connections' button in the node output context menu.
            Removes any current connections this port has.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.HideConnectionsCommand">
            <summary>
            Used by the 'Show/Hide Wires' button in the node output context menu.
            Hides or Shows any connections this port has.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.EditPortPropertiesCommand">
            <summary>
            Used by the 'Edit Port Properties' button in the node output context menu.
            Triggers the Port Properties Panel
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.OutPortViewModel.BreakConnections(System.Object)">
            <summary>
            Used by the 'Break Connections' button in the node output context menu.
            Removes any current connections this port has.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.OutPortViewModel.HideConnections(System.Object)">
            <summary>
            Used by the 'Hide Wires' / 'Show Wires' button in the node output context menu.
            Flips of the visibility of any connections this port has.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Dynamo.ViewModels.OutPortViewModel.EditPortProperties(System.Object)">
            <summary>
            Used by the 'Edit Port Properties' button in the node output context menu.
            Triggers the Port Properties Panel
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.OutPortViewModel.CheckIfConnectorsAreHidden">
            <summary>
            Returns true if they are hidden.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dynamo.ViewModels.OutPortViewModel.MouseLeftButtonDownOnContextCommand">
            <summary>
            Handles the Mouse left button click on the node context menu button.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.TrustedPathEventArgs.Cancel">
            <summary>
            Indicate whether user wants to add the current path to the list
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.TrustedPathEventArgs.Path">
            <summary>
            Indicate the path to be added to Dynamo's trusted locations
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.TrustedPathViewModel.#ctor(Dynamo.Configuration.PreferenceSettings,Dynamo.Logging.DynamoLogger)">
            <summary>
            The main constructor of the TrustedPathViewModel class.
            </summary>
            <param name="settings">Dynamo's preference settings</param>
            <param name="logger">Dynamo's logging tool</param>
        </member>
        <member name="T:Dynamo.ViewModels.TrustedPathViewModel.Action">
            <summary>
            Actions the user can do to the model since it's a List
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.TrustedPathViewModel.Action.Insert">
            <summary>
            Insert a new item
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.TrustedPathViewModel.Action.Update">
            <summary>
            Update an existing Item
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.TrustedPathViewModel.Action.Remove">
            <summary>
            Remove an Item
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.GeometryScaleSize">
            <summary>
            The next enum will contain the possible values for Scaling (Visual Settings -> Geometry Scaling section)
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.PreferencesViewModel">
            <summary>
            Preferences data context
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.PreferencesTabs">
            <summary>
            This property will be used by the Preferences screen to store and retrieve all the settings from the expanders
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.SavedChangesLabel">
            <summary>
            Controls what the SavedChanges label will display
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.SavedChangesTooltip">
            <summary>
            Controls what SavedChanges label's tooltip will display
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.LocalPackages">
            <summary>
            Returns all installed packages
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.Filters">
            <summary>
            Returns all available filters
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.SelectedLanguage">
            <summary>
            Controls the Selected option in Language ComboBox
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.SelectedUnits">
            <summary>
            Contains the currently selected scaling unit used for grahic helpers (grids, axes)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.SelectedNumberFormat">
            <summary>
            Controls the Selected option in Number Format ComboBox
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.SelectedDefaultScaleFactor">
            <summary>
            This property holds the Geometry Scale factor selected in the Preferences panel (when a new workspace is created this will be the Geometry Scale used)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.BackupIntervalInMinutes">
            <summary>
            Time Interval for backup files in minutes
            Serialized as milliseconds in preferences setting.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.BackupLocation">
            <summary>
            Backup files path
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.CanResetBackupLocation">
            <summary>
            Indicates if the user can reset the Backup Location to the default value
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.MaxNumRecentFiles">
            <summary>
            Maximum number of recent files on startup page.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.RunSettingsIsChecked">
            <summary>
            Controls the IsChecked property in the RunSettings radio button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.RunPreviewIsChecked">
            <summary>
            Controls the IsChecked property in the Show Run Preview toogle button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.StaticSplashScreenEnabled">
            <summary>
            Controls the IsChecked property in the Show Static Splash Screen toogle button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.IsTimeStampIncludedInExportFilePath">
            <summary>
            Controls the IsChecked property in the selecting to include timestamp for export path section
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.RunPreviewEnabled">
            <summary>
            Controls the Enabled property in the Show Run Preview toogle button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.LanguagesList">
            <summary>
            LanguagesList property contains the list of all the languages listed in: https://wiki.autodesk.com/display/LOCGD/Dynamo+Languages
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.UnitList">
            <summary>
            Supported units in Host (Revit), used in scaling of grapic helpers (grid, axes)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.PackagePathsForInstall">
            <summary>
            PackagePathsForInstall contains the list of all package paths where
            packages can be installed.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.SelectedPackagePathForInstall">
            <summary>
            Currently selected package path where new packages will be downloaded.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.DisableBuiltInPackages">
            <summary>
            Flag specifying whether loading built-in packages
            is disabled, if true, or enabled, if false.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.DisableCustomPackages">
            <summary>
            Flag specifying whether loading custom packages
            is disabled, if true, or enabled, if false.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.DisableTrustWarnings">
            <summary>
            Flag specifying whether trust warnings should be shown
            when opening .dyn files from unstrusted locations.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.GroupStyleFontSizeList">
            <summary>
            GroupStyleFontSizeList contains the list of sizes for defined fonts to be applied to a GroupStyle
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.NumberFormatList">
            <summary>
            NumberFormatList contains the list of the format for numbers, right now in Dynamo has the next formats: 0, 0.0, 0.00, 0.000, 0.0000
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.StyleItemsList">
            <summary>
            This will contain a list of all the Styles created by the user in the Styles list ( Visual Settings -> Group Styles section)
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.AddStyle(Dynamo.Configuration.StyleItem)">
            <summary>
            Used to add styles to the StyleItemsListe while also update the saved changes label
            </summary>
            <param name="style">style to be added</param>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.IsWarningEnabled">
            <summary>
            This flag will be in true when the Style that user is trying to add already exists (otherwise will be false - Default)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.CurrentWarningMessage">
            <summary>
            This property will hold the warning message that has to be shown in the warning icon next to the TextBox
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.IsSaveButtonEnabled">
            <summary>
            This property describes if the SaveButton will be enabled or not (when trying to save a new Style).
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.AddStyleControl">
            <summary>
            This property was created just a container for default information when the user is adding a new Style
            When users press the Add Style button some controls are shown so the user can populate them, this property will contain default values shown
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.OptionsGeometryScale">
            <summary>
            This property is used as a container for the description text (GeometryScalingOptions.DescriptionScaleRange) for each radio button (Visual Settings -> Geometry Scaling section)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.ShowEdges">
            <summary>
            Controls the binding for the ShowEdges toogle in the Preferences->Visual Settings->Display Settings section
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.UseHardwareAcceleration">
            <summary>
            Control to use hardware acceleration
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.IsolateSelectedGeometry">
            <summary>
            Controls the binding for the IsolateSelectedGeometry toogle in the Preferences->Visual Settings->Display Settings section
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.TessellationDivisions">
            <summary>
            This property is bind to the Render Precision Slider and control the amount of tessellation applied to objects in background preview
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.ShowPreviewBubbles">
            <summary>
            Indicates if preview bubbles should be displayed on nodes.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.UseHostScaleUnits">
            <summary>
            Indicates if Host units should be used for graphic helpers for Dynamo Revit
            Also toggles between Host and Dynamo units 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.EnableManualScaleOverrides">
            <summary>
            If not in DynamoRevit, then enable this option
            Else, control via the Revit-specific toggle
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.ShowCodeBlockLineNumber">
            <summary>
            Indicates if line numbers should be displayed on code block nodes.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.IsVisibleAddStyleBorder">
            <summary>
            This property will make Visible or Collapse the AddStyle Border defined in the GroupStyles section
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.IsEnabledAddStyleButton">
            <summary>
            This property will Enable or Disable the AddStyle button defined in the GroupStyles section
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.PythonTemplateFilePath">
            <summary>
            Python Template File Path
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.PythonEnginesList">
            <summary>
            PythonEnginesList contains the list of Python engines available
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.SelectedPythonEngine">
            <summary>
            Controls the Selected option in Python Engine combobox
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.HideIronPythonAlertsIsChecked">
            <summary>
            Controls the IsChecked property in the "Hide IronPython alerts" toggle button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.ShowWhitespaceIsChecked">
            <summary>
            Controls the IsChecked property in the "Show Whitespace in Python editor" toggle button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.NotificationCenterIsChecked">
            <summary>
            Controls the IsChecked property in the "Notification Center" toggle button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.PersistExtensionsIsChecked">
            <summary>
            Controls the IsChecked property in the "Extensions" toggle button, to enable persisted extensions, that will remember
            extensions setting as per the last session.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.HideAutocompleteMethodOptions">
            <summary>
            If true, autocomplete method options are hidden from UI 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.IsDynamoRevit">
            <summary>
            Returns if the current session is Dynamo Revit
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.NodeAutocompleteIsChecked">
            <summary>
            Controls the IsChecked property in the "Node autocomplete" toogle button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.NodeAutocompleteMachineLearningIsChecked">
            <summary>
            Controls if the the Node autocomplete Machine Learning option is checked for the radio buttons
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.NodeAutocompleteMachineLearningIsBeta">
            <summary>
            Controls if the the Node autocomplete Machine Learning option is beta from feature flag
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.MLRecommendationNumberOfResults">
            <summary>
            Contains the numbers of result of the ML recommendation
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.HideNodesBelowSpecificConfidenceLevelIsChecked">
            <summary>
            Controls the IsChecked property in the "Hide nodes below a specific confidence level" toogle button
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.MLRecommendationConfidenceLevel">
            <summary>
            Contains the confidence level of a ML recommendation
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.EnableHideNodesToggle">
            <summary>
            If the user can click on the Hide Nodes toggle
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.EnableConfidenceLevelSlider">
            <summary>
            If the user can click on the confidence level Slider
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.EnableTSplineIsChecked">
            <summary>
            Controls the IsChecked property in the "Enable T-spline nodes" toogle button
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.HideUnhideNamespace(System.Boolean,System.String,System.String)">
            <summary>
            This method updates the node search library to either hide or unhide nodes that belong
            to a specified assembly name and namespace. These nodes will be hidden from the node
            library sidebar and from the node search.
            </summary>
            <param name="hide">Set to true to hide, set to false to unhide.</param>
            <param name="library">The assembly name of the library.</param>
            <param name="namespc">The namespace of the nodes to be hidden.</param>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.PackagePathsViewModel">
            <summary>
            Package Search Paths view model.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PreferencesViewModel.TrustedPathsViewModel">
            <summary>
            Trusted Paths view model.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.importSettings(System.String)">
            <summary>
            Returns a boolean value indicating if the Settings importing was successful or not
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.importSettingsContent(System.String)">
            <summary>
            Returns a boolean value indicating if the Settings importing was successful or not by sending the content of the xml file
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.#ctor(Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            The PreferencesViewModel constructor basically initialize all the ItemsSource for the corresponding ComboBox in the View (PreferencesView.xaml)
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.UnsubscribeAllEvents">
            <summary>
            Called from DynamoViewModel::UnsubscribeAllEvents()
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.PackagePathsViewModel_RootLocations_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Listen for changes to the custom package paths and update package paths for install accordingly
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.CommitPackagePathsForInstall">
            <summary>
            Store selection to preferences
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.InitPackagePathsForInstall">
            <summary>
            Force reload of paths and get current selection from preferences
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.InitPackageListFilters">
            <summary>
            Init all package filters
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.Model_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Listen for the PropertyChanged event and updates the saved changes label accordingly
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.UpdateSavedChangesLabel">
            <summary>
            Updates the contents to display by the SavedChanges label and its tooltip
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.RemoveStyleEntry(System.String)">
            <summary>
            This method will remove the current Style selected from the Styles list by name
            </summary>
            <param name="styleName"></param>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.IsStyleNameValid(Dynamo.Configuration.StyleItem)">
            <summary>
            This method will check if the name of Style that is being created already exists in the Styles list
            </summary>
            <param name="item">target style item to check</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.ValidateStyleGuid(Dynamo.Configuration.StyleItem)">
            <summary>
            This method will check if the name of Style that is being created already exists in the Styles list
            </summary>
            <param name="item">target style to be checked</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.ResetAddStyleControl">
            <summary>
            This method will remove a specific style control from the Styles list
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.EnableGroupStyleWarningState(System.String)">
            <summary>
            This method will enable the warning icon next to the GroupName TextBox and other buttons needed
            </summary>
            <param name="warningMessage">Message that will be displayed when the mouse is over the warning</param>
        </member>
        <member name="M:Dynamo.ViewModels.PreferencesViewModel.GetRandomHexStringColor">
            <summary>
            This Method will generate a random color string in a Hexadecimal format
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dynamo.ViewModels.PythonTemplatePathEventArgs.Cancel">
            <summary>
            Indicate whether user wants to set the current path.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PythonTemplatePathEventArgs.Path">
            <summary>
            Indicate the path for Custom Python Template.
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.GeometryScalingOptions">
            <summary>
            This class will contain the Enum value and the corresponding description for each radio button in the Visual Settings -> Geometry Scaling section
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.GeometryScalingOptions.DescriptionScaleRange">
            <summary>
            This property will contain the description of each of the radio buttons in the Visual Settings -> Geometry Scaling section
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.GeometryScalingOptions.ConvertUIToScaleFactor(System.Int32)">
            <summary>
            This method is used to convert a index (representing a RadioButton in the UI) to a ScaleFactor
            </summary>
            <param name="index">This value is the index for the RadioButton in the Geometry Scaling section. 
            It can have the values:
              0 - Small
              1 - Medium (Default)
              2 - Large
              3 - Extra Large
            </param>
            <returns>The Scale Factor (-2, 0, 2, 4)</returns>
        </member>
        <member name="M:Dynamo.ViewModels.GeometryScalingOptions.ConvertScaleFactorToUI(System.Int32)">
            <summary>
            This method is used to conver a Scale Factor to a index so we can Check a Radio Button in the UI
            </summary>
            <param name="scaleValue">This values is the Scale that we need to convert to index (representing a RadioButton)
            It can have the values:
            - 2 - Small
              0 - Medium (Default)
              2 - Large
              4 - Extra Large
            </param>
            <returns>The radiobutton index (0,1,2,3)</returns>
        </member>
        <member name="T:Dynamo.ViewModels.TabSettings">
            <summary>
            This class represent a Tab and is used for store just one Expander info(due that just one Expander can be expanded at one time)
            </summary>
        </member>
        <member name="F:Dynamo.ViewModels.TabSettings.Name">
            <summary>
            Tab Name (e.g. Features or Visual Settings)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.TabSettings.ExpanderActive">
            <summary>
            This property hold the name for the current Expander expanded
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.IPackageInstaller">
            <summary>
            An interface containing operations for installing Dynamo packages
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.IPackageInstaller.DownloadAndInstallPackage(Dynamo.Graph.Workspaces.IPackageInfo,System.String)">
            <summary>
            Initiates download and install of a package
            </summary>
            <param name="package">Package Info of the package to be downloaded--includes package name and version</param>
            <param name="downloadPath">Path to download location of the package</param>
        </member>
        <member name="T:Dynamo.ViewModels.PathEnabledConverter">
            <summary>
            A converter that returns true if a path is currently disabled as specified in the 
            PreferenceSettings. Value[0] should be the PackgagePathViewModel.
            Value[1] should be the path to check as a string.
            Returns false by default.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PackagePathEventArgs.Cancel">
            <summary>
            Indicate whether user wants to add the current path to the list
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PackagePathEventArgs.Path">
            <summary>
            Indicate the path to the custom packages folder
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PackagePathViewModel.PreferenceSettings">
            <summary>
            Returns the preference settings.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PackagePathViewModel.#ctor(Dynamo.Interfaces.IPreferences)">
            <summary>
            This constructor overload has been added for backwards comptability.
            </summary>
            <param name="setting"></param>
        </member>
        <member name="T:Dynamo.ViewModels.CompactBubbleViewModel">
            <summary>
            Class containing data to display in compact preview bubble
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.CompactBubbleViewModel.NodeLabel">
            <summary>
            Represents type of node output
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.CompactBubbleViewModel.NumberOfItems">
            <summary>
            Number of items in the overall list if node output is a list
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.CompactBubbleViewModel.ShowNumberOfItems">
            <summary>
            Indicates if number of list items is shown
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.CompactBubbleViewModel.IsCollection">
            <summary>
            Indicates if number of list items is shown
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.CompactBubbleViewModel.#ctor(System.Boolean)">
            <summary>
            Creates an instance of <cref name="CompactBubbleViewModel"/> class with empty data
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.CompactBubbleViewModel.#ctor(System.String,System.Int32)">
            <summary>
            Creates an instance of <cref name="CompactBubbleViewModel"/> class with specified data
            </summary>
            <param name="nodeLabel">Text representing type of node output</param>
            <param name="items">Number of items in the overall list if node output is a list</param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Dynamo.ViewModels.ConnectorAnchorViewModel.MarkerSize" -->
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.CurrentPosition">
            <summary>
            Midpoint of the connector bezier curve.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.IsHalftone">
            <summary>
            Follows the 'isHalftone' visibility of the connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.IsTemporarilyDisplayed">
            <summary>
            Property which overrides 'IsCollapsed' condition. When this prop is set to true, wires are set to 
            40% opacity.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.PinIconPreviewOn">
            <summary>
            Is the mouse over one of pin icon? Flag to switch color(binding) of pin button.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.WatchIconPreviewOn">
            Is the mouse over one of watch icon? Flag to switch color(binding) of watch button.
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.CanShowTooltip">
            <summary>
            This flag's final destination, (dynamomodel -> dynamoviewmodel -> connectorviewmodel-> connectoranchorviewmodel)
            where it tells the view whether or not it can
            show the tooltip.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.CanDisplayIcons">
            <summary>
            This property acts as the main flag that signals whether or not watch icon/pin icon/tooltip
            should be visibile/ hidden.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.DataToolTipText">
            <summary>
            This property holds the string representation of the data 
            being passed through this connector. It gets relayed from the 
            ConnectorViewModel.
            </summary>
        </member>
        <member name="E:Dynamo.ViewModels.ConnectorAnchorViewModel.RequestDispose">
            <summary>
            Raises a 'redraw' event for this ConnectorPinViewModel
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.PlaceWatchNodeCommand">
            <summary>
            Command which places a watch node in the center of the connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorAnchorViewModel.PinConnectorCommand">
            <summary>
            Delegate command to run when 'Pin Wire' item is clicked on this connector ContextMenu.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorAnchorViewModel.PinConnectorCommandExecute(System.Object)">
            <summary>
            Places pin at the location of mouse (over a connector)
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorAnchorViewModel.#ctor(Dynamo.ViewModels.ConnectorViewModel,Dynamo.ViewModels.DynamoViewModel,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="connectorViewModel"></param>
            <param name="dynamoViewModel"></param>
            <param name="tooltipText"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorAnchorViewModel.Dispose">
            <summary>
            Dispose this.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorAnchorViewModel.PlaceWatchNode(Dynamo.Graph.Connectors.ConnectorModel,System.Collections.Generic.IEnumerable{System.Windows.Point},System.Collections.Generic.List{Dynamo.Graph.ModelBase})">
            <summary>
            Places watch node at the midpoint of the connector
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorAnchorViewModel.WireNewNode(Dynamo.Models.DynamoModel,Dynamo.Graph.Nodes.NodeModel,Dynamo.Graph.Nodes.NodeModel,Dynamo.Graph.Nodes.NodeModel,Dynamo.Graph.Connectors.ConnectorModel,System.Collections.Generic.IEnumerable{System.Windows.Point},System.Collections.Generic.List{Dynamo.Graph.ModelBase},System.Collections.Generic.List{Dynamo.Graph.ModelBase})">
            <summary>
            Rewires nodes and newly placed watch node between them.
            </summary>
            <param name="dynamoModel"></param>
            <param name="startNode"></param>
            <param name="endNode"></param>
            <param name="watchNodeModel"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorAnchorViewModel.ConnectorSegmentIndex(System.Windows.Point,System.Windows.Point)">
            <summary>
            Can only be zero or one: either the connector between the start node and the newly placed watch node,
            or the connector between the watch node and the end node.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorContextMenuViewModel.IsCollapsed">
            <summary>
            Controls connector visibility: on/off. When wire is off, additional styling xaml turns off tooltips.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorContextMenuViewModel.CurrentPosition">
            <summary>
            Location of this control.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorContextMenuViewModel.#ctor(Dynamo.ViewModels.ConnectorViewModel)">
            <summary>
            Constructor
            </summary>
            <param name="connectorViewModel"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorContextMenuViewModel.RequestDisposeViewModel">
            <summary>
            Calls for ConnectorViewModel to dispose this instance.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorContextMenuViewModel.HideConnectorSurrogateCommand">
            <summary>
            Alerts ConnectorViewModel to hide/show the connector.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorContextMenuViewModel.SelectConnectedSurrogateCommand">
            <summary>
            Alerts ConnectorViewModel select connected nodes.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorContextMenuViewModel.BreakConnectionsSurrogateCommand">
            <summary>
            Alerts ConnectorViewModel to break the current connection.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorContextMenuViewModel.PinConnectedSurrogateCommand">
            <summary>
            Alerts ConnectorViewModel to pin the connector
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorContextMenuViewModel.GoToStartNodeCommand">
            <summary>
            Alerts ConnectorViewModel to focus the view on start node
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.ConnectorContextMenuViewModel.GoToEndNodeCommand">
            <summary>
            Alerts ConnectorViewModel to focus the view on end node
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorContextMenuViewModel.BreakConnectionsSurrogateCommandExecute(System.Object)">
            <summary>
            Request disposal of this viewmodel after command has run.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorContextMenuViewModel.SelectConnectedSurrogateCommandExecute(System.Object)">
            <summary>
            Request disposal of this viewmodel after command has run.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorContextMenuViewModel.HideConnectorSurrogateCommandExecute(System.Object)">
            <summary>
            Request disposal of this viewmodel after command has run.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorContextMenuViewModel.PinConnectedSurrogateCommandExecute(System.Object)">
            <summary>
            Request disposal of this viewmodel after command has run.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorContextMenuViewModel.GoToStartNodeCommandExecute(System.Object)">
            <summary>
            Executes the start node command on connector view model
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.ViewModels.ConnectorContextMenuViewModel.GoToEndNodeCommandExecute(System.Object)">
            <summary>
            Executes the end node command on connector view model
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel">
            <summary>
            Search View Model for Node AutoComplete Search Bar
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.ServiceVersion">
            <summary>
            The Node AutoComplete ML service version, this could be empty if user has not used ML way
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.DefaultResults">
            <summary>
            Cache of default node suggestions, use it in case where
            a. our algorithm does not return sufficient results
            b. the results returned by our algorithm will not be useful for user
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.IsDisplayingMLRecommendation">
            <summary>
            For checking if the ML method is selected
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.HideAutocompleteMethodOptions">
            <summary>
            If true, autocomplete method options are hidden from UI 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.AutocompleteMLTitle">
            <summary>
            The No Recommendations or Low Confidence Title
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.AutocompleteMLMessage">
            <summary>
            The No Recommendations or Low Confidence message
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.DisplayAutocompleteMLStaticPage">
            <summary>
            Indicates the No recommendations / Low confidence message should be displayed (image and texts)
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.DisplayLowConfidence">
            <summary>
            Indicates if display the Low confidence option and Tooltip
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.#ctor(Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            Constructor
            </summary>
            <param name="dynamoViewModel">Dynamo ViewModel</param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.ResetAutoCompleteSearchViewState">
            <summary>
            Reset Node AutoComplete search view state
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.ShowLowConfidenceResults">
            <summary>
            Show the low confidence ML results.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.PopulateAutoCompleteCandidates">
            <summary>
            Key function to populate node autocomplete results to display
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.GetViewModelForNodeSearchElements(System.Collections.Generic.List{Dynamo.Search.SearchElements.NodeSearchElement})">
            <summary>
            Returns a IEnumberable of NodeSearchElementViewModel for respective NodeSearchElements.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.GetViewModelForNodeSearchElement(Dynamo.Search.SearchElements.NodeSearchElement)">
            <summary>
            Returns a NodeSearchElementViewModel for a NodeSearchElement
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.SearchNodeAutocomplete(System.String)">
            <summary>
                Performs a search using the given string as query and subset, if provided.
            </summary>
            <returns> Returns a list with a maximum MaxNumSearchResults elements.</returns>
            <param name="search"> The search query </param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.SearchAutoCompleteCandidates(System.String)">
            <summary>
            Filters the matching node search elements based on user input in the search field. 
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.AddNodeTypeToSearchIndex(Dynamo.Search.SearchElements.NodeSearchElement,Lucene.Net.Documents.Document)">
            <summary>
            Add node information to Lucene index
            </summary>
            <param name="node">node info that will be indexed</param>
            <param name="doc">Lucene document in which the node info will be indexed</param>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.GetMatchingSearchElements">
            <summary>
            Returns a collection of node search elements for nodes
            that output a type compatible with the port type if it's an input port.
            These search elements can belong to either zero touch, NodeModel or Builtin nodes.
            This method returns an empty collection if the input port type cannot be inferred or
            there are no matching nodes found for the type. Currently the match does not include
            rank information. For example Curve[] is matched as Curve. The results include types
            that would be valid using normal class inheritance rules.
            The resulting compatible search elements can be made to appear in the node autocomplete search dialog.
            </summary>
            <returns>collection of node search elements</returns>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.DerivesFrom(System.String,System.String,ProtoCore.Core)">
            <summary>
            Does typeb derive from typea
            </summary>
            <param name="typea"></param>
            <param name="typeb"></param>
            <param name="core"></param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.NodeSearchElementComparer">
            <summary>
            Compares NodeSearchElements based on their typeDistance from a given type 'typeNameToCompareTo'
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.NodeSearchElementComparer.CompareNodeSearchElementByTypeDistance(Dynamo.Search.SearchElements.NodeSearchElement,Dynamo.Search.SearchElements.NodeSearchElement,System.String,ProtoCore.Core)">
            <summary>
            Compares two nodeSearchElements - general rules of the sort as follows:
            If all return types of the two searchElements are the same, they are equal.
            If any return type of both searchElements is an exact match for our input type, they are equal.
            If a searchElement is null, it is larger than the other element.
            If a single searchElement's return type list contains an exact match it is smaller.
            If the minimum type distance between a searchElements return types and our inputType than this searchElement is smaller. (closer)
            If the minimim type distances are the same the searchElements are equal.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="typeNameToCompareTo"></param>
            <param name="core"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.NodeAutoCompleteSearchViewModel.NodeSearchElementComparer.GetTypeDistance(System.String,System.String,ProtoCore.Core)">
             <summary>
             Return the type distance between two type names. 
             </summary>
             <param name="typea"></param>
             <param name="typeb"></param>
             <param name="core"></param>
             <returns>Will return int.MaxValue if no match can be found.
             Otherwise will return the distance between two types in class hierarchy.
             Will throw an exception if either type name is undefined.
            </returns>
        </member>
        <member name="T:Dynamo.ViewModels.OpenDocumentationLinkEventArgs">
            <summary>
            Provides information about the Dynamo RequestOpenDocumentationLink event,
            such as the link that was requested to be opened and whether it is a remote resource. 
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenDocumentationLinkEventArgs.Link">
            <summary>
            The documentation link that was requested to be opened.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenDocumentationLinkEventArgs.IsRemoteResource">
            <summary>
            Indicates whether the requested link points to a remote resource.
            A resource is considered remote if it is not a file on the local filesystem.
            Examples of remote resources include a web address or a file on a network share.
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.OpenNodeAnnotationEventArgs">
            <summary>
            A node documentation request compatible with the Dynamo RequestOpenDocumentationLink event,
            such as the namespace of the node used to lookup the .md documentation file
            and additional Node Info gathered from the NodeModel properties.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.MinimumQualifiedName">
            <summary>
            Minimum qualified name of the node, used to match nodes with documentation markdown files.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.Type">
            <summary>
            Node type.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.Description">
            <summary>
            Short description of the node.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.Category">
            <summary>
            Nodes category.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.PackageName">
            <summary>
            Name of the package this node belongs to
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.OriginalName">
            <summary>
            The original name of the Node
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.InputNames">
            <summary>
            Collection of the nodes input names.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.OutputNames">
            <summary>
            Collection of the nodes output names
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.InputDescriptions">
            <summary>
            Collection of the nodes inputs description.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.OutputDescriptions">
            <summary>
            Collection of the nodes outputs description.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.NodeInfos">
            <summary>
            Collection of the nodes collection of warnings/errors/infos.
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.OpenNodeAnnotationEventArgs.#ctor(Dynamo.Graph.Nodes.NodeModel,Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            Creates a new instance of OpenNodeAnnotationEventArgs, which contains data used
            to create documentation for the node.
            </summary>
            <param name="model">NodeModel to document</param>
            <param name="dynamoViewModel"></param>
        </member>
        <member name="T:Dynamo.ViewModels.SaveWarningOnUnresolvedIssuesArgs">
            <summary>
            Provides information about the task dialog used when saving a graph while there are unresolved linter issues in the graph.
            This is meant to be used only for unit tests to verify that the dialog has been showed.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleDataPacket.Message">
            <summary>
            The user-facing message a user sees when presented with an info message / warning / error
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleDataPacket.MessageNumber">
            <summary>
            Used to display an iterating count next to user-facing messages. Only shows when more than one message exists
            at this level (e.g. Warnings).
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InfoBubbleDataPacket.LinkText">
            <summary>
            The string representation of a URI pointing to a markdown file which is opened when the user clicks 'Read More' on
            a particular info message / warning / error which displays this functionality.
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.PackageFilter">
            <summary>
            Package Filter model
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PackageFilter.#ctor(System.String,Dynamo.ViewModels.InstalledPackagesViewModel)">
            <summary>
            Create a package filter
            </summary>
            <param name="name">Name of filter</param>
            <param name="viewModel">Back pointer to parent view model</param>
        </member>
        <member name="M:Dynamo.ViewModels.PackageFilter.#ctor(Dynamo.ViewModels.InstalledPackagesViewModel)">
            <summary>
            Create a package filter for All
            </summary>
            <param name="viewModel">Back pointer to parent view model</param>
        </member>
        <member name="P:Dynamo.ViewModels.PackageFilter.Name">
            <summary>
            Filter name
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PackageFilter.ViewModel">
            <summary>
            Back pointer to owner view model
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PackageFilter.IsChecked">
            <summary>
            True if this filter is active
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.InstalledPackagesViewModel">
            <summary>
            View model for installed package control
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InstalledPackagesViewModel.LocalPackages">
            <summary>
            The current filtered list of local packages
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InstalledPackagesViewModel.Filters">
            <summary>
            Possible filters to use for the filtered list of packages
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.InstalledPackagesViewModel.Model">
            <summary>
            Back pointer to the Package Loader
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InstalledPackagesViewModel.#ctor(Dynamo.ViewModels.DynamoViewModel,Dynamo.PackageManager.PackageLoader)">
            <summary>
            Create a new view model for installed packages
            </summary>
            <param name="dynamoViewModel">Back pointer to the dynamo view model</param>
            <param name="model">Back pointer to the package loader</param>
        </member>
        <member name="M:Dynamo.ViewModels.InstalledPackagesViewModel.ApplyPackageFilter">
            <summary>
            Filter the list of local packages based on the current filter selection
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.InstalledPackagesViewModel.PopulateFilters">
            <summary>
            Populate the list of available filters based on the packages currently known by the dynamo view model
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.TermsOfUseHelper">
            <summary>
            A helper class to check asynchronously whether the Terms of Use has 
            been accepted, and if so, continue to execute the provided Action.
            </summary>
        </member>
        <member name="T:Dynamo.ViewModels.PackageManagerClientViewModel">
            <summary>
                A thin wrapper on the Greg rest client for performing IO with
                the Package Manager
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PackageManagerClientViewModel.ViewModelOwner">
            <summary>
            The System.Windows.Window owner of the view model.
            Used to align messagebox dialogs created by this model
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PackageManagerClientViewModel.GetInfectedPackages">
            <summary>
            Returns a dictionary of infected package(s) with name and version, if the last published version of package uploaded by the current user was flagged as infected.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.ViewModels.PackageManagerClientViewModel.DownloadAndInstallPackage(Dynamo.Graph.Workspaces.IPackageInfo,System.String)">
            <summary>
            Download and install a specific package from the package manager
            </summary>
            <param name="packageInfo"></param>
            <param name="downloadPath"></param>
        </member>
        <member name="M:Dynamo.ViewModels.PackageManagerClientViewModel.WarnAboutDuplicatePackageConflicts(Greg.Responses.PackageVersion,Dynamo.PackageManager.Package,System.Collections.Generic.List{Dynamo.PackageManager.Package})">
            <summary>
            Warns about conflicts with both the main package and its dependencies.  
            </summary>
            <param name="package">package version being downloaded</param>
            <param name="duplicatePackage">local package found to be duplicate of one being downloaded</param>
            <param name="dependencyConflicts">List of packages that are in conflict with the dependencies of the package version to be downloaded (does not include the main package)</param>
            <returns>True if the User opted to continue with the download operation. False otherwise</returns>
        </member>
        <member name="M:Dynamo.ViewModels.PackageManagerClientViewModel.FormatPackageVersionList(System.Collections.Generic.IEnumerable{System.Tuple{Greg.Responses.PackageHeader,Greg.Responses.PackageVersion}})">
            <summary>
                Returns a newline delimited string representing the package name and version of the argument
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.PackageManagerClientViewModel.Download(Dynamo.PackageManager.PackageDownloadHandle)">
            <summary>
            This method downloads the package represented by the PackageDownloadHandle,
            
            </summary>
            <param name="packageDownloadHandle">package download handle</param>
        </member>
        <member name="M:Dynamo.ViewModels.PackageManagerClientViewModel.SetPackageState(Dynamo.PackageManager.PackageDownloadHandle,System.String)">
            <summary>
            Check Dynamo package install state
            </summary>
            <param name="packageDownloadHandle">package download handle</param>
            <param name="downloadPath">package download path</param>
        </member>
        <member name="P:Dynamo.ViewModels.PackageViewModel.LoadedWithNoScheduledOperation">
            <summary>
            Specifies whether or not this Package's LoadState is Loaded with no scheduled operation.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.PackageViewModel.Unloaded">
            <summary>
            Specifies whether or not this Package's LoadState is set to Unloaded
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.ViewModelBase.Dispose">
            <summary>
            Dispose this viewModel, in the case of our ViewModels this usually means
            unsubscribing from events which we subscribed to in the construction of
            this viewModel. We must unsubscribe to events for which producers live longer
            - like DynamoViewModel. In some cases we must also unsubscribe from event
            producers like our models, which are held by other references and were not
            being garbage collected.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.Children">
            <summary>
            A collection of child WatchItems.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.NodeLabel">
            <summary>
            The string label visible in the watch.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.Link">
            <summary>
            
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.ViewPath">
            <summary>
            Returns the last index of the Path, 
            surrounded with square brackets.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.Path">
            <summary>
            A path describing the location of the data.
            Path takes the form var_xxxx...:0:1:2, where
            var_xxx is the AST identifier for the node, followed
            by : delimited indices representing the array index
            of the data.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.ShowRawData">
            <summary>
            A flag used to determine whether the item
            should be process to draw 'raw' data or data
            treated in some context. An example is the drawing
            of watch items with or without units.
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.IsOneRowContent">
            <summary>
            If Content is 1 string, e.g. "Empty", "null", "Function", margin should be more to the left side.
            For this purpose used this value. When it's true, margin in DataTrigger is set to -15,5,5,5; otherwise
            it's set to 5,5,5,5
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.NumberOfItems">
            <summary>
            Number of items in the overall list if node output is a list
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.IsCollection">
            <summary>
            Indicates if the items are lists
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.Levels">
            <summary>
            Returns a list of listlevel items
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.IsTopLevel">
            <summary>
            Indicates if the item is the top level item
            </summary>
        </member>
        <member name="P:Dynamo.ViewModels.WatchViewModel.ValueType">
            <summary>
            The type of the output value,
            used to display value type labels on previews
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WatchViewModel.#ctor(System.Object,System.String,System.Action{System.String},System.Boolean)">
            <summary>
            This is added to set the Type identifier for the watch data. 
            It calls the base constructor internally.
            </summary> 
        </member>
        <member name="M:Dynamo.ViewModels.WatchViewModel.CountNumberOfItems">
            <summary>
            Method to account for the total number of items and the depth of a list in a list (in the WatchTree)
            </summary>
            
        </member>
        <member name="M:Dynamo.ViewModels.WatchViewModel.CountLevels">
            <summary>
            Set the list levels of each list 
            </summary>
        </member>
        <member name="M:Dynamo.ViewModels.WatchViewModel.GetNodeLabelTree(System.Int32,System.Boolean)">
            <summary>
            Get the NodeLabel for this WatchViewModel and any children.
            Each level of children will be indented by 2 spaces.
            </summary>
            <param name="depth">The number of levels of indentation.</param>
            <param name="includeKey">If true the list or dictionary key will be included in the string.</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.UI.Controls.NodeAutoCompleteSearchControl">
            <summary>
            Interaction logic for AutoCompleteSearchControl.xaml
            Notice this control shares a lot of logic with InCanvasSearchControl for now
            But they will diverge eventually because of UI improvements to auto complete.
            </summary>
            <summary>
            NodeAutoCompleteSearchControl
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.NodeAutoCompleteSearchControl.ViewModel">
            <summary>
            Node AutoComplete Search ViewModel DataContext
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.NodeAutoCompleteSearchControl.DisplaySuggestions(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            A common method to handle the suggestions Button being clicked
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.NodeAutoCompleteSearchControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.InCanvasSearchControl">
            <summary>
            Interaction logic for IncanvasLibrarySearchControl.xaml
            </summary>
            <summary>
            InCanvasSearchControl
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.InCanvasSearchControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.HeaderStrip">
            <summary>
            HeaderStrip
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.HeaderStrip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.OutPortContextMenu">
            <summary>
            Interaction logic for OutPortContextMenu.xaml
            </summary>
            <summary>
            OutPortContextMenu
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.OutPortContextMenu.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.OutPortContextMenu.OutPortContextMenuControl_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Disposes of the event listener when the control is unloaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.OutPortContextMenu.CurrentApplicationDeactivated(System.Object,System.EventArgs)">
            <summary>
            Closes the popup when Dynamo is not the active application.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.OutPortContextMenu.OnRequestShowPortContextMenu(Dynamo.ViewModels.ShowHideFlags)">
            <summary>
            Requests to open the OutPortContextMenu popup.
            </summary>
            <param name="flags"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.OutPortContextMenu.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.ClassInformationView">
            <summary>
            Interaction logic for ClassInformationView.xaml
            </summary>
            <summary>
            ClassInformationView
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.ClassInformationView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelPopup.EndInit">
            <summary>
            Override EndInit().
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.UseLevelSpinner">
            <summary>
            UseLevelSpinner control 
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.UseLevelSpinner.Level">
            <summary>
            Gets or sets the value assigned to the numeric up-down control.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.UseLevelSpinner.IsReadOnly">
            <summary>
            Gets or sets a value that indicating whether the text can be changed by the use of the up or down buttons only.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.UseLevelSpinner.KeepListStructure">
            <summary>
            Gets or sets a value that indicating whether the text can be changed by the use of the up or down buttons only.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.UseLevelSpinner.ContentText">
            <summary>
            Gets the current text content held by the text box.
            </summary>
        </member>
        <member name="E:Dynamo.UI.Controls.UseLevelSpinner.LevelChanged">
            <summary>
            Occurs when the Level property changes.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelSpinner.#ctor">
            <summary>
            Initializes a new instance of UseLevelSpinner.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelSpinner.OnApplyTemplate">
            <summary>
            Called when the template's tree is generated.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelSpinner.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Reports that the IsKeyboardFocusWithin property changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelSpinner.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the System.Windows.Input.Mouse.MouseWheel routed event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelSpinner.OnLevelChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Int32})">
            <summary>
            Raises the LevelChanged event.
            </summary>
            <param name="args">Arguments associated with the LevelChanged event.</param>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelSpinner.OnIncrease">
            <summary>
            IncreaseCommand event handler.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelSpinner.OnDecrease">
            <summary>
            DecreaseCommand event handler.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.UseLevelSpinner.UpdateText">
            <summary>
            Displays level value. 
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.InPortContextMenu">
            <summary>
            Interaction logic for InPortContextMenu.xaml
            </summary>
            <summary>
            InPortContextMenu
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.InPortContextMenu.InPortContextMenuControl_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Disposes of the event listener when the control is unloaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.InPortContextMenu.CurrentApplicationDeactivated(System.Object,System.EventArgs)">
            <summary>
            Closes the popup when Dynamo is not the active application.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.InPortContextMenu.OnRequestShowPortContextMenu(Dynamo.ViewModels.ShowHideFlags)">
            <summary>
            Requests to open the InPortContextMenu popup.
            </summary>
            <param name="flags"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.InPortContextMenu.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.ImageCheckBox.OnApplyTemplate">
            <summary>
            You can't use dynamic resource references or data binding expressions
            to set Storyboard or animation property values. That's because 
            everything inside a ControlTemplate must be thread-safe, and the 
            timing system must Freeze Storyboard objects to make them thread-safe.
            A Storyboard cannot be frozen if it or its child timelines contain 
            dynamic resource references or data binding expressions. 
            
            See: http://msdn.microsoft.com/en-us/library/ms742868.aspx
            
            </summary>
            
        </member>
        <member name="M:Dynamo.UI.Controls.ImageButton.OnApplyTemplate">
            <summary>
            For detailed explaination of why we need this,
            see "ImageCheckBox.OnApplyTemplate" method above.
            </summary>
            
        </member>
        <member name="M:Dynamo.UI.Controls.ImageRepeatButton.OnApplyTemplate">
            <summary>
            For detailed explaination of why we need this,
            see "ImageCheckBox.OnApplyTemplate" method above.
            </summary>
            
        </member>
        <member name="T:Dynamo.UI.Controls.ShortcutToolbar">
            <summary>
            An object which provides the data for the shortcut toolbar.
            </summary>
            <summary>
            ShortcutToolbar
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutToolbar.ShortcutBarItems">
            <summary>
            A collection of <see cref="T:Dynamo.UI.Controls.ShortcutBarItem"/>.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutToolbar.ShortcutBarRightSideItems">
            <summary>
            A collection of <see cref="P:Dynamo.UI.Controls.ShortcutToolbar.ShortcutBarItems"/> for the right hand side of the shortcut bar.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.ShortcutToolbar.#ctor(Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            Construct a ShortcutToolbar.
            </summary>
            <param name="dynamoViewModel"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.ShortcutToolbar.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.ShortcutBarItem">
            <summary>
            An object which provides the data for an item in the shortcut toolbar.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutBarItem.ShortcutCommandParameter">
            <summary>
            A parameter sent to the ShortcutCommand.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutBarItem.ShortcutCommand">
            <summary>
            The Command that will be executed by this shortcut item.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutBarItem.ImgDisabledSource">
            <summary>
            The path to the image for the disabled state of this shortcut item.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutBarItem.ImgHoverSource">
            <summary>
            The path to the image for the hover state of this shortcut item.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutBarItem.ImgNormalSource">
            <summary>
            The path to the image for the normal state of this shortcut item.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutBarItem.ShortcutToolTip">
            <summary>
            The tooltip for this shortcut item.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.ShortcutBarItem.Name">
            <summary>
            The Name of the shortcut
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.StartPageListItem">
            <summary>
            This class represents the unified data class that is bound to all the 
            list boxes on the StartPageView. The bound data item can be handled in 
            different ways depending on their ClickAction and ContextData properties.
            See "Action" enumeration below for more details of each item sub-type.
            </summary>
            
        </member>
        <member name="F:Dynamo.UI.Controls.StartPageListItem.Action.RegularCommand">
            <summary>
            Indicates a regular command should be invoked if the list view 
            item corresponding to this StartPageListItem is clicked. The 
            meaning of ContextData will be interpreted in StartPageViewModel
            and corresponding action taken as a result.
            </summary>
        </member>
        <member name="F:Dynamo.UI.Controls.StartPageListItem.Action.FilePath">
            <summary>
            Indicates that the StartPageListItem carries a file path. When 
            clicked, StartPageViewModel issues a file open command to open 
            the file path indicated by ContextData property.
            </summary>
        </member>
        <member name="F:Dynamo.UI.Controls.StartPageListItem.Action.ExternalUrl">
            <summary>
            Indicates that the StartPageListItem points to an external URL.
            When the list view item corresponding to this StartPageListItem
            is clicked, StartPageViewModel brings up the default browser and 
            navigate to the URL indicated by ContextData property.
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.StartPageView">
            <summary>
            StartPageView
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.StartPageView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.StartPageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.DynamoToolTip">
            <summary>
            This is a class designed to be used as a tool-tip for Library View, 
            Input/Output ports, and Node Caption. It replaces the default look 
            of the system tool-tip where it has a triangular side that points 
            to the corresponding "target" element. This tool-tip also aligns itself 
            to the center of its target, both vertically and horizontally depending 
            on its attachment side.
            </summary>
            
        </member>
        <member name="T:Dynamo.UI.Controls.EditorStateMachine">
            <summary>
            Code block node editor state machine.
            </summary>
        </member>
        <member name="E:Dynamo.UI.Controls.EditorStateMachine.OnStateChanged">
            <summary>
            Event handler for editor state changed.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.EditorStateMachine.#ctor(Dynamo.UI.Controls.EditorStateMachine.State)">
            <summary>
            Constructor state machine. 
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.EditorStateMachine.Transit(Dynamo.UI.Controls.EditorStateMachine.State)">
            <summary>
            Transit to the new state.
            </summary>
            <param name="newState"></param>
        </member>
        <member name="T:Dynamo.UI.Controls.CodeBlockEditor">
            <summary>
            Code block editor.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeBlockEditor.#ctor(Dynamo.Controls.NodeView)">
            <summary>
            Create code block editor by the view of code block node.
            </summary>
            <param name="nodeView"></param>
        </member>
        <member name="T:Dynamo.UI.Controls.CodeCompletionEditor">
            <summary>
            Interaction logic for CodeCompletionEditor.xaml
            </summary>
            <summary>
            CodeCompletionEditor
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.CodeCompletionEditor.IsDisposed">
            <summary>
            If the editor has been disposed. 
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.#ctor(Dynamo.Controls.NodeView)">
            <summary>
            Create CodeCOmpletionEditor with NodeViewModel
            </summary>
            <param name="nodeView"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.SetFocus">
            <summary>
            Set focus to the editor.
            </summary>
        </member>
        <member name="F:Dynamo.UI.Controls.CodeCompletionEditor.CodeProperty">
            <summary>
            Dependency property.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.CodeCompletionEditor.Code">
            <summary>
            Set the content of the editor.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.OnEscape">
            <summary>
            Derived class overrides this function to handle escape event.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.OnCommitChange">
            <summary>
            Derived class overrides this function to handle the commit of code.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.OnTextAreaGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Derived class overrides this function to handle the event of getting focus. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.UpdateNodeValue(System.String)">
            <summary>
            Update the value of specified property of node to the input code.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.ReturnFocus">
            <summary>
            Return focus to the Dynamo.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.OnTextAreaLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            To allow users to remove focus by pressing Shift Enter. Uses two bools (shift / enter)
            and sets them when pressed/released
            </summary>        
        </member>
        <member name="M:Dynamo.UI.Controls.CodeCompletionEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.ParameterEditor">
            <summary>
            Auto-completion control for input parameter.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.ParameterEditor.#ctor(Dynamo.Controls.NodeView)">
            <summary>
            Create input editor by the view of symbol node.
            </summary>
            <param name="view"></param>
        </member>
        <member name="T:Dynamo.UI.Controls.OutputEditor">
            <summary>
            Syntax highligh editor for Output node.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.OutputEditor.#ctor(Dynamo.Controls.NodeView)">
            <summary>
            Create syntax highligh editor by the view of output node.
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:Dynamo.UI.Controls.OutputEditor.OnEscape">
            <summary>
            Handler for escape key.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.OutputEditor.OnCommitChange">
            <summary>
            Handler for commit. The commit event is triggered by
            clicking mouse outside the editor.
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.PreviewCompactView">
            <summary>
            Interaction logic for PreviewCompactView.xaml
            </summary>
            <summary>
            PreviewCompactView
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewCompactView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.StateChangedEventHandler">
            <summary>
            Event to be sent when state of PreviewControl is changed
            </summary>
            <param name="sender"><cref name="PreviewControl"/> instance whose state has changed</param>
            <param name="e">The event data</param>
        </member>
        <member name="T:Dynamo.UI.Controls.PreviewControl">
            <summary>
            PreviewControl
            </summary>
        </member>
        <member name="P:Dynamo.UI.Controls.PreviewControl.StaysOpen">
            <summary>
                Indicates whether preview should stay open, when mouse leaves control.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.TransitionToState(Dynamo.UI.Controls.PreviewControl.State)">
            <summary>
            Call this method to request the preview control for a transition 
            into a new state. The requested state must be a logical state after
            the current state. The following sequence illustrates the logical 
            state progression of a preview control:
            
                Hidden -> Condensed -> Expanded -> Condensed -> Hidden
            
            For example, an exception will be thrown if State.Expanded is
            requested when the preview control is currently in State.Hidden,
            skipping State.Condensed state.
            
            Because this method deals with UI resources like Storyboard, this 
            call must be made on the main UI thread.
            </summary>
            <param name="nextState">The state for the preview control to 
            transition into.</param>
            
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.BindToDataSource">
            <summary>
            Bind a mirror data to the preview control for display, this call 
            unbinds the internal data structure from the view that it was 
            originally bound to and resets the data structure. If this call is 
            made while the preview control is in condensed or expanded state,
            the display will immediately be refreshed. Since this method deals 
            with UI elements internally, it must be called from the UI thread.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.HidePreviewBubble">
            <summary>
            Hides preview bubble if it is not pinned
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.RequestForRefresh">
            <summary>
            It is possible for a run to complete while the preview display is
            in transition.  In these situations, we can store the MirrorData and
            set a flag to refresh the display.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.RunOnSchedulerSync(System.Action,Dynamo.Scheduler.AsyncTaskCompletedHandler)">
            <summary>
            Add a new task to the scheduler to be executed and after that run a
            follow-up task.
            </summary>
            <param name="a">The task to be run in the scheduler</param>
            <param name="h">The follow up handler to be executed</param>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.RefreshCondensedDisplay(System.Action)">
            <summary>
            Obtain the condensed preview values for this control.  Must not be called from 
            Scheduler thread or this could cause a live-lock.
            </summary>
            <param name="refreshDisplay">The action to refresh the UI</param>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.RefreshExpandedDisplay(System.Action)">
            <summary>
                Obtain the expanded preview values for this control.  Must not be called from 
                Scheduler thread or this could cause a live-lock.
            </summary> 
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.WatchContainer_StatusChanged(System.Object,System.EventArgs)">
            <summary>
            It's used to apply Collapsed and Expanded events for TreeViewItems.
            </summary>
            <param name="sender">TreeView</param>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.ComputeWatchContentSize(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When item in WatchTree is collapsed or expanded, we should compute new large content size.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.PreviewControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Controls.ToolTipWindow">
            <summary>
            Interaction logic for ToolTipWindow.xaml
            </summary>
            <summary>
            ToolTipWindow
            </summary>
        </member>
        <member name="M:Dynamo.UI.Controls.ToolTipWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Prompts.DynamoMessageBox">
            <summary>
            A stylised version of the WPF MessageBox class, integrated with the MessageBoxService.
            Sets a CustomDialogResult property instead of DialogResult during ShowDialog().
            </summary>
            <summary>
            DynamoMessageBox
            </summary>
        </member>
        <member name="P:Dynamo.UI.Prompts.DynamoMessageBox.TitleText">
            <summary>
            The title/caption of the message
            </summary>
        </member>
        <member name="P:Dynamo.UI.Prompts.DynamoMessageBox.BodyText">
            <summary>
            The body text, i.e. the longform message being conveyed to the user.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Prompts.DynamoMessageBox.MessageBoxButton">
            <summary>
            A Windows Enum, determines which standard buttons are displayed to the user.
            </summary>
        </member>
        <member name="P:Dynamo.UI.Prompts.DynamoMessageBox.MessageBoxImage">
            <summary>
            A Windows Enum, determines the styling of the message, e.g. Info, Warning, Error, etc.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
            <summary>
            Displays a dialog to the user and returns their choice as a MessageBoxResult.
            </summary>
            <param name="messageBoxText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.Show(System.String,System.String,System.Boolean,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
            <summary>
            Displays a dialog to the user and returns their choice as a MessageBoxResult.
            </summary>
            <param name="messageBoxText">Content of the message</param>
            <param name="caption">MessageBox title</param>
            <param name="showRichTextBox">True if we will be using the RichTextBox instead of the usual one</param>
            <param name="button">OK button shown in the MessageBox</param>
            <param name="icon">Type of message: Warning, Error</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
            <summary>
            Displays a dialog to the user and returns their choice as a MessageBoxResult.
            </summary>
            <param name="owner">owner window</param>
            <param name="messageBoxText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            Displays a dialog to the user and returns their choice as a MessageBoxResult.
            </summary>
            <param name="messageBoxText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.Show(System.String,System.String)">
            <summary>
            Displays a dialog to the user and returns their choice as a MessageBoxResult.
            </summary>
            <param name="messageBoxText"></param>
            <param name="caption"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.Show(System.String)">
            <summary>
            Displays a dialog to the user and returns their choice as a MessageBoxResult.
            </summary>
            <param name="messageBoxText"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.ConfigureButtons(System.Windows.MessageBoxButton,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Shows or hides buttons on the view as necessary.
            </summary>
            <param name="messageBoxButton"></param>
            <param name="buttonNames">names that will be used to override the standard button names.
            Number of names must match the number of visible buttons set by messageBoxButton parameter.</param>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.UIElement_OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Lets the user drag this window around with their left mouse button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Prompts.DynamoMessageBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Prompts.EditWindow">
            <summary>
            Interaction logic for dynEditWindow.xaml
            </summary>
            <summary>
            EditWindow
            </summary>
        </member>
        <member name="E:Dynamo.UI.Prompts.EditWindow.EditTextBoxPreviewKeyDown">
            <summary>
            Event analyses when a key has been typed on the edit window, 
            used to alter the behaviour of certain keys, 
            for example for adding bullet point support.         
            </summary>
        </member>
        <member name="M:Dynamo.UI.Prompts.EditWindow.ToggleButtons(System.Boolean)">
            <summary>
            Toggles between the Maximize and Normalize buttons on the window
            </summary>
            <param name="toggle"></param>
        </member>
        <member name="M:Dynamo.UI.Prompts.EditWindow.UIElement_OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Lets the user drag this window around with their left mouse button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Prompts.EditWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Prompts.GenericTaskDialog">
            <summary>
            GenericTaskDialog
            </summary>
        </member>
        <member name="M:Dynamo.UI.Prompts.GenericTaskDialog.UIElement_OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Lets the user drag this window around with their left mouse button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dynamo.UI.Prompts.GenericTaskDialog.DetailedContent">
            <summary>
            DetailedContent Name Field
            </summary>
        </member>
        <member name="M:Dynamo.UI.Prompts.GenericTaskDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Prompts.UsageReportingAgreementPrompt">
            <summary>
            Interaction logic for UsageReportingAgreementPrompt.xaml
            </summary>
            <summary>
            UsageReportingAgreementPrompt
            </summary>
        </member>
        <member name="M:Dynamo.UI.Prompts.UsageReportingAgreementPrompt.#ctor(Dynamo.Wpf.Interfaces.IBrandingResourceProvider,Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            Constructor
            </summary>
            <param name="resourceProvider"></param>
            <param name="dynamoViewModel"></param>
        </member>
        <member name="M:Dynamo.UI.Prompts.UsageReportingAgreementPrompt.ToggleButtons(System.Boolean)">
            <summary>
            Toggles between the Maximize and Normalize buttons on the window
            </summary>
            <param name="toggle"></param>
        </member>
        <member name="M:Dynamo.UI.Prompts.UsageReportingAgreementPrompt.UIElement_OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Lets the user drag this window around with their left mouse button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Prompts.UsageReportingAgreementPrompt.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.FrozenResources">
            <summary>
            This class is put in place to store Freezable objects that are made 
            globally available as constant values. These resources are created the 
            first time any of the static members of FrozenResources is accessed.
            The static constructor is responsible of initializing its data members
            and freeze them at the same time.
            
            This is done to avoid memory leaks. Consider the following use case:
            
                var myRectangle = new Rectangle();
                myRectangle.Fill = FrozenResources.PreviewIconPinnedBrush;
            
            Innocent as it is, the above code does lead to memory leaks. The second
            assignment made "myRectangle" subscribe to "PreviewIconPinnedBrush.Changed"
            event, causing "PreviewIconPinnedBrush" to reference "myRectangle" 
            internally (since it needs to notify "myRectangle" when its color updates).
            One would expect "myRectangle" gets garbage collected when it goes out of 
            scope, but this reference keeps "myRectangle" alive for as long as the 
            "PreviewIconPinnedBrush" is alive. Since it is a static, "myRectangle" 
            does not get released during collection and gets promoted to Gen 1. The 
            following will not cause a reference from "PreviewIconPinnedBrush" to 
            "myRectangle", avoiding any memory leaks:
            
                var myRectangle = new Rectangle();
                FrozenResources.PreviewIconPinnedBrush.Freeze();
                myRectangle.Fill = FrozenResources.PreviewIconPinnedBrush;
            
            </summary>
            
        </member>
        <member name="T:Dynamo.UI.Commands.DelegateCommand">
            <summary>
            Custom implementation of DelegateCommand which prints to the log.
            </summary>
        </member>
        <member name="T:Dynamo.UI.Views.AboutWindow">
            <summary>
            Interaction logic for AboutWindow.xaml
            </summary>
            <summary>
            AboutWindow
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.AboutWindow.ToggleButtons(System.Boolean)">
            <summary>
            Toggles between the Maximize and Normalize buttons on the window
            </summary>
            <param name="toggle"></param>
        </member>
        <member name="M:Dynamo.UI.Views.AboutWindow.UIElement_OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Lets the user drag this window around with their left mouse button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.UI.Views.AboutWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Views.LibraryView">
            <summary>
            Interaction logic for LibraryView.xaml
            </summary>
            <summary>
            LibraryView
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.LibraryView.OnPreviewMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            When user tries to use mouse wheel there can be several cases.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.LibraryView.OnExpanderCollapsed(System.Object,System.Windows.RoutedEventArgs)">
            When a category is collapsed, the selection of underlying sub-category 
            list is cleared. As a result any visible ClassInformationView will be hidden.
        </member>
        <member name="M:Dynamo.UI.Views.LibraryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.Views.SplashScreen">
            <summary>
            SplashScreen
            </summary>
        </member>
        <member name="P:Dynamo.UI.Views.SplashScreen.CloseWasExplicit">
            <summary>
            True if the reason the splash screen was closed was because the user explicitly closed it,
            as opposed to the splash screen closing because dynamo was launched.
            This is useful for knowing if Dynamo is already started or not.
            </summary>
        </member>
        <member name="F:Dynamo.UI.Views.SplashScreen.totalLoadingTime">
            <summary>
            Total loading time for the Dynamo loading tasks in milliseconds
            </summary>
        </member>
        <member name="F:Dynamo.UI.Views.SplashScreen.RequestLaunchDynamo">
            <summary>
            Request to launch Dynamo main window.
            </summary>
        </member>
        <member name="F:Dynamo.UI.Views.SplashScreen.authManager">
            <summary>
            Dynamo auth manager reference
            </summary>
        </member>
        <member name="F:Dynamo.UI.Views.SplashScreen.viewModel">
            <summary>
            Dynamo View Model reference
            </summary>
        </member>
        <member name="P:Dynamo.UI.Views.SplashScreen.DynamoView">
            <summary>
            Dynamo View reference
            </summary>
        </member>
        <member name="F:Dynamo.UI.Views.SplashScreen.webView">
            <summary>
            The WebView2 Browser instance used to display splash screen
            </summary>
        </member>
        <member name="T:Dynamo.UI.Views.SplashScreen.StaticSplashScreenReadyHandler">
            <summary>
            This delegate is used in StaticSplashScreenReady events
            </summary>
        </member>
        <member name="T:Dynamo.UI.Views.SplashScreen.DynamicSplashScreenReadyHandler">
            <summary>
            This delegate is used in DynamicSplashScreenReady events
            </summary>
        </member>
        <member name="E:Dynamo.UI.Views.SplashScreen.StaticSplashScreenReady">
            <summary>
            Event to throw for Splash Screen to show Dynamo static screen
            </summary>
        </member>
        <member name="E:Dynamo.UI.Views.SplashScreen.DynamicSplashScreenReady">
            <summary>
            Event to throw for Splash Screen to update Dynamo launching tasks
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.OnRequestDynamicSplashScreen">
            <summary>
            Request to trigger DynamicSplashScreenReady event
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.OnRequestStaticSplashScreen">
            <summary>
            Request to trigger StaticSplashScreenReady event
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.SplashScreenRequestClose(System.Object,System.EventArgs)">
            <summary>
            Request to close SplashScreen.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.ImportSettings(System.String)">
            <summary>
            Import setting file from chosen path
            </summary>
            <param name="fileContent"></param>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.SignIn">
            <summary>
            Returns true if the user was successfully logged in, else false.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.SignOut">
            <summary>
            Returns true if the user was successfully logged out, else false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.LaunchDynamo(System.Boolean)">
            <summary>
            Handler to launch Dynamo View
            </summary>
            <param name="isCheckboxChecked"></param>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.OnStaticScreenReady">
            <summary>
            Once main window is initialized, Dynamic Splash screen should finish loading
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.GetUserDirectory">
            <summary>
            This is used before DynamoModel initialization specifically to get user data dir
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.SetImportStatus(Dynamo.UI.Views.ImportStatus)">
            <summary>
            Set the import status on splash screen.
            </summary>
            <param name="importStatus"></param>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.SetSignInStatus(System.Boolean)">
            <summary>
            Set the login status on splash screen.
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.SetLabels">
            <summary>
            Setup the values for all labels on splash screen using resources
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.LoadPreferencesFileAtStartup">
            <summary>
            At Dynamo startup process load the preferences settings file located in C:\ProgramData\Dynamo
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.IsValidPreferencesFile(System.String)">
            <summary>
            Try to Deserialize to PreferenceSettings the file content passed as parameter
            </summary>
            <param name="filePath">Full path to the xml file to be deserialized</param>
            <returns>true if the file content was deserialized successfully otherwise returns false</returns>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.CloseWindow">
            <summary>
            If the user wants to close the window, we shutdown the application and don't launch Dynamo
            </summary>
        </member>
        <member name="M:Dynamo.UI.Views.SplashScreen.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.UI.SharedResourceDictionary">
            <summary>
            The shared resource dictionary is a specialized resource dictionary
            that loads it content only once. If a second instance with the same source
            is created, it only merges the resources from the cache.
            </summary>
        </member>
        <member name="F:Dynamo.UI.SharedResourceDictionary._sharedDictionaries">
            <summary>
            Internal cache of loaded dictionaries 
            </summary>
        </member>
        <member name="F:Dynamo.UI.SharedResourceDictionary._sourceUri">
            <summary>
            Local member of the source uri
            </summary>
        </member>
        <member name="P:Dynamo.UI.SharedResourceDictionary.Source">
            <summary>
            Returns or sets the uniform resource identifier (URI) to load resources from.
            </summary>
        </member>
        <member name="P:Dynamo.UI.CodeCompletionData.Priority">
            <summary>
            This property can be used in the selection logic. You can use it to
            prefer selecting those items which the user is accessing most frequently
            </summary>
        </member>
        <member name="T:Dynamo.UI.CodeCompletionMethodInsightWindow">
            <summary>
            This class represents the tooltip for completion of function signatures
            </summary>
        </member>
        <member name="P:Dynamo.UI.CodeCompletionMethodInsightWindow.CodeBlockMethodOverloadProvider.SelectedIndex">
            <summary>
            Index of selected overload using the "down arrow" key
            </summary>
        </member>
        <member name="P:Dynamo.UI.CodeCompletionMethodInsightWindow.CodeBlockMethodOverloadProvider.Count">
            <summary>
            Count of the number of overloads for a function
            </summary>
        </member>
        <member name="P:Dynamo.UI.CodeCompletionMethodInsightWindow.CodeBlockMethodOverloadProvider.CurrentIndexText">
            <summary>
            Text display in tooltip indicating which index of overload is selected
            out of the total number of overloads
            </summary>
        </member>
        <member name="P:Dynamo.UI.CodeCompletionMethodInsightWindow.CodeBlockMethodOverloadProvider.CurrentHeader">
            <summary>
            Header information comprising signature of overload selected
            </summary>
        </member>
        <member name="P:Dynamo.UI.CodeCompletionMethodInsightWindow.Items">
            <summary>
            List of overload items for a given method
            </summary>
        </member>
        <member name="P:Dynamo.UI.CodeCompletionMethodInsightWindow.SelectedItem">
            <summary>
            Selected overload item
            </summary>
        </member>
        <member name="E:Dynamo.UI.CodeCompletionMethodInsightWindow.CaretPositionChanged">
            <summary>
            TODO: Implement this for highlighting of parameters in 
            function signature tooltip as you type
            </summary>
        </member>
        <member name="T:Dynamo.UI.CodeCompletionInsightItem">
            <summary>
            This class represents the individual item in the list of 
            function overload items in the function signature insight window
            </summary>
        </member>
        <member name="F:Dynamo.UI.CodeCompletionInsightItem.content">
            <summary>
            TODO: Implement this
            </summary>
        </member>
        <member name="T:Dynamo.Controls.InfiniteGridView">
            <summary>
            InfiniteGridView
            </summary>
        </member>
        <member name="M:Dynamo.Controls.InfiniteGridView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ParentMenuItem">
            <summary>
            Overriden MenuItem which can be put outside Menu container. 
            Base MenuItem is not able to open its submenu on mouse hover
            </summary>
        </member>
        <member name="F:Dynamo.Controls.LibraryWrapPanel.selectedClassProspectiveIndex">
            <summary>
            Field specifies the prospective index of selected class in collection.
            It is also used to guard against unnecessary "OrderListItems" 
            calls which repaints the UI. Here its value is set to "-2" to ensure that 
            "OrderListItems" method gets called at least once at the beginning (i.e. 
            when "ListView.SelectedIndex" is "-1", which would have avoided the first
            "OrderListItems" if "currentSelectedIndex" is set to "-1").
            </summary>
        </member>
        <member name="M:Dynamo.Controls.LibraryWrapPanel.TranslateSelectionIndex(System.Int32)">
            <summary>
            Function counts prospective index of selected class in collection.
            In case if index of selected class bigger then index of ClassInformation
            object it should be decreased by 1 because at next stages ClassInformation
            will free occupied index.
            </summary>
            <param name="selection"></param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.Controls.DependencyListToStringConverter">
            <summary>
            Converts the list of package dependencies to a comma-separated string.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ListHasMoreThanNItemsToVisibilityConverter">
            <summary>
            Returns Visibility.Visible if the collection has more than n items, otherwise returns Visibility.Collapsed.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.EmptyDepStringToCollapsedConverter">
            <summary>
            Controls the visibility of tooltip that displays python dependency in Package manager for each package version
            </summary>
        </member>
        <member name="T:Dynamo.Controls.InstalledButtonTextConverter">
            <summary>
            Determines what the Install button says on the Package Manager Search.
            If the package is installed it says 'Installed', otherwise 'Install'.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.EmptyStringToFalseConverter">
            <summary>
            If the given string is empty, false is returned, otherwise true is returned.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.EmptyStringToCollapsedConverter">
            <summary>
            If the given string is empty, collapsed visibility enum is returned, otherwise visible enum is returned.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.EmptyStringToHiddenConverter">
            <summary>
            If the given string is empty, hidden visibility enum is returned, otherwise visible enum is returned.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.NegativeIntToZeroConverter">
            <summary>
            Converts any numbers below 0 to 0, otherwise returns the original number.
            For example, used to display the number of votes each package has received in the package manager.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.CollectionHasMoreThanNItemsToBoolConverter">
            <summary>
            Check if the collection has more items than the provided
            parameter. If no parameter is provided the converter will
            check if the collection has more than 1 item.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.BoolToFAIconNameConverter">
            <summary>
            Converter for Notification Bell updates based on feature enabled or not
            </summary>
        </member>
        <member name="T:Dynamo.Controls.EmptyToVisibilityCollapsedConverter">
            <summary>
            Evaluates if the value is null and converts it to Visible or Collapsed state
            </summary>
        </member>
        <member name="T:Dynamo.Controls.EmptyToZeroLengthConverter">
            <summary>
            Takes a value and if the value is not null returns Unity Type Auto (*) as a length value
            Returns 0 length if the value is null
            To be used in Grid Column/Row width 
            </summary>
        </member>
        <member name="T:Dynamo.Controls.DateToVisibilityCollapsedConverter">
            <summary>
            Used in the Dynamo package manager search window to hide or show a label next to each package's name.
            The label only appears if the package has been recently created/updated (in the last 30 days).
            Label text is set via the DateToPackageLabelConverter.
            </summary>  
        </member>
        <member name="T:Dynamo.Controls.DateToPackageLabelConverter">
            <summary>
            Used to determine the text which appears next to a package when it's either
            brand new or has been recently updated.
            If the package was updated in the last 30 days it says 'Updated'.
            If the package is brand new (only has 1 version) and is less than 30 days it says 'New'.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.NodeOriginalNameToMarginConverter">
            <summary>
            Used to ensure input and output ports are set to the right height.
            There is a special case for code block output ports: the first code block output port should
            align with the first port on any other node, despite being different sizes. The offset is achieved using the margin.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.ZoomToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns hidden for small zoom sizes - appears unused.
            </summary>
            <param name="value">zoom size</param>
            <param name="targetType">unused</param>
            <param name="parameter">unused</param>
            <param name="culture">unused</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.Controls.ZoomToVisibilityCollapsedConverter">
            <summary>
            Hides (collapses) if the zoom level is larger than the designated value
            </summary>
        </member>
        <member name="T:Dynamo.Controls.NodeWarningConverter">
            <summary>
            Truncates a node's warning messages to 30 characters. Used on the node's context menu
            when un-dismissing a node's warnings.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.InOutParamTypeConverter">
            This converter is used to format the display string for both input and output 
            parameters on the "TooltipWindow.xaml". If "parameter" here is "inputParam", 
            then this converter is invoked by input parameter related binding. A colon 
            character will be prefixed to the parameter type (e.g. "value : double") only 
            for input parameter (since an output of a function does not have a name). Also,
            the colon will only appended when there is actually an input parameter (for 
            cases without input parameter, only "none" string will be displayed so there is 
            no point in prefixing a colon character (e.g. we don't want ": none").
        </member>
        <member name="T:Dynamo.Controls.ViewModeToVisibilityConverter">
            The converter switches between LibraryView and LibrarySearchView
            using SearchViewModel.ViewMode as value, the View as parameter.
            Converter is used on LibraryConatiner.
        </member>
        <member name="T:Dynamo.Controls.NullValueToGridRow1Converter">
            <summary>
            This converter was created for AboutWindow.xaml in order to accomodate the changes required
            for the display for both Core/Host versions. 
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ConfidenceScoreFormattingConverter">
            <summary>
            This converts the ML node autocomplete confidence score to a formatted string for display.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.MenuItemCheckConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts from a fontsize and param to determine if the two numbers are equal.(ie what is the font set to)
            </summary>
            <param name="value">fontSize</param>
            <param name="targetType">unusued</param>
            <param name="parameter">target font size</param>
            <param name="culture">unusued</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Controls.GroupFontSizeToEditorEnabledConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            converts a zoom and fontsize to a bool used to determine if group title editor should be enabled.
            </summary>
            <param name="values">[0] zoom [1] fontSize - could be strings or doubles</param>
            <param name="targetType">unused</param>
            <param name="parameter">unused</param>
            <param name="culture">unused</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.Controls.ElementTypeToShortConverter">
            <summary>
            Converts element type of node search element in short string.
            E.g. ElementTypes.Packaged => PKG.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.LibraryViewModeToBoolConverter">
            <summary>
            Converter is used in search library view. If current mode is LibraryView, then hide found members.
            Otherwise show found members.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.WorkspaceContextMenuHeightConverter">
            <summary>
            Converter is used in WorkspaceView. It makes context menu longer.
            Since context menu includes now inCanvasSearch, it should be align according its' new height.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.TreeViewLineConverter">
            <summary>
            Checks if the item is last. In that case, this converter controls 
            the last tree view item's  horizontal and vertical line height
            </summary>
        </member>
        <member name="T:Dynamo.Controls.TreeViewLineMarginConverter">
            <summary>
            This controls the TreeView Margin
            </summary>
        </member>
        <member name="T:Dynamo.Controls.TreeViewHLineMarginConverter">
            <summary>
            This controls the horizontal line margin
            </summary>
        </member>
        <member name="T:Dynamo.Controls.TreeViewVLineMarginConverter">
            <summary>
            This controls the Vertical line, when expanded / collapsed
            </summary>
        </member>
        <member name="T:Dynamo.Controls.TreeViewMarginCheck">
            <summary>
            This controls the extra margin that is drawn even if the margin is not set
            </summary>
        </member>
        <member name="T:Dynamo.Controls.NestedContentMarginConverter">
            <summary>
            This converter sets the margin for inner elements. Inner elements (e.g Core - File)
            should have the margin close to the expander. 
            For expander margin  <seealso cref="T:Dynamo.Controls.FullCategoryNameToMarginConverter"/>
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ElementGroupToColorConverter">
            <summary>
            Converter is used in Library Views.
            Create - green.
            Action - pink.
            Returns - blue.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Dynamo.Controls.LeftThicknessConverter" -->
        <member name="T:Dynamo.Controls.ListIndexBackgroundConverter">
            <summary>
            Converter is used in WatchTree.xaml
            It converts the boolean value of WatchViewModel.IsCollection to the background color of the each listnode label
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ListIndexMarginConverter">
            <summary>
            Converter is used in WatchTree.xaml 
            It converts the boolean value of WatchViewModel.IsCollection to determine the margin of the listnode textblock
            </summary>
        </member>
        <member name="T:Dynamo.Controls.TopLevelLabelMarginConverter">
            <summary>
            Converter is used in WatchTree.xaml 
            It converts the boolean value of WatchViewModel.IsTopLevel to determine the margin of the list node label
            </summary>
        </member>
        <member name="T:Dynamo.Controls.BrushColorToStringConverter">
            <summary>
            It converts a Brush type to a string representation of the hex color, removing the initial ## and the alpha values (last 2 chars in the string)
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ObjectTypeConverter">
            <summary>
            Converts the object type to forground color for the object.
            </summary>
        </member>
        <member name="T:Dynamo.Controls.StringToBrushColorConverter">
            <summary>
            Receives an string containing a hexadecimal color value and returs a Brush color corresponding to the string value
            </summary>
        </member>
        <member name="T:Dynamo.Controls.RadioButtonCheckedConverter">
            <summary>
            Receive a enum value corresponding to the radio button option and returs true if is the same otherwise does nothing
            This is used when we have multiple radio buttons and we want just one enabled at one time
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ScaleSizeBackgroundConverter">
            <summary>
            Receive a GeometryScaleSize value and if it matches the parameter passed will return a brush with a specific color
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ExpandersBindingConverter">
            <summary>
            This converter was designed for Expanders, so it will store/fetch the current Expander state
            </summary>
        </member>
        <member name="M:Dynamo.Controls.ExpandersBindingConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Fetch the current expansion state for binding it to a Expander.IsExpanded property
            </summary>
            <param name="value">string representing the current Expander expanded name</param>
            <param name="targetType"></param>
            <param name="parameter">seleted expander name</param>
            <param name="culture"></param>
            <returns>bool indicating if the Expander should be expanded or not</returns>
        </member>
        <member name="M:Dynamo.Controls.ExpandersBindingConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Store the current expansion state of the Expander selected
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter">seleted expander name</param>
            <param name="culture"></param>
            <returns>a string that represents the Expander expanded name</returns>
        </member>
        <member name="T:Dynamo.Controls.LinterIssueCountToVisibilityConverter">
            <summary>
            Converts an integer (linter issues count) to a visibility state
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Dynamo.Controls.NestedGroupsLabelConverter" -->
        <member name="T:Dynamo.Controls.PortTypeToStringConverter">
            <summary>
            Converts PortType (Inport or Outport) enum to hard-coded string resources
            </summary>
        </member>
        <member name="T:Dynamo.Controls.PointsToPathConverter">
            <summary>
            Converts a PointColletion to a Geometry so the points can be drawn using a Path
            </summary>
        </member>
        <member name="T:Dynamo.Controls.TextForegroundSaturationColorConverter">
            <summary>
            Returns a dark or light color depending on the contrast ration of the color with the background color
            Contrast ration should be larger than 4.5:1
            Contrast calculation algorithm from https://stackoverflow.com/questions/70187918/adapt-given-color-pairs-to-adhere-to-w3c-accessibility-standard-for-epubs/70192373#70192373
            </summary>
        </member>
        <member name="T:Dynamo.Controls.AdditionConverter">
            <summary>
            This converter is used to add extra space between the ListBox and the CustomColorPicker border
            </summary>
        </member>
        <member name="M:Dynamo.Controls.ColorToSolidColorBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Color to a SolidColorBrush.
            </summary>
            <returns>
            A converted SolidColorBrush. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Dynamo.Controls.ColorToSolidColorBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a SolidColorBrush to a Color.
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Dynamo.Controls.SumConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Calculates and returns the sum of the values provided
            </summary>
        </member>
        <member name="T:Dynamo.Controls.DragCanvas">
            <summary>
            A Canvas which manages dragging of the UIElements it contains.  
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ConnectorAnchorView">
            <summary>
            Interaction logic for ConnectorAnchorView. Basically this class 
            controls some of the interaction logic for the icons that 
            appear above a connector when one hovers over it. Specifically the 
            'watch' and the 'pin' icons. Each of them triggers the action 
            of placing said element.
            </summary>
            <summary>
            ConnectorAnchorView
            </summary>
        </member>
        <member name="P:Dynamo.Controls.ConnectorAnchorView.ViewModel">
            <summary>
            Access to the ConnectorAnchorView model which parents this view
            and which needs to be notified when the mouse leaves this views 
            as it then proceeds to dispose of itself.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.InitializeCommands(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Initializes datacontext and timer after the appearance of the
            'anchor' (plus sign) icon, and the subsequent appearance
            of both the 'watch' and 'pin' icons.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.StartTimer(System.Windows.Threading.DispatcherTimer,System.TimeSpan)">
            <summary>
            Starts timer.
            </summary>
            <param name="timer"></param>
            <param name="timeSpan"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.TimerDoneShow(System.Object,System.EventArgs)">
            <summary>
            Handles the termination of the timer.
            In this case it turns a flag on which
            indicates the xaml that the other icons should appear.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.ForceTimerOff(System.Windows.Threading.DispatcherTimer)">
            <summary>
            Stops timer.
            </summary>
            <param name="timer"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.FlipOn">
            <summary>
            Simple function to turn flag on.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Turns flag indicating that icons should be displayed to 'false'.
            It also raises an event telling the viewmodel which hosts this 
            view to dispose of this view and itself.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.OnWatchIconHover(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Swaps icon for a 'preview' version of the icon on hover.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.OnWatchIconUnhover(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Swaps icon for a rest-state version of the icon on uhover.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.OnPinIconHover(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Swaps icon for a 'preview' version of the icon on hover.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.OnPinIconUnhover(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Swaps icon for a rest-state version of the icon on uhover.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.ConnectorAnchorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Controls.ConnectorContextMenuView">
            <summary>
            Interaction logic for ConnectorContextMenuView.xaml
            </summary>
            <summary>
            ConnectorContextMenuView
            </summary>
        </member>
        <member name="M:Dynamo.Controls.ConnectorContextMenuView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Controls.CustomColorPicker">
            <summary>
            Interaction logic for CustomColorPicker.xaml
            </summary>
            <summary>
            CustomColorPicker
            </summary>
        </member>
        <member name="M:Dynamo.Controls.CustomColorPicker.SetCustomColors(System.Collections.ObjectModel.ObservableCollection{Dynamo.ViewModels.CustomColorItem})">
            <summary>
            Set the list of custom colors (it should be set from the client because otherwise the colors won't persist)
            </summary>
            <param name="customColors"></param>
        </member>
        <member name="M:Dynamo.Controls.CustomColorPicker.InitializeSelectedColor(System.Nullable{System.Windows.Media.Color})">
            <summary>
            This method will automatically select a color from the ColorPicker
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Dynamo.Controls.CustomColorPicker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Controls.DynamoView">
            <summary>
                Interaction logic for DynamoView.xaml
            </summary>
            <summary>
            DynamoView
            </summary>
        </member>
        <member name="P:Dynamo.Controls.DynamoView.ExtensionWindows">
            <summary>
            Extensions currently displayed as windows.
            Made internal for testing purposes only.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.#ctor(Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            Constructor
            </summary>
            <param name="dynamoViewModel">Dynamo view model</param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.AddOrFocusExtensionControl(Dynamo.Wpf.Extensions.IViewExtension,System.Windows.UIElement)">
            <summary>
            Adds an extension control or if it already exists it makes sure it is focused.
            The control may be added as a window or a tab in the extension bar depending on settings.
            </summary>
            <param name="viewExtension">View extension adding the content</param>
            <param name="content">Control being added</param>
            <returns>True if the control was added, false if it already existed</returns>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.DockWindowInSideBar(System.Windows.Window,Dynamo.Graph.Nodes.NodeModel,System.Windows.UIElement)">
            <summary>
            Dock the window to right side bar panel.
            </summary>
            <param name="window">The window that needs to be docked</param>
            <param name="nodeModel">NodeModel, if it is a node window</param>
            <param name="hideUIElement">Any UI element to hide after docking it in the right sidebar(like the toolbar).</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.CloseExtensionControl(Dynamo.Wpf.Extensions.IViewExtension)">
            <summary>
            This method will close an extension control, whether it's on the side bar or undocked as a window.
            </summary>
            <param name="viewExtension">Extension to be closed</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.OnCloseRightSideBarTab(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for the CloseButton.
            This method triggers the close operation on the selected tab.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.CloseRightSideBarTab(System.Windows.Controls.TabItem)">
            <summary>
            Close right side-bar panel tab by extension tab item
            </summary>
            <param name="tabitem">target tab item</param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.UndockExtension(System.String)">
            <summary>
            Undocks the extension with the given name.
            Made internal for testing purposes only.
            </summary>
            <param name="name">Name of the extension</param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.UndockExtension(System.Windows.Controls.TabItem)">
            <summary>
            Undocks the extension from the right side bar.
            </summary>
            <param name="tabItem">Tab item to be undocked</param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.UndockWindow(System.Windows.Controls.TabItem)">
            <summary>
            Undocks to an internal Dynamo window by checking the window type.
            </summary>
            <param name="tabItem">Tab item to be undocked</param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.SetApplicationIcon">
            <summary>
            Sets DynamoView icon to that of the currently running application. This is set for reuse
            in custom child windows rather than for the main window itself, which is not customized.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.PasteNodeAtTheCenter(Dynamo.Views.WorkspaceView)">
            <summary>
            Paste nodes at the center of workspace view.
            </summary>
            <param name="workspace">workspace view</param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.InitializeStartPage(System.Boolean)">
            <summary>
            This method inserts an instance of "StartPageViewModel" into the 
            "startPageItemsControl", results of which displays the Start Page on 
            "DynamoView" through the list item's data template. This method also
            ensures that there is at most one item in the "startPageItemsControl".
            Only when this method is invoked the cost of initializing the start 
            page is incurred, when user opts to not display start page at start 
            up, then this method will not be called (therefore incurring no cost).
            </summary>
            <param name="isFirstRun">
            Indicates if it is the first time new Dynamo version runs.
            </param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.ReOpenSavedExtensionOnDynamoStartup(Dynamo.Wpf.Extensions.IViewExtension)">
            <summary>
            This method will re-open saved extension from last session,
            if the setting to remember last opened extensions was enabled.
            </summary>
            <param name="ext">Extension to be re-opened, if saved from last session.</param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.HidePopupWhenWindowDeactivated(System.Object)">
            <summary>
            Close Popup when the Dynamo window is not in the foreground.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.CheckTestFlags">
            <summary>
            check some test flags from launch darkly.
            code is safe to remove at any time.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.DisplayTermsOfUseForAcceptance">
            <summary>
            Call this method to optionally bring up terms of use dialog. User 
            needs to accept terms of use before any packages can be downloaded 
            from package manager.
            </summary>
            <returns>Returns true if the terms of use for downloading a package 
            is accepted by the user, or false otherwise. If this method returns 
            false, then download of package should be terminated.</returns>
            
        </member>
        <member name="M:Dynamo.Controls.DynamoView.DynamoViewModelRequestsFunctionNamePrompt(System.Object,Dynamo.Models.FunctionNamePromptEventArgs)">
            <summary>
            Handles the request for the presentation of the function name prompt
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.ShowNewFunctionDialog(Dynamo.Models.FunctionNamePromptEventArgs)">
            <summary>
            Presents the function name dialogue. Returns true if the user enters
            a function name and category.
            </summary>
            <param name="name"></param>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.getUniqueAddOnCategories(System.Collections.Generic.IEnumerable{Dynamo.Search.SearchElements.NodeSearchElement})">
            <summary>
            Helper function returns enum containing all unique package and custom node categories including all nested levels
            </summary>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.DynamoViewModelRequestPresetNamePrompt(Dynamo.Models.PresetsNamePromptEventArgs)">
            <summary>
            Handles the request for the presentation of the preset name prompt
            </summary>
            <param name="e">a parameter object contains default Name and Description,
            and Success bool returned from the dialog</param>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.ShowNewPresetDialog(Dynamo.Models.PresetsNamePromptEventArgs)">
            <summary>
            Presents the preset name dialogue. sets eventargs.Success to true if the user enters
            a preset name/timestamp and description.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.SaveExtensionsState">
            <summary>
            Saves the state of currently displayed extension windows and tabs. This is needed because the closing event is
            not called on child windows: https://docs.microsoft.com/en-us/dotnet/api/system.windows.window.closing
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.LoadSamplesMenu">
            <summary>
                Setup the "Samples" sub-menu with contents of samples directory.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.OpenSample_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Setup the "Samples" sub-menu with contents of samples directory.
            </summary>
        </member>
        <member name="P:Dynamo.Controls.DynamoView.LibraryCollapsed">
            <summary>
            Check if library is collapsed or expanded
            </summary>
        </member>
        <member name="P:Dynamo.Controls.DynamoView.ExtensionsCollapsed">
            <summary>
            Check if extensions right side bar is collapsed or expanded
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.ToggleExtensionBarCollapseStatus">
            <summary>
            Made internal for testing purposes only.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.UpdateWorkspaceTabSizes">
            <summary>
            Updates the workspace TabItems to have the correct margins in response to events
            such as the library being stretched or a Custom Node workspace being created.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.ShowGetStartedGuidedTour">
            <summary>
            This method probably will be modified or deleted in the future when the GuideManager and Guide class are created
            For now will be used just for testing/demo purposes since the popups will be created probably in the Guide class.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.DynamoView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Controls.InfoBubbleView">
            <summary>
            Interaction logic for PreviewInfoBubble.xaml
            </summary>
            <summary>
            InfoBubbleView
            </summary>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.#ctor">
            <summary>
            Used to present useful/important information to user when the node is in Error or Warning state.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.UpdatePosition">
            <summary>
            Ensures that the InfoBubbleView moves in tandem with the node it's attached to.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.Dispose">
            <summary>
            Dispose function adding resubscribe logic
            </summary>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.GetDismissedMessagesOfStyle(Dynamo.ViewModels.InfoBubbleViewModel.Style)">
            <summary>
            Retrieves all of a node's dismissed messages of a particular style.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.ClearDismissedMessagesOfStyle(Dynamo.ViewModels.InfoBubbleViewModel.Style)">
            <summary>
            Clears out the node's collection of all dismissed messages of a particular style (e.g. Error).
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.RecreateDismissedMessagesOfStyle(Dynamo.ViewModels.InfoBubbleViewModel.Style)">
            <summary>
            Repopulates the node's collection of dismissed messages.
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.RefreshDismissedMessages(Dynamo.ViewModels.InfoBubbleViewModel.Style)">
            <summary>
            Combines the clearing and repopulation functions of a node's dismissed messages collection.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.DismissAllInfoButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Click event handler for when the user clicks 'Dismiss All' on a node's info messages.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.DismissAllWarningsButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Click event handler for when the user clicks 'Dismiss All' on a node's warnings.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Controls.InfoBubbleView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Controls.NodeView">
            <summary>
            NodeView
            </summary>
        </member>
        <member name="F:Dynamo.Controls.NodeView.previewEnabled">
            <summary>
            If false - hides preview control until it will be explicitly shown.
            If true -preview control is shown and hidden on mouse enter/leave events.
            </summary>
        </member>
        <member name="F:Dynamo.Controls.NodeView.oldZIndex">
            <summary>
            Old ZIndex of node. It's set, when mouse leaves node.
            </summary>
        </member>
        <member name="P:Dynamo.Controls.NodeView.HasPreviewControl">
            <summary>
            Returns a boolean value of whether this node view already has its PreviewControl field
            constructed (not null), in order to avoid calling the PreviewControl constructor
            whenever the accessor property is queried.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.OnSizeChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the size of the node changes. Communicates changes down to the view model 
            then to the model.
            </summary>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Dynamo.Controls.NodeView.OnDataContextChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This event handler is called soon as the NodeViewModel is bound to this 
            NodeView, which happens way before OnNodeViewLoaded event is sent. 
            There is a known bug in WPF 4.0 where DataContext becomes DisconnectedItem 
            when actions such as tab switching happens (that is when the View becomes 
            disconnected from the underlying ViewModel/Model that it was bound to). So 
            it is more reliable for NodeView to cache the NodeViewModel it is bound 
            to when it first becomes available, and refer to the cached value at a later
            time.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.CachedValueChanged">
            <summary>
            Called when the NodeModel's CachedValue property is updated
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.PrepareZIndex">
            <summary>
            If Zindex is more then max value of int, it should be set back to 0 to all elements.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.ChangeNameInline">
            <summary>
            Edit Node Name directly in the Node Header
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.EndInlineRename">
            <summary>
             Finalize Inline Rename by hiding the TextBox and showing the TextBlock
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.OnPreviewControlStateChanged(System.Object,System.EventArgs)">
            <summary>
            This event fires right after preview's state has been changed.
            This event is necessary, it handles some preview's manipulations, 
            that we can't handle in mouse enter/leave events.
            E.g. When mouse leaves preview control, it should be first condesed, after that hidden.
            </summary>
            <param name="sender">PreviewControl</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Dynamo.Controls.NodeView.BringToFront">
            <summary>
            Sets ZIndex of node the maximum value.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.IsMouseInsideNodeOrPreview(System.Windows.Point)">
            <summary>
            When Mouse is captured, all mouse events are handled by element, that captured it.
            So we can't use MouseLeave/MouseEnter events.
            In this case, when we want to ensure, that mouse really left node, we use HitTest.
            </summary>
            <param name="mousePosition">Currect position of mouse</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dynamo.Controls.NodeView.IsMouseInsidePreview(System.Windows.Input.MouseEventArgs)">
            <summary>
            Checks whether a mouse event occurred at a position matching the preview.
            Alternatives attempted:
            - PreviewControl.IsMouseOver => This is always false
            - HitTest on NodeView => Anomalous region that skips right part of preview if larger than node
            - HitTest on Preview => Bounds become irreversible larger than "mouse over area" after preview is expanded
            </summary>
            <param name="e">A mouse event</param>
            <returns>Whether the mouse is over the preview or not</returns>
        </member>
        <member name="M:Dynamo.Controls.NodeView.TogglePreviewControlAllowance">
            <summary>
            Enables/disables preview control. 
            </summary>
        </member>
        <member name="P:Dynamo.Controls.NodeView.NodeViewCustomizationMenuItems">
            <summary>
            A dictionary of MenuItems which are added during certain nodes' NodeViewCustomization process.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.StashNodeViewCustomizationMenuItems">
            <summary>
            Saves a persistent list of unique MenuItems that are added by certain nodes during their NodeViewCustomization process.
            Because nodes' ContextMenus are loaded lazily, and their MenuItems are disposed on closing,
            these custom MenuItems need to be manually re-injected into the context menu whenever it is opened.
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.DisplayNodeContextMenu(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            A common method to handle the node Options Button being clicked and
            the user right-clicking on the node body to open its ContextMenu.
            </summary>
        </member>
        <member name="F:Dynamo.Controls.NodeView.topControl">
            <summary>
            topControl Name Field
            </summary>
        </member>
        <member name="F:Dynamo.Controls.NodeView.grid">
            <summary>
            grid Name Field
            </summary>
        </member>
        <member name="F:Dynamo.Controls.NodeView.MainContextMenu">
            <summary>
            MainContextMenu Name Field
            </summary>
        </member>
        <member name="F:Dynamo.Controls.NodeView.inputGrid">
            <summary>
            inputGrid Name Field
            </summary>
        </member>
        <member name="F:Dynamo.Controls.NodeView.PresentationGrid">
            <summary>
            PresentationGrid Name Field
            </summary>
        </member>
        <member name="M:Dynamo.Controls.NodeView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Controls.Watch3DView">
            <summary>
            Interaction logic for WatchControl.xaml
            </summary>
            <summary>
            Watch3DView
            </summary>
        </member>
        <member name="F:Dynamo.Controls.Watch3DView.inputGrid">
            <summary>
            inputGrid Name Field
            </summary>
        </member>
        <member name="F:Dynamo.Controls.Watch3DView.MainContextMenu">
            <summary>
            MainContextMenu Name Field
            </summary>
        </member>
        <member name="M:Dynamo.Controls.Watch3DView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Controls.WatchTree">
            <summary>
            Interaction logic for WatchTree.xaml
            </summary>
            <summary>
            WatchTree
            </summary>
        </member>
        <member name="M:Dynamo.Controls.WatchTree.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Nodes.PresetOverwritePrompt">
            <summary>
            Interaction logic for PresetOverwritePrompt.xaml
            </summary>
            <summary>
            PresetOverwritePrompt
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.PresetOverwritePrompt.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Nodes.PresetPrompt">
            <summary>
            Interaction logic for PresetPrompt.xaml
            </summary>
            <summary>
            PresetPrompt
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.PresetPrompt.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Dynamo.Nodes.DynamoNodeButton.ShowWarningForRemovingInPort">
            <summary>
            If true, display a warning message when a port is about to be removed
            </summary>
        </member>
        <member name="P:Dynamo.Nodes.DynamoTextBox.Text">
            <summary>
            This property hides the base "TextBox.Text" property to remove the 
            ability to directly set its value (by-passing the undo recording 
            completely). For this reason, there is no setter for this property.
            </summary>
        </member>
        <member name="T:Dynamo.Nodes.Prompts.CrashPrompt">
            <summary>
            Interaction logic for CrashPrompt.xaml
            </summary>
            <summary>
            CrashPrompt
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.Prompts.CrashPrompt.UIElement_OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Lets the user drag this window around with their left mouse button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dynamo.Nodes.Prompts.CrashPrompt.CrashDetailsContent">
            <summary>
            CrashDetailsContent Name Field
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.Prompts.CrashPrompt.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Nodes.FunctionNamePrompt">
            <summary>
            Interaction logic for FunctionNamePrompt.xaml
            </summary>
            <summary>
            FunctionNamePrompt
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.FunctionNamePrompt.FunctionNamePrompt_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Allows for the dragging of this custom-styled window. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Nodes.FunctionNamePrompt.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Nodes.ConnectorPinView">
            <summary>
            Interaction logic for ConnectorPinView.xaml
            </summary>
            <summary>
            ConnectorPinView
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.ConnectorPinView.BringToFront">
            <summary>
            Sets ZIndex of the particular pin to be the highest in the workspace
            This brings the pin to the forefront of the workspace when clicked
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.ConnectorPinView.PrepareZIndex">
            <summary>
            If ZIndex is more then max value of int, it should be set back to the initial ZIndex to all elements.
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.ConnectorPinView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Nodes.AnnotationView">
            <summary>
            Interaction logic for AnnotationView.xaml
            </summary>
            <summary>
            AnnotationView
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.OnUngroupAnnotation(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This function will clear the selection and then select only the annotation node to delete it for ungrouping.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.AnnotationView_OnMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the OnMouseLeftButtonDown event of the AnnotationView control.
            Selects the models inside the group
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.GroupTextBox_OnTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles the OnTextChanged event of the GroupTextBox control.
            Calculates the height of a Group based on the height of textblock
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.TextChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.GroupTextBlock_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event of the GroupTextBlock control.
            This function calculates the height of a group based on font size
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.GroupTextBox_OnIsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Select the text in textbox
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.GroupTextBox_OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the Mouse caret at the end
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.OnDeleteAnnotation(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This function will delete the group with modes
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.OnGraphLayoutAnnotation(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This function will run graph layout algorithm to the nodes inside the selected group.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.GroupStyleCheckmark_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            According to the current GroupStyle selected (or not selected) in the ContextMenu several actions can be executed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.GroupStyleAnnotation_SubmenuOpened(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When the GroupStyle Submenu is opened then we need to re-load the GroupStyles in the ContextMenu (in case more Styles were added in Preferences panel).
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Nodes.AnnotationView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Nodes.NoteView">
            <summary>
            NoteView
            </summary>
        </member>
        <member name="F:Dynamo.Nodes.NoteView.specialKeys">
            <summary>
            Special keys definition in note
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.NoteView.BringToFront">
            <summary>
            Sets ZIndex of the particular note to be the highest in the workspace
            This brings the note to the forefront of the workspace when clicked
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.NoteView.PrepareZIndex">
            <summary>
            If ZIndex is more then max value of int, it should be set back to 0 for all elements.
            </summary>
        </member>
        <member name="F:Dynamo.Nodes.NoteView.BULLETS_CHARS">
            <summary>
            List of bullets characters to use in sequence of indentation
            </summary>
        </member>
        <member name="F:Dynamo.Nodes.NoteView.TAB_SPACING_SIZE">
            <summary>
            Amount of spaces that represent a tab
            </summary>
        </member>
        <member name="F:Dynamo.Nodes.NoteView.SPACING_AFTER_BULLET">
            <summary>
            Amount of spaces inserted after bullet
            </summary>
        </member>
        <member name="M:Dynamo.Nodes.NoteView.BulletDashHandler(System.String,System.Int32)">
            <summary>
            Handles text when user types Key.OemMinus (DASH)
            It converts the DASH into its appropriate BULLET Character
            by counting the amount of TAB spaces before the bullet.  
            Conversion only happens when dash is at the beginning of a line.
            </summary>
            <param name="text"> text before typing DASH </param>
            <param name="caretIndex"> caret index where user typed DASH </param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Nodes.NoteView.BulletTabHandler(System.String,System.Int32)">
            <summary>
            Handles text when user types Key.Tab (TAB)
            If TAB is pressed before a bullet or right after the bullet
            it also updates the bullet to its appropriate bullet character
            </summary>
            <param name="text">  text before typing TAB </param>
            <param name="caretIndex"> caret index where user typed TAB </param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Nodes.NoteView.BulletEnterHandler(System.String,System.Int32)">
            <summary>
            Handles text when user types Key.Enter (ENTER)
            When ENTER is pressed, if previous line had a bullet copy it to next line
            </summary>
            <param name="text">  text before typing ENTER </param>
            <param name="caretIndex"> caret index where user typed ENTER </param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Nodes.NoteView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Utilities.MouseClickManager">
            <summary>
            For double clicks
            
            Origin: http://stackoverflow.com/questions/1821076/wpf-stackpanel-with-click-and-doubleclick
            </summary>
        </member>
        <member name="P:Dynamo.Utilities.MouseClickManager.Clicked">
            <summary>
            Returns or sets a value indicating whether this <see cref="T:Dynamo.Utilities.MouseClickManager"/> is clicked.
            </summary>
            <value><c>true</c> if clicked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dynamo.Utilities.MouseClickManager.DoubleClickTimeout">
            <summary>
            Returns or sets the timeout.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="M:Dynamo.Utilities.MouseClickManager.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamo.Utilities.MouseClickManager"/> class.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dynamo.Utilities.MouseClickManager.HandleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the click.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Utilities.MouseClickManager.ResetThread(System.Object)">
            <summary>
            Resets the thread.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Dynamo.Utilities.MouseClickManager.OnClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when [click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dynamo.Utilities.MouseClickManager.OnDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when [double click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Dynamo.Utilities.WebView2Utilities">
            <summary>
            This class will contain several utility functions that will be used for the WebView2 component
            </summary>
        </member>
        <member name="M:Dynamo.Utilities.WebView2Utilities.ValidateWebView2RuntimeInstalled">
            <summary>
            Validate if the WebView2 Evergreen Runtime is installed in the computer, otherwise it will show a MessageBox about installing the Runtime and then exit Dynamo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.GetSatelliteAssembly(System.Reflection.Assembly,System.Globalization.CultureInfo)">
            <summary>
            Gets a satellite assembly for the specified culture of returns null if not found.
            </summary>
            <param name="assembly">The main assembly</param>
            <param name="cultureInfo">The culture to search a satellite for</param>
            <returns>Satellite assembly for requested culture or null</returns>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.GetResourceNameWithCultureName(System.String,System.Globalization.CultureInfo)">
            <summary>
            Given a file resource name and a culture, it returns an alternate resource name that includes
            the culture name before the file extension. Example: NoContent.html => NoContent.de-DE.html
            </summary>
            <param name="name">Resource name</param>
            <returns>Resource name with the culture name appended before the extension</returns>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.ContainsResource(System.Reflection.Assembly,System.String)">
            <summary>
            Checks if the assembly contains a manifest resource that ends with the specified name.
            </summary>
            <param name="assembly">Assembly to search for resources</param>
            <param name="name">Suffix to search</param>
            <returns>If such a resource exists or not</returns>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.GetResourceAssembly(System.Reflection.Assembly,System.String)">
            <summary>
            Resolves the assembly where to look for embedded resources. If no satellite compatible
            with the UI culture is found, it returns the provided main/invariant assembly.
            </summary>
            <param name="assembly">The main assembly</param>
            <returns>The resource assembly</returns>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.SanitizeHtml(System.String@)">
            <summary>
            Clean up possible dangerous HTML content from the content string.
            </summary>
            <param name="content"></param>
            <returns>Returns true if any content was removed from the content string</returns>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.ConvertToBase64(System.IO.Stream)">
            <summary>
            This method converts a stream to base64 string
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.ExecuteJSFunction(System.Windows.UIElement,Dynamo.Wpf.UI.GuidedTour.HostControlInfo,System.Object[])">
            <summary>
            This method will execute a javascript function located in library.hmtl using reflection.
            due that we cannot include a reference to LibraryViewExtensionMSWebBrowser then we need to use reflection to get the types
            </summary>
            <param name="MainWindow">MainWindow in which the LibraryView is located</param>
            <param name="popupInfo">Popup Information about the Step </param>
            <param name="parametersInvokeScript">Parameters for the WebBrowser.InvokeScript() function</param>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.LoadWebBrowser(Dynamo.Wpf.UI.GuidedTour.HtmlPage,Microsoft.Web.WebView2.Wpf.WebView2,System.String,System.String,System.Reflection.Assembly,System.String)">
            <summary>
            Loads HTML file from resource assembly and replace it's key values by base64 files
            </summary>
            <param name="htmlPage">Contains filename and resources to be loaded in page</param>
            <param name="webBrowserComponent">WebView2 instance that will be initialized</param>
            <param name="resourcesPath">Path of the resources that will be loaded into the HTML page</param>
            <param name="fontStylePath">Path to the Font Style that will be used in some part of the HTML page</param>
            <param name="localAssembly">Local Assembly in which the resource will be loaded</param>
            <param name="userDataFolder">the folder that WebView2 will use for storing cache info</param>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.LoadResouces(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Loads resource from a dictionary and replaces its key by an embedded file
            </summary>
            <param name="bodyHtmlPage">Html page string</param>
            <param name="resources">Resources to be loaded</param>
            <param name="resourcesPath">Path to resources</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Utilities.ResourceUtilities.LoadResourceAndReplaceByKey(System.String,System.String,System.String)">
            <summary>
            Finds a key word inside the html page and replace by a resource file
            </summary>
            <param name="bodyHtmlPage">Current html page</param>
            <param name="key">Key that is going to be replaced</param>
            <param name="resourceFile">Resource file to be included in the page</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Utilities.WpfUtilities.ChildOfType``1(System.Windows.DependencyObject,System.String)">
            <summary>
            Finds a Child of a given item in the visual tree. 
            </summary>
            <param name="parent">A direct parent of the queried item.</param>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="childName">x:Name or Name of child. </param>
            <returns>The first parent item that matches the submitted type parameter. 
            If not matching item can be found, 
            a null parent is being returned.</returns>
        </member>
        <member name="M:Dynamo.Utilities.WpfUtilities.BoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.Media.Visual)">
            <summary>
            Computes rectangle taking into account relative element.
            </summary>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Dynamo.Utilities.WpfUtilities.DelayInvoke(System.Windows.Threading.Dispatcher,System.Int32,System.Action)">
            <summary>
            Calls Dispatcher event after some delay.
            </summary>        
            <param name="delay">delay in milliseconds</param>
            <param name="callback">action to be called</param>
        </member>
        <member name="M:Dynamo.TestInfrastructure.AbstractMutator.Mutate(Dynamo.Graph.Nodes.NodeModel)">
            <summary>
            Returns the number of undoable operations that have been performed 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dynamo.TestInfrastructure.AbstractMutator.NumberOfLaunches">
            <summary>
            Number of times to repeat a specific mutation
            </summary>
        </member>
        <member name="T:Dynamo.TestInfrastructure.DeleteNodeMutator">
            <summary>
            Mutator that deletes a random node
            </summary>
        </member>
        <member name="T:Dynamo.TestInfrastructure.MutatorDriver">
            <summary>
            Class to handle driving test mutations into the graph
            </summary>
        </member>
        <member name="F:Dynamo.TestInfrastructure.MutatorDriver.NUMBER_OF_CYCLES">
            <summary>
            Number of mutations to run
            </summary>
        </member>
        <member name="T:Dynamo.Interfaces.IWatchHandler">
            <summary>
            An object implementing the IWatchHandler interface is registered 
            on the ViewModel at startup, and defines the methods for processing
            objects into string representations for visualizing in the Watch.
            To create a custom watch visualization scheme, you can create a simply
            replace this WatchHandler with one of your own creation.
            </summary>
        </member>
        <member name="P:Dynamo.Services.UsageReportingManager.IsUsageReportingApproved">
            <summary>
            UsageReporting is the opt-in component
            </summary>
        </member>
        <member name="M:Dynamo.Services.UsageReportingManager.InitializeCore(Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            Provide access to the instance of DynamoModel to watch. 
            This operation should be called only once at
            the beginning of a Dynamo session.  It will not be mutated 
            in subsequent calls.
            </summary>
        </member>
        <member name="P:Dynamo.Services.UsageReportingManager.IsAnalyticsReportingApproved">
            <summary>
            Analytics is the opt-out tracking system
            PII is prohibited from Analytics.
            </summary>
        </member>
        <member name="M:Dynamo.Services.UsageReportingManager.SetUsageReportingAgreement(System.Boolean)">
            <summary>
            Setting UsageReportingAgreement. Please notice 
            that IsUsageReportingApproved is dominated by 
            IsAnalyticsReportingApproved.
            </summary>
            <param name="approved"></param>
        </member>
        <member name="M:Dynamo.Services.UsageReportingManager.SetAnalyticsReportingAgreement(System.Boolean)">
            <summary>
            Setting AnalyticsReportingAgreement.
            </summary>
            <param name="approved"></param>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerViewModel.PreferencesViewModel">
            <summary>
            PreferenceViewModel containing the PackageManager paths and installed packages
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerViewModel.PackageSearchViewModel">
            <summary>
            PackageManagerSearchViewModel functionality to load Dynamo packages
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerViewModel.PublishPackageViewModel">
            <summary>
            PublishPackageViewModel containing information about all the published packages
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerViewModel.LocalPackages">
            <summary>
            Returns all installed packages
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerViewModel.Filters">
            <summary>
            Returns all available filters
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.PackageManagerPublishControl">
            <summary>
            Interaction logic for PackageManagerPublishControl.xaml
            </summary>
            <summary>
            PackageManagerPublishControl
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerPublishControl.PublishPackageView_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Allows for the dragging of this custom-styled window. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerPublishControl.Hyperlink_RequestNavigate(System.Object,System.Windows.Navigation.RequestNavigateEventArgs)">
            <summary>
            Navigates to a predefined URL in the user's default browser.
            Currently used to make the MIT license text a clickable link.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerPublishControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.PackageManagerSearchControl">
            <summary>
            Interaction logic for PackageManagerSearchControl.xaml
            </summary>
            <summary>
            PackageManagerSearchControl
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerSearchControl.ViewDetailsButton_OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Executes a command that opens the package details view extension.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerSearchControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.SearchBoxControl">
            <summary>
            Interaction logic for SearchBoxControl.xaml
            </summary>
            <summary>
            SearchBoxControl
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.UI.SearchBoxControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.UI.SearchBoxControl.SearchTextBox_OnTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles Search Box Text Changed Event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Dynamo.PackageManager.UI.SearchBoxControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.MultiBooleanToVisibilityConverter">
            <summary>
            A multivalue visibilty converter
            value 0 - boolean
            value 1 - text
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.NonEmptyStringToCollapsedConverter">
            <summary>
            Converts null or empty string to Visibility Collapsed 
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.EmptyStringToCollapsedConverter">
            <summary>
            Converts null or empty string to Visibility Collapsed 
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.PackageManagerView">
            <summary>
            Interaction logic for PackageManagerView.xaml
            </summary>
            <summary>
            PackageManagerView
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.UI.PackageManagerView.PackageManagerViewModel">
            <summary>
            The main View Model containing all other view models for each control
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerView.PackageManagerPanel_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            handler for preferences dialog dragging action. When the TitleBar is clicked this method will be executed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerView.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Dialog close button handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.TermsOfUseView">
            <summary>
            Interaction logic for TermsOfUseView.xaml
            </summary>
            <summary>
            TermsOfUseView
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.UI.TermsOfUseView.ToggleButtons(System.Boolean)">
            <summary>
            Toggles between the Maximize and Normalize buttons on the window
            </summary>
            <param name="toggle"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.TermsOfUseView.UIElement_OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Lets the user drag this window around with their left mouse button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.TermsOfUseView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.UI.PackageManagerSearchView">
            <summary>
            Interaction logic for PackageManagerSearchView.xaml
            </summary>
            <summary>
            PackageManagerSearchView
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerSearchView.#ctor(Dynamo.PackageManager.PackageManagerSearchViewModel)">
            <summary>
            Constructor
            </summary>
            <param name="pm"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerSearchView.ItemStackPanel_MouseDown(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            TODO: mark private in Dynamo 3.0
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerSearchView.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When the use clicks close on this window, closes the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerSearchView.ViewDetailsButton_OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Executes a command that opens the package details view extension.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerSearchView.CloseToastButton_OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires when the user clicks the 'X' button to dismiss a package toast notification.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageManagerSearchView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.UI.PackageItemInternalViewModel._items">
            <summary>
                The items inside the package
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.UI.PackageItemRootViewModel._items">
            <summary>
                The items inside of the browser item
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.UI.PackageItemRootViewModel.DisplayName">
            <summary>
            The name of this item, regardless of which constructor was used.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.UI.PackageItemRootViewModel.FilePath">
            <summary>
            The file path of this item (if any), regardless of which constructor was used.
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.UI.PackageItemViewModel._height">
            <summary>
            The height of the element in search
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageItemViewModel.AddChild(Dynamo.PackageManager.UI.PackageItemInternalViewModel)">
            <summary>
                Adds an element as a child of this one, while updating its parent and oldparent field
            </summary>
            <param name="elem">The element in question</param>
        </member>
        <member name="F:Dynamo.PackageManager.UI.PackageItemViewModel._visibility">
            <summary>
            Whether the item is visible or not
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.UI.PackageItemViewModel._isSelected">
            <summary>
            Whether the item is selected or not
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.UI.PackageItemViewModel._isExpanded">
            <summary>
            Is the element expanded in the browser
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.UI.PackageItemViewModel.Name">
            <summary>
            Name property </summary>
            <value>
            The name of the node </value>
        </member>
        <member name="M:Dynamo.PackageManager.UI.PackageItemViewModel.BuildDependencies(System.Collections.Generic.HashSet{System.Object})">
            <summary>
            Enumerate the dependencies of this item as its children.  Currently does not discover assembly 
            dependencies.
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.PublishPackageView">
            <summary>
            Interaction logic for PublishPackageView.xaml
            </summary>
            <summary>
            PublishPackageView
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageView.PublishPackageViewModel">
            <summary>
            Internal reference of PublishPackageViewModel
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageView.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When the user clicks the close button on this window, closes the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageView.PublishPackageView_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Allows for the dragging of this custom-styled window. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageView.Hyperlink_RequestNavigate(System.Object,System.Windows.Navigation.RequestNavigateEventArgs)">
            <summary>
            Navigates to a predefined URL in the user's default browser.
            Currently used to make the MIT license text a clickable link.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel.#ctor(Dynamo.PackageManager.PackageManagerSearchElement,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Alternative constructor to assist communication between the 
            PackageManagerSearchViewModel and the PackageManagerSearchElementViewModel.
            </summary>
            <param name="element">A PackageManagerSearchElement</param>
            <param name="canLogin">A Boolean used for access control to certain internal packages.</param>
            <param name="install">Whether a package can be installed.</param>
            <param name="isEnabledForInstall">Whether the package is enabled for install in the UI.</param>
        </member>
        <member name="M:Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel.#ctor(Dynamo.PackageManager.PackageManagerSearchElement,System.Boolean)">
            <summary>
            PackageManagerSearchElementViewModel Constructor (only used for testing in Dynamo).
            </summary>
            <param name="element">A PackageManagerSearchElement</param>
            <param name="canLogin">A Boolean used for access control to certain internal packages.</param>
        </member>
        <member name="P:Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel.CanInstall">
            <summary>
            A Boolean flag reporting whether or not the user can install this SearchElement's package.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel.IsEnabledForInstall">
            <summary>
            True if package is enabled for download if custom package paths are not disabled,
            False if custom package paths are disabled.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel.Equals(Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel)">
            <summary>
            Comparator of two PackageManagerSearchElementViewModel based on package Id.
            Override for package results union.
            </summary>
            <param name="other">The PackageManagerSearchElementViewModel to compare</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel.GetHashCode">
            <summary>
            Overridden Getter for HashCode 
            </summary>
            <returns>HashCode of package</returns>
        </member>
        <member name="T:Dynamo.PackageManager.PackageManagerSearchViewModel.PackageSearchState">
            <summary>
            Enum for the Package search state
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.PackageManagerSearchViewModel.PackageSortingKey">
            <summary>
            Enum for the Package sort key, utilized by sorting context menu
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.PackageManagerSearchViewModel.PackageSortingDirection">
            <summary>
            Enum for the Package sort direction, utilized by sorting context menu
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.PackageManagerSearchViewModel.FilterEntry">
            <summary>
            Package Manager filter entry, binded to the host filter context menu
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.FilterEntry.FilterName">
            <summary>
            Name of the host
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.FilterEntry.FilterCommand">
            <summary>
            Filter entry click command, notice this is a dynamic command
            with command param set to FilterName so that the code is robust
            in a way UI could handle as many hosts as possible
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.FilterEntry.OnChecked">
            <summary>
            Boolean indicates if the Filter entry is checked, data binded to
            is checked property of each filter
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PackageManagerSearchViewModel.FilterEntry.pmSearchViewModel">
            <summary>
            Private reference of PackageManagerSearchViewModel,
            used in the FilterCommand to filter search results
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.FilterEntry.#ctor(System.String,Dynamo.PackageManager.PackageManagerSearchViewModel)">
            <summary>
            Constructor
            </summary>
            <param name="filterName">Filter name, same as host name</param>
            <param name="packageManagerSearchViewModel">a reference of the PackageManagerSearchViewModel</param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.FilterEntry.CanSetFilterHosts(System.Object)">
            <summary>
            Each filter is enabled for now, we may enable more smartly in the future
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.FilterEntry.SetFilterHosts(System.Object)">
            <summary>
            This function will adjust the SelectedHosts in the SearchViewModel
            Affecting search results globally
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.InfectedPackages">
            <summary>
            Stores a list of latest infected package versions published by the current user, if any.
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PackageManagerSearchViewModel._sortingKey">
            <summary>
                SortingKey property
            </summary>
            <value>
                Set which kind of sorting should be used for displaying search results
            </value>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.HostFilter">
            <summary>
            Dynamic Filter for package hosts, should include all Dynamo known hosts from PM backend
             e.g. "Advance Steel", "Alias", "Civil 3D", "FormIt", "Revit"
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PackageManagerSearchViewModel._sortingDirection">
            <summary>
                SortingDirection property
            </summary>
            <value>
                Set which kind of sorting should be used for displaying search results
            </value>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.SearchBoxPrompt">
            <summary>
            The string that is displayed in the search box prompt depending on the search state.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.ShowSearchText">
            <summary>
            Determines whether the the search text box should be displayed.
            <para>
            Returns false if the search state is syncing, 
            </para>
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PackageManagerSearchViewModel._SearchText">
            <summary>
                SearchText property
            </summary>
            <value>
                This is the core UI for Dynamo, primarily used for logging.
            </value>
        </member>
        <member name="F:Dynamo.PackageManager.PackageManagerSearchViewModel._selectedIndex">
            <summary>
                SelectedIndex property
            </summary>
            <value>
                This is the currently selected element in the UI.
            </value>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.SearchResults">
            <summary>
                SearchResults property
            </summary>
            <value>
                This property is observed by SearchView to see the search results
            </value>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.MaxNumSearchResults">
            <summary>
                MaxNumSearchResults property
            </summary>
            <value>
                Internal limit on the number of search results returned by SearchDictionary
            </value>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.CanInstallPackage(System.String)">
            <summary>
            Checks if the package can be installed.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.CanInstallPackage(Dynamo.PackageManager.PackageDownloadHandle)">
            <summary>
            Checks if the package corresponding to the PackageDownloadHandle can be installed.
            </summary>
            <param name="dh"></param>
            <returns></returns>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.SearchState">
            <summary>
            Gives the current state of search.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.PackageManagerClientViewModel">
            <summary>
                PackageManagerClient property
            </summary>
            <value>
                A handle on the package manager client object 
            </value>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.SelectedHosts">
            <summary>
            Current selected filter hosts
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.ClearCompletedCommand">
            <summary>
                Command to clear the completed package downloads
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.SortCommand">
            <summary>
                Sort the default results
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.SearchSortCommand">
            <summary>
                Sort the search results
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.SetSortingKeyCommand">
            <summary>
                Set the sorting key for search results and resort
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.SetSortingDirectionCommand">
            <summary>
                Command to set the sorting direction and resort the search results
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.ViewPackageDetailsCommand">
            <summary>
            Opens the Package Details ViewExtension
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.ClearSearchTextBoxCommand">
            <summary>
            Clears the search text box and resets the search
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.ClearToastNotificationCommand">
            <summary>
            When the user downloads new package via the package search manager, a toast notification
            appears at the base of the window. This command fires when the user clicks to dismiss
            one of these toast notifications.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PackageManagerSearchViewModel.Downloads">
            <summary>
                Current downloads
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.AddPackageToSearchIndex(Dynamo.PackageManager.PackageManagerSearchElement,Lucene.Net.Documents.Document)">
            <summary>
            Add package information to Lucene index
            </summary>
            <param name="package">package info that will be indexed</param>
            <param name="doc">Lucene document in which the package info will be indexed</param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.#ctor(Dynamo.ViewModels.PackageManagerClientViewModel)">
            <summary>
                The class constructor.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.Sort">
            <summary>
            Sort the default package results in the view based on the sorting key and sorting direction.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.Sort(System.Object)">
            <summary>
            Sort the package search results in the view based on the closest hit to the search key.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.InitializeHostFilter">
            <summary>
            Based on the known hosts received from Package Manager server,
            initialize the host filter in Dynamo
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.CanSort">
            <summary>
            Can search be performed.  Used by the associated command : SortCommand
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.CanSort(System.Object)">
            <summary>
            Can search be performed.  Used by the associated command : SearchSortCommand
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.SetSortingDirection(System.Object)">
            <summary>
            Set the sorting direction.  Used by the associated command.
            </summary>
            <param name="sortingDir"></param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.ViewPackageDetails(System.Object)">
            <summary>
            Set the sorting direction.  Used by the associated command.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.ClearSearchTextBox(System.Object)">
            <summary>
            Clears the search text box and resets the search.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.ClearToastNotification(System.Object)">
            <summary>
            When the user downloads new package via the package search manager, a toast notification
            appears at the base of the window. This command fires when the user clicks to dismiss
            one of these toast notifications.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.CanSetSortingDirection(System.Object)">
            <summary>
            Set the associated key
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.SetSortingKey(System.Object)">
            <summary>
            Set the key for search.  Used by the associated command.
            </summary>
            <param name="sortingKey"></param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.CanSetSortingKey(System.Object)">
            <summary>
            Set the associated key
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.Refresh">
            <summary>
            Attempts to obtain the list of search results.  If it fails, it does nothing
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.RefreshAndSearch">
            <summary>
            Synchronously perform a refresh and then search
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.FormatPackageVersionList(System.Collections.Generic.IEnumerable{System.Tuple{Greg.Responses.PackageHeader,Greg.Responses.PackageVersion}})">
            <summary>
                Returns a newline delimited string representing the package name and version of the argument
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.SearchAndUpdateResults(System.String)">
            <summary>
                Asynchronously performs a search and updates the observable SearchResults property.
            </summary>
            <param name="query"> The search query </param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.SelectNext">
            <summary>
                Increments the selected element by 1, unless it is the last element already
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.SelectPrevious">
            <summary>
                Decrements the selected element by 1, unless it is the first element already
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.SearchAndUpdateResults">
            <summary>
                Performs a search using the internal SearchText as the query and
                updates the observable SearchResults property.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.Filter(System.Collections.Generic.IEnumerable{Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel})">
            <summary>
            Performs a filter to the assuming pre-searched results
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.GetAllPackages">
            <summary>   
                Get all the package results in the package manager.
            </summary>
            <returns> Returns a list with a maximum MaxNumSearchResults elements.</returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.Search(System.String)">
            <summary>
                Performs a search using the given string as query, but does not update
                the SearchResults object.
            </summary>
            <returns> Returns a list with a maximum MaxNumSearchResults elements.</returns>
            <param name="query"> The search query </param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.Search(System.String,System.Boolean)">
            <summary>
            Performs a search using the given string as query, but does not update
            the SearchResults object.
            </summary>
            <returns> Returns a list with a maximum MaxNumSearchResults elements.</returns>
            <param name="searchText"> The search query </param>
             /// <param name="useLucene"> Temporary flag that will be used for searching using Lucene.NET </param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.GetViewModelForPackageSearchElement(System.String)">
            <summary>
            To get view model for a package based on its name.
            </summary>s
            <param name="packageName">Name of the package</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.Sort(System.Collections.Generic.List{Dynamo.PackageManager.ViewModels.PackageManagerSearchElementViewModel},Dynamo.PackageManager.PackageManagerSearchViewModel.PackageSortingKey,System.String)">
            <summary>
            Sort a list of search results by the given key
            </summary>
            <param name="results"></param>
            <param name="key"></param>
            <param name="query"></param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.KeyHandler(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
                A KeyHandler method used by SearchView, increments decrements and executes based on input.
            </summary>
            <param name="sender">Originating object for the KeyHandler </param>
            <param name="e">Parameters describing the key push</param>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.ExecuteSelected">
            <summary>
                Runs the Execute() method of the current selected SearchElementBase object
                amongst the SearchResults.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PackageManagerSearchViewModel.DisableSearchTextBox">
            <summary>
            Once the sample package is filled in the textbox search we rise the event to the view to disable the actions to change it , filter and sort it.
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.PublishPackageViewModel">
            <summary>
            The ViewModel for Package publishing </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel.defaultLicense">
            <summary>
            Default license type for each package, no need to localize
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.DynamoViewModel">
            <summary>
            reference of DynamoViewModel
            </summary>
        </member>
        <member name="T:Dynamo.PackageManager.PublishPackageViewModel.HostComboboxEntry">
            <summary>
            Package Publish entry, binded to the host multi-selection option
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.HostComboboxEntry.HostName">
            <summary>
            Name of the host
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.HostComboboxEntry.IsSelected">
            <summary>
            Boolean indicates if the host entry is selected
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.HostComboboxEntry.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="hostName">Name of the host</param>
        </member>
        <member name="E:Dynamo.PackageManager.PublishPackageViewModel.PublishSuccess">
            <summary>
            A event called when publishing was a success
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._uploading">
            <summary>
            This dialog is in one of two states.  Uploading or the user is filling out the dialog
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._uploadHandle">
            <summary>
            A handle for the package upload so the user can know the state of the upload.
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._isNewVersion">
            <summary>
            IsNewVersion property </summary>
            <value>
            Specifies whether we're negotiating uploading a new version </value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.CanEditName">
            <summary>
            CanEditName property </summary>
            <value>
            The name of the node to be uploaded </value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._uploadState">
            <summary>
            UploadState property </summary>
            <value>
            The state of the current upload 
            </value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._group">
            <summary>
            Name property </summary>
            <value>
            The name of the node to be uploaded </value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._Description">
            <summary>
            Description property </summary>
            <value>
            The description to be uploaded </value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._Keywords">
            <summary>
            Keywords property </summary>
            <value>
            A string of space-delimited keywords</value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.KeywordList">
            <summary>
            KeywordList property </summary>
            <value>
            A list of keywords, usually produced by parsing Keywords</value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.FullVersion">
            <summary>
            FullVersion property </summary>
            <value>
            The major, minor, and build version joined into one string</value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._MinorVersion">
            <summary>
            MinorVersion property </summary>
            <value>
            The second element of the version</value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._BuildVersion">
            <summary>
            BuildVersion property </summary>
            <value>
            The third element of the version</value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._MajorVersion">
            <summary>
            MajorVersion property </summary>
            <value>
            The first element of the version</value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.License">
            <summary>
            License property
            </summary>
            <value> The license for the package </value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.CopyrightHolder">
            <summary>
            The name of the author who holds this package's copyright.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.CopyrightYear">
            <summary>
            The year of this package's copyright.
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._siteUrl">
            <summary>
            SiteUrl property </summary>
            <value>
            The website for the package</value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._repositoryUrl">
            <summary>
            RepositoryUrl property </summary>
            <value>
            The repository url for the package</value>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._name">
            <summary>
            Name property </summary>
            <value>
            The name of the node to be uploaded </value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.KnownHosts">
            <summary>
            Know hosts received from package manager.
            Data binded to the multi-selection host dependency option.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.SelectedHosts">
            <summary>
            Current selected hosts as dependencies.
            Will be passed for serialization when publishing package.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.SelectedHostsString">
            <summary>
            Current selected hosts as dependencies string for display
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.HasDependencies">
            <summary>
            Boolean indicating if the current publishing package is depending on other package
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.HasNoDependencies">
            <summary>
            This property seems dup with HasDependencies
            TODO: Remove in Dynamo 3.0
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.MarkdownFilesDirectory">
            <summary>
            An optional directory, specified by the user, which holds guidance documents
            for their nodes or packages in the markdown format.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.SubmitCommand">
            <summary>
            SubmitCommand property </summary>
            <value>
            A command which, when executed, submits the current package</value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.PublishLocallyCommand">
            <summary>
            PublishLocallyCommand property </summary>
            <value>
            A command which, when executed, publish the current package to a local folder</value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.ShowAddFileDialogAndAddCommand">
            <summary>
            A command which, when executed, adds the selected file(s) to the PackageContents.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.SelectDirectoryAndAddFilesRecursivelyCommand">
            <summary>
            A command which, when executed, recursively adds the selected folders and their
            subfolders to the PackageContents 
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.SelectMarkdownDirectoryCommand">
            <summary>
            SelectMarkdownDirectoryCommand property. A command which, when executed,
            opens the directory selection dialog and prompts the user to specify
            a directory for their (optional) markdown files. </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.ClearMarkdownDirectoryCommand">
            <summary>
            A command, fired by the 'Reset' button in the PublishPackageView.
            Sets the MarkdownDirectory property to an empty string.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.RemoveItemCommand">
            <summary>
            A command, fired by the trash can icon in the Package Contents Datagrid.
            Used to remove an item from the list of package contents.
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.ToggleMoreCommand">
            <summary>
            ToggleMoreCommand property </summary>
            <value>
            A command which, when executed, submits the current package</value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.Package">
            <summary>
            The package used for this submission
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.PackageContents">
            <summary>
            PackageContents property 
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel.customNodeDefinitions">
            <summary>
            CustomNodeDefinitions property 
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._additionalFiles">
            <summary>
            AdditionalFiles property 
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel.MarkdownFiles">
            <summary>
            Optional Markdown files list
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.Dependencies">
            <summary>
            Dependencies property </summary>
            <value>
            Computed and manually added package dependencies</value>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.DependencyNames">
            <summary>
            A user-facing comma-separated string of this package's dependencies.
            </summary>
        </member>
        <member name="F:Dynamo.PackageManager.PublishPackageViewModel._dynamoBaseHeader">
            <summary>
            BaseVersionHeader property </summary>
            <value>
            The PackageHeader if we're uploading a new verson, setting this updates
            almost all of the fields in this object</value>
            
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.IsWarningEnabled">
            <summary>
            This flag will be in true when the package name is invalid
            </summary>
        </member>
        <member name="P:Dynamo.PackageManager.PublishPackageViewModel.CurrentWarningMessage">
            <summary>
            This property will hold the warning message that has to be shown in the warning icon next to the TextBox
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.initializeHostSelections">
            <summary>
            Return a list of HostComboboxEntry describing known hosts from PM.
            Return an empty list if PM is down.
            </summary>
            <returns>A list of HostComboboxEntry describing known hosts from PM.</returns>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.#ctor(Dynamo.ViewModels.DynamoViewModel)">
            <summary>
            The class constructor. </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.SelectDirectoryAndAddFilesRecursively">
            <summary>
            Method linked to SelectDirectoryAndAddFilesRecursivelyCommand.
            Opens the Select Folder dialog and prompts the user to select a directory.
            Recursively adds any files found in the given directory to PackageContents.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.SelectMarkdownDirectory">
            <summary>
            Method linked to the SelectMarkdownDirectoryCommand.
            Prompts the user to specify a directory containing markdown files, which if successful,
            is saved to the MarkdownFilesDirectory property.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.ClearMarkdownDirectory">
            <summary>
            Method linked to the ClearMarkdownDirectoryCommand.
            Sets the MarkdownFilesDirectory to an empty string.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.RemoveItem(System.Object)">
            <summary>
            Removes an item from the package contents list.
            </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.Submit">
            <summary>
            Delegate used to submit the publish online request</summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.TranslatePackageManagerError(System.String)">
            <summary>
            Inspects an error message to see if it matches a known Package Manager error message. If it does,
            it returns the equivalent translated resource, otherwise it returns the same message.
            NOTE: This function is internal for testing purposes only.
            </summary>
            <param name="message">Message to inspect</param>
            <returns>Translated message or same as parameter</returns>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.PublishLocally">
            <summary>
            Delegate used to publish the element to a local folder</summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.CanSubmit">
            <summary>
            Delegate used to submit the element </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.CanPublishLocally">
            <summary>
            Delegate used to publish the element locally </summary>
        </member>
        <member name="M:Dynamo.PackageManager.PublishPackageViewModel.EnableInvalidNameWarningState(System.String)">
            <summary>
            This method will enable the warning icon next to the Package Name TextBox
            </summary>
            <param name="warningMessage">Message that will be displayed when the mouse is over the warning</param>
        </member>
        <member name="T:Dynamo.Views.GeometryScalingPopup">
            <summary>
            GeometryScalingPopup
            </summary>
        </member>
        <member name="M:Dynamo.Views.GeometryScalingPopup.Geometry_Scaling_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is generated every time the user clicks a Radio Button in the Geometry Scaling section
            The method just get the Radio Button clicked and saves the ScaleValue selected
            This are the values used for the scales:
            - 2 - Small
              0 - Medium (Default)
              2 - Large
              4 - Extra Large
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Views.GeometryScalingPopup.RunGraphWhenScaleFactorUpdated">
            <summary>
            This method will run the graph only if the Geometry Scaling was updated otherwise will not be executed
            </summary>
        </member>
        <member name="M:Dynamo.Views.GeometryScalingPopup.UpdatePopupLocation">
            <summary>
            Relocate the Popup when the Dynamo window is moved or resized
            </summary>
        </member>
        <member name="M:Dynamo.Views.GeometryScalingPopup.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dynamo.Views.WorkspaceView">
            <summary>
            Interaction logic for WorkspaceView.xaml
            </summary>
            <summary>
            WorkspaceView
            </summary>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.RemoveViewModelsubscriptions(Dynamo.ViewModels.WorkspaceViewModel)">
            <summary>
            clean up view model subscriptions to prevent memory leak
            </summary>
            <param name="ViewModel"></param>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.AttachViewModelsubscriptions(Dynamo.ViewModels.WorkspaceViewModel)">
            <summary>
            Attach view model subscriptions
            </summary>
            <param name="ViewModel"></param>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.HideAllPopUp(System.Object)">
            <summary>
            Hides all popups in the view, the amount of popup hidden will be different depending on
            if the hide view command is triggered on node level or workspace level
            </summary>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.IsWorkSpaceRenderValidAsImage(System.Boolean,System.String)">
            <summary>
            Function to validate if the Workspace is valid for export as image / save it as image
            </summary>
            <param name="validating"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.OnWorkspaceViewDataContextChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This WorkspaceView will be supporting multiple WorkspaceViewModel
            E.g. Home Workspace, Custom Workspaces
            
            Handler for the DataContextChangedEvent. Handles registration of event listeners.
            Called during switching of workspace. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.DestroyPortContextMenu">
            <summary>
            Closes the port's context menu and sets its references to null.
            </summary>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.DragAndDrop(System.Windows.Point)">
            <summary>
            Drag and drop nodes, notes, annotations and connectors.
            </summary>
            <param name="mouse">Relative position to WorkspaceElements</param>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.CenterViewOnElement(System.Object,System.EventArgs)">
            <summary>
            Centers the view on a node by changing the workspace's CurrentOffset.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.OnInCanvasSearchContextMenuMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            MouseUp is used to close context menu. Only if original sender was Thumb(i.e. scroll bar),
            then context menu is left open.
            Or if original sender was TextBox, then context menu is left open as well.
            </summary>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.OnInCanvasSearchContextMenuMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            MouseDown is used to set place, where node will be created.
            </summary>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.OnCanvasClicked(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Determines position of mouse, when user clicks on canvas.
            Both left and right mouse clicks.
            </summary>
        </member>
        <member name="M:Dynamo.Views.WorkspaceView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:UI.Prompts.PortPropertiesEditPrompt">
            <summary>
            Interaction logic for PortPropertiesEditPrompt.xaml
            </summary>
            <summary>
            PortPropertiesEditPrompt
            </summary>
        </member>
        <member name="P:UI.Prompts.PortPropertiesEditPrompt.PortName">
            <summary>
            Port name
            </summary>
        </member>
        <member name="P:UI.Prompts.PortPropertiesEditPrompt.Description">
            <summary>
            Port Description
            </summary>
        </member>
        <member name="P:UI.Prompts.PortPropertiesEditPrompt.PortType">
            <summary>
            Port Type
            </summary>
        </member>
        <member name="P:UI.Prompts.PortPropertiesEditPrompt.IsStatusWarning">
            <summary>
            Shows if the port name validation has gone through or not
            </summary>
        </member>
        <member name="P:UI.Prompts.PortPropertiesEditPrompt.ErrorString">
            <summary>
            Contains the notification of the status label
            </summary>
        </member>
        <member name="P:UI.Prompts.PortPropertiesEditPrompt.OutPortNames">
            <summary>
            Contains the names of all ports
            Used in name validation check
            </summary>
        </member>
        <member name="M:UI.Prompts.PortPropertiesEditPrompt.FunctionNamePrompt_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Allows for the dragging of this custom-styled window. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:UI.Prompts.PortPropertiesEditPrompt.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DynamoCore.UI.Controls.GraphUpdateNotificationControl">
            <summary>
            Interaction logic for GraphUpdateNotificationControl.xaml
            </summary>
            <summary>
            GraphUpdateNotificationControl
            </summary>
        </member>
        <member name="M:DynamoCore.UI.Controls.GraphUpdateNotificationControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ViewModels.Core.GeometryScalingViewModel">
            <summary>
            This class will be contain information about the current Geometry Scale selected in the Dynamo Workspace
            </summary>
        </member>
        <member name="P:ViewModels.Core.GeometryScalingViewModel.ScaleSize">
            <summary>
            Current Geometry Scale selected in dynamo workspace.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
