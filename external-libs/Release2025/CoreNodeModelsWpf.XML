<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoreNodeModelsWpf</name>
    </assembly>
    <members>
        <member name="P:CoreNodeModelsWpf.Charts.BarChartNodeModel.Labels">
            <summary>
            Bar chart labels.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.BarChartNodeModel.Values">
            <summary>
            Bar chart values.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.BarChartNodeModel.Colors">
            <summary>
            Bar chart color values.
            </summary>
        </member>
        <member name="E:CoreNodeModelsWpf.Charts.BarChartNodeModel.PortUpdated">
            <summary>
            Triggers when port is connected or disconnected
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BarChartNodeModel.#ctor">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BarChartNodeModel.#ctor(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel},System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel})">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BarChartNodeModel.OnBuilt">
            <summary>
            Register the data bridge callback.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BarChartNodeModel.DataBridgeCallback(System.Object)">
            <summary>
            Callback method for DataBridge mechanism.PortDisconnected 
            This callback only gets called when 
                - The AST is executed
                - After the BuildOutputAST function is executed 
                - The AST is fully built
            </summary>
            <param name="data">The data passed through the data bridge.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BarChartNodeModel.BuildOutputAst(System.Collections.Generic.List{ProtoCore.AST.AssociativeAST.AssociativeNode})">
            <summary>
            BuildOutputAst is where the outputs of this node are calculated.
            This method is used to do the work that a compiler usually does 
            by parsing the inputs List inputAstNodes into an abstract syntax tree.
            </summary>
            <param name="inputAstNodes"></param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BarChartNodeModel.Dispose">
            <summary>
            Finalize the usage of this Node
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.BarChartNodeView">
            <summary>
                View customizer for CustomNodeModel Node Model.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BarChartNodeView.CustomizeView(CoreNodeModelsWpf.Charts.BarChartNodeModel,Dynamo.Controls.NodeView)">
            <summary>
            At run-time, this method is called during the node 
            creation. Add custom UI element to the node view.
            </summary>
            <param name="model">The NodeModel representing the node's core logic.</param>
            <param name="nodeView">The NodeView representing the node in the graph.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BarChartNodeView.Dispose">
            <summary>
            Here you can do any cleanup you require if you've assigned callbacks for particular 
            UI events on your node.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.Labels">
            <summary>
            A list of Labels for each line to be plotted.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.Values">
            <summary>
            List of lists each containing double values to be plotted.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.Colors">
            <summary>
            A list of color values, one for each plotted line.
            </summary>
        </member>
        <member name="E:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.PortUpdated">
            <summary>
            Triggers when port is connected or disconnected
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.#ctor">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.#ctor(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel},System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel})">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.OnBuilt">
            <summary>
            Register the data bridge callback.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.DataBridgeCallback(System.Object)">
            <summary>
            Callback method for DataBridge mechanism.
            This callback only gets called when 
                - The AST is executed
                - After the BuildOutputAST function is executed 
                - The AST is fully built
            </summary>
            <param name="data">The data passed through the data bridge.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.BuildOutputAst(System.Collections.Generic.List{ProtoCore.AST.AssociativeAST.AssociativeNode})">
            <summary>
            BuildOutputAst is where the outputs of this node are calculated.
            This method is used to do the work that a compiler usually does 
            by parsing the inputs List inputAstNodes into an abstract syntax tree.
            </summary>
            <param name="inputAstNodes"></param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartNodeModel.Dispose">
            <summary>
            Finalize the usage of this Node
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.BasicLineChartNodeView">
            <summary>
                View customizer for CustomNodeModel Node Model.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartNodeView.CustomizeView(CoreNodeModelsWpf.Charts.BasicLineChartNodeModel,Dynamo.Controls.NodeView)">
            <summary>
            At run-time, this method is called during the node 
            creation. Add custom UI element to the node view.
            </summary>
            <param name="model">The NodeModel representing the node's core logic.</param>
            <param name="nodeView">The NodeView representing the node in the graph.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartNodeView.Dispose">
            <summary>
            Here you can do any cleanup you require if you've assigned callbacks for particular 
            UI events on your node.
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.Controls.BarChartControl">
            <summary>
            Interaction logic for BarChartControl.xaml
            </summary>
            <summary>
            BarChartControl
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.Controls.BarChartControl.XAxes">
            <summary>
            Used to get or set the X-axis of the chart
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.Controls.BarChartControl.YAxes">
            <summary>
            Used to get or set the Y-axis of the chart
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.BarChartControl.Unload(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Unsubscribes from ViewModel events
            </summary>
            
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.BarChartControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.Controls.HeatSeriesControl">
            <summary>
            Interaction logic for XYLineChartControl.xaml
            </summary>
            <summary>
            HeatSeriesControl
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.Controls.HeatSeriesControl.XAxes">
            <summary>
            Used to get or set the X-axis of the chart
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.Controls.HeatSeriesControl.YAxes">
            <summary>
            Used to get or set the Y-axis of the chart
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.HeatSeriesControl.Unload(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Unsubscribes from ViewModel events
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.HeatSeriesControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.Controls.PieChartControl">
            <summary>
            Interaction logic for PieChartControl.xaml
            </summary>
            <summary>
            PieChartControl
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.PieChartControl.Unload(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Unsubscribes from ViewModel events
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.PieChartControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.Controls.ScatterPlotControl">
            <summary>
            Interaction logic for ScatterPlotControl.xaml
            </summary>
            <summary>
            ScatterPlotControl
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.Controls.ScatterPlotControl.XAxes">
            <summary>
            Used to get or set the X-axis of the chart
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.Controls.ScatterPlotControl.YAxes">
            <summary>
            Used to get or set the Y-axis of the chart
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.ScatterPlotControl.Unload(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Unsubscribes from ViewModel events
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.ScatterPlotControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.Controls.XYLineChartControl">
            <summary>
            Interaction logic for XYLineChartControl.xaml
            </summary>
            <summary>
            XYLineChartControl
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.Controls.XYLineChartControl.XAxes">
            <summary>
            Used to get or set the X-axis of the chart
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.Controls.XYLineChartControl.YAxes">
            <summary>
            Used to get or set the Y-axis of the chart
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.XYLineChartControl.Unload(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Unsubscribes from ViewModel events
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Controls.XYLineChartControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.BasicLineChartControl">
            <summary>
            Interaction logic for BasicLineChartControl.xaml
            </summary>
            <summary>
            BasicLineChartControl
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.BasicLineChartControl.XAxes">
            <summary>
            Used to get or set the X-axis of the chart
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.BasicLineChartControl.YAxes">
            <summary>
            Used to get or set the Y-axis of the chart
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartControl.Unload(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Unsubscribes from ViewModel events
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.BasicLineChartControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.XLabels">
            <summary>
            A list of X-axis Labels.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.YLabels">
            <summary>
            A list of Y-axis Labels.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.Values">
            <summary>
            List of lists each containing double values representing items in a column.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.Colors">
            <summary>
            A list of color values, one for each plotted line.
            </summary>
        </member>
        <member name="E:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.PortUpdated">
            <summary>
            Triggers when port is connected or disconnected
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.#ctor">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.#ctor(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel},System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel})">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.OnBuilt">
            <summary>
            Register the data bridge callback.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.DataBridgeCallback(System.Object)">
            <summary>
            Callback method for DataBridge mechanism.
            This callback only gets called when 
                - The AST is executed
                - After the BuildOutputAST function is executed 
                - The AST is fully built
            </summary>
            <param name="data">The data passed through the data bridge.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.BuildOutputAst(System.Collections.Generic.List{ProtoCore.AST.AssociativeAST.AssociativeNode})">
            <summary>
            BuildOutputAst is where the outputs of this node are calculated.
            This method is used to do the work that a compiler usually does 
            by parsing the inputs List inputAstNodes into an abstract syntax tree.
            </summary>
            <param name="inputAstNodes"></param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.HeatSeriesNodeModel.Dispose">
            <summary>
            Finalize the usage of this Node
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.HeatSeriesNodeView">
            <summary>
                View customizer for CustomNodeModel Node Model.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.HeatSeriesNodeView.CustomizeView(CoreNodeModelsWpf.Charts.HeatSeriesNodeModel,Dynamo.Controls.NodeView)">
            <summary>
            At run-time, this method is called during the node 
            creation. Add custom UI element to the node view.
            </summary>
            <param name="model">The NodeModel representing the node's core logic.</param>
            <param name="nodeView">The NodeView representing the node in the graph.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.HeatSeriesNodeView.Dispose">
            <summary>
            Here you can do any cleanup you require if you've assigned callbacks for particular 
            UI events on your node.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.PieChartNodeModel.Labels">
            <summary>
            Pie chart labels.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.PieChartNodeModel.Values">
            <summary>
            Pie chart values.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.PieChartNodeModel.Colors">
            <summary>
            Pie chart color values.
            </summary>
        </member>
        <member name="E:CoreNodeModelsWpf.Charts.PieChartNodeModel.PortUpdated">
            <summary>
            Triggers when port is connected or disconnected
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.PieChartNodeModel.#ctor">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.PieChartNodeModel.#ctor(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel},System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel})">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.PieChartNodeModel.OnBuilt">
            <summary>
            Register the data bridge callback.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.PieChartNodeModel.DataBridgeCallback(System.Object)">
            <summary>
            Callback method for DataBridge mechanism.
            This callback only gets called when 
                - The AST is executed
                - After the BuildOutputAST function is executed 
                - The AST is fully built
            </summary>
            <param name="data">The data passed through the data bridge.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.PieChartNodeModel.BuildOutputAst(System.Collections.Generic.List{ProtoCore.AST.AssociativeAST.AssociativeNode})">
            <summary>
            BuildOutputAst is where the outputs of this node are calculated.
            This method is used to do the work that a compiler usually does 
            by parsing the inputs List inputAstNodes into an abstract syntax tree.
            </summary>
            <param name="inputAstNodes"></param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.PieChartNodeModel.Dispose">
            <summary>
            Finalize the usage of this Node
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.PieChartNodeView">
            <summary>
                View customizer for CustomNodeModel Node Model.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.PieChartNodeView.CustomizeView(CoreNodeModelsWpf.Charts.PieChartNodeModel,Dynamo.Controls.NodeView)">
            <summary>
            At run-time, this method is called during the node 
            creation. Add custom UI element to the node view.
            </summary>
            <param name="model">The NodeModel representing the node's core logic.</param>
            <param name="nodeView">The NodeView representing the node in the graph.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.PieChartNodeView.Dispose">
            <summary>
            Here you can do any cleanup you require if you've assigned callbacks for particular 
            UI events on your node.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.Labels">
            <summary>
            A list of Labels for each line to be plotted.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.XValues">
            <summary>
            List of lists each containing double values representing x-coordinates.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.YValues">
            <summary>
            List of lists each containing double values representing y-coordinates.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.Colors">
            <summary>
            A list of color values, one for each plotted line.
            </summary>
        </member>
        <member name="E:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.PortUpdated">
            <summary>
            Triggers when port is connected or disconnected
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.#ctor">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.#ctor(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel},System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel})">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.OnBuilt">
            <summary>
            Register the data bridge callback.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.DataBridgeCallback(System.Object)">
            <summary>
            Callback method for DataBridge mechanism.
            This callback only gets called when 
                - The AST is executed
                - After the BuildOutputAST function is executed 
                - The AST is fully built
            </summary>
            <param name="data">The data passed through the data bridge.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.BuildOutputAst(System.Collections.Generic.List{ProtoCore.AST.AssociativeAST.AssociativeNode})">
            <summary>
            BuildOutputAst is where the outputs of this node are calculated.
            This method is used to do the work that a compiler usually does 
            by parsing the inputs List inputAstNodes into an abstract syntax tree.
            </summary>
            <param name="inputAstNodes"></param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.ScatterPlotNodeModel.Dispose">
            <summary>
            Finalize the usage of this Node
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.ScatterPlotNodeView">
            <summary>
                View customizer for CustomNodeModel Node Model.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.ScatterPlotNodeView.CustomizeView(CoreNodeModelsWpf.Charts.ScatterPlotNodeModel,Dynamo.Controls.NodeView)">
            <summary>
            At run-time, this method is called during the node 
            creation. Add custom UI element to the node view.
            </summary>
            <param name="model">The NodeModel representing the node's core logic.</param>
            <param name="nodeView">The NodeView representing the node in the graph.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.ScatterPlotNodeView.Dispose">
            <summary>
            Here you can do any cleanup you require if you've assigned callbacks for particular 
            UI events on your node.
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.Utilities.ChartStyle">
            <summary>
            Helper class providing chart style parameters
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Utilities.ChartStyle.HexToSKColor(System.String)">
            <summary>
            Method to convert HEX color to Skia color, if no color is provided
            it will return the default color
            </summary>
            <param name="hex">Hex code of the color to be converted</param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Utilities.ChartStyle.GetRandomList(System.Int32,System.Int32)">
            <summary>
            Returns a list of random doubles of the given size, with a max limit
            </summary>
            <param name="size">Size of the random double's list</param>
            <param name="max">Max limit of random numbers</param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Utilities.ChartStyle.GetRandomInt(System.Int32,System.Int32)">
            <summary>
            Returns a random integer within the given min and max limit
            </summary>
            <param name="min">Min limit of random number</param>
            <param name="max">Max limit of random number</param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Utilities.ChartStyle.GetRandomDouble(System.Int32)">
            <summary>
            Returns a random double within the given max limit
            </summary>
            <param name="max">Max limit of random number</param>
            <returns></returns>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.Utilities.Colors">
            <summary>
            Helper class providing colors based on the Dynamo color palette
            The color palette is defined inside the LiveChartDictionary resource
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Utilities.Colors.GetColor">
            <summary>
            Cycles through all the colors inside the palette returning the next color
            Loops through all colors then starts back at 0
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Utilities.Colors.ResetColors">
            <summary>
            Resets the color sequence for consistency
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.Utilities.Export.ToPng(LiveChartsCore.SkiaSharpView.WPF.Chart,LiveChartsCore.SkiaSharpView.WPF.GeoMap)">
            <summary>
            Saves the chart as a image to the user defined location.
            </summary>
            <param name="control">For Cartesian or Pie Charts use this argument </param>
            <param name="gcontrol">GeoMapChart Control, if the incoming chart is of type GeoMap, use this argument, defaults to null</param>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.Labels">
            <summary>
            A list of Labels for each line to be plotted.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.XValues">
            <summary>
            List of lists each containing double values representing x-coordinates.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.YValues">
            <summary>
            List of lists each containing double values representing y-coordinates.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.Colors">
            <summary>
            A list of color values, one for each plotted line.
            </summary>
        </member>
        <member name="E:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.PortUpdated">
            <summary>
            Triggers when port is connected or disconnected
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.#ctor">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.#ctor(System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel},System.Collections.Generic.IEnumerable{Dynamo.Graph.Nodes.PortModel})">
            <summary>
            Instantiate a new NodeModel instance.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.OnBuilt">
            <summary>
            Register the data bridge callback.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.DataBridgeCallback(System.Object)">
            <summary>
            Callback method for DataBridge mechanism.
            This callback only gets called when 
                - The AST is executed
                - After the BuildOutputAST function is executed 
                - The AST is fully built
            </summary>
            <param name="data">The data passed through the data bridge.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.BuildOutputAst(System.Collections.Generic.List{ProtoCore.AST.AssociativeAST.AssociativeNode})">
            <summary>
            BuildOutputAst is where the outputs of this node are calculated.
            This method is used to do the work that a compiler usually does 
            by parsing the inputs List inputAstNodes into an abstract syntax tree.
            </summary>
            <param name="inputAstNodes"></param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.XYLineChartNodeModel.Dispose">
            <summary>
            Finalize the usage of this Node
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Charts.XYLineChartNodeView">
            <summary>
                View customizer for CustomNodeModel Node Model.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.XYLineChartNodeView.CustomizeView(CoreNodeModelsWpf.Charts.XYLineChartNodeModel,Dynamo.Controls.NodeView)">
            <summary>
            At run-time, this method is called during the node 
            creation. Add custom UI element to the node view.
            </summary>
            <param name="model">The NodeModel representing the node's core logic.</param>
            <param name="nodeView">The NodeView representing the node in the graph.</param>
        </member>
        <member name="M:CoreNodeModelsWpf.Charts.XYLineChartNodeView.Dispose">
            <summary>
            Here you can do any cleanup you require if you've assigned callbacks for particular 
            UI events on your node.
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Controls.ColorPaletteUI">
            <summary>
            Interaction logic for ColorPalette.xaml
            </summary>
            <summary>
            ColorPaletteUI
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Controls.ColorPaletteUI.ColorPickerSelectedColorHandler">
            <summary>
            Delegate that will be used for manage the event when a color was selected from the Color Picker
            </summary>
        </member>
        <member name="E:CoreNodeModelsWpf.Controls.ColorPaletteUI.ColorPickerSelectedColor">
            <summary>
            Event that will be raised when the user selected a color in the CustomColorPicker popup and then the popup is closed
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Controls.ColorPaletteUI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Controls.CustomSelectionControl">
            <summary>
            Interaction logic for CustomSelectionControl.xaml
            </summary>
            <summary>
            CustomSelectionControl
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Controls.CustomSelectionControl.#ctor(CoreNodeModelsWpf.CustomSelectionViewModel)">
            <summary>
            Create the control for the custom dropdown menu and editor
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.Controls.CustomSelectionControl.BaseComboBox">
            <summary>
            Dropdown menu to select an item. Created by <see cref="T:CoreNodeModelsWpf.Nodes.DropDownNodeViewCustomization"/>.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Controls.CustomSelectionControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Controls.DateTimeInputControl">
            <summary>
            Interaction logic for DateTimeInputControl.xaml
            </summary>
            <summary>
            DateTimeInputControl
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Controls.DateTimeInputControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Controls.DefineDataControl">
            <summary>
            Interaction logic for DefineDataControl.xaml
            </summary>
            <summary>
            DefineDataControl
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Controls.DefineDataControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Controls.DynamoConverterControl">
            <summary>
            Interaction logic for ConverterControl.xaml
            </summary>
            <summary>
            DynamoConverterControl
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Controls.DynamoConverterControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Controls.DynamoSlider">
            <summary>
            Interaction logic for DynamoSlider.xaml
            </summary>
            <summary>
            DynamoSlider
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Controls.DynamoSlider.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.DoubleSliderSettingsControl">
            <summary>
            Interaction logic for SliderSettingsControl.xaml
            </summary>
            <summary>
            DoubleSliderSettingsControl
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.DoubleSliderSettingsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.ElementSelectionControl">
            <summary>
            Interaction logic for ElementSelectionControl.xaml
            </summary>
            <summary>
            ElementSelectionControl
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.ElementSelectionControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.IntegerSliderSettingsControl">
            <summary>
            Interaction logic for UserControl1.xaml
            </summary>
            <summary>
            IntegerSliderSettingsControl
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.IntegerSliderSettingsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Converters.StringToDateTimeConverter">
            <summary>
            DateTime converter used for Date Time node value conversion
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Converters.StringToDateTimeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert Date Time object to string using DefaultDateFormat
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.Converters.StringToDateTimeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert input string to Date Time value, try to apply DefaultDateFormat.
            If conversion fails, use default time.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:CoreNodeModelsWpf.ConverterViewModel.OnToggleButtonClick(System.Object)">
            <summary>
            Called when Toggle button is clicked.
            Switches the combo box values
            </summary>
            <param name="obj">The sender.</param>
        </member>
        <member name="T:CoreNodeModelsWpf.CustomSelectionViewModel">
            <summary>
            View model for <see cref="T:CoreNodeModelsWpf.Controls.CustomSelectionControl"/>, for the Custom Selection node.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.CustomSelectionViewModel.AddCommand">
            <summary>
            Add an item to the list. This command is bound to the + button in the GUI.
            </summary>
        </member>
        <member name="P:CoreNodeModelsWpf.CustomSelectionViewModel.RemoveCommand">
            <summary>
            Remove an item from the list. This command is bound to the - button in the GUI.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.CustomSelectionViewModel.#ctor">
            <summary>
            Create a new <see cref="T:CoreNodeModelsWpf.CustomSelectionViewModel"/>. Used by the view in design-time.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.CustomSelectionViewModel.#ctor(CoreNodeModels.Input.CustomSelection)">
            <summary>
            Create a new <see cref="T:CoreNodeModelsWpf.CustomSelectionViewModel"/> with an existing model.
            </summary>
            <param name="model">The model data.</param>
        </member>
        <member name="F:CoreNodeModelsWpf.Nodes.ColorPaletteNodeViewCustomization.ColorPaletteUINode">
            <summary>
                WPF Control.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Nodes.ColorPaletteNodeViewCustomization.CustomizeView(CoreNodeModels.Input.ColorPalette,Dynamo.Controls.NodeView)">
            <summary>
                Customize View.
            </summary>
            <param name="model"></param>
            <param name="nodeView"></param>
        </member>
        <member name="M:CoreNodeModelsWpf.Nodes.ColorPaletteNodeViewCustomization.Dispose">
            <summary>
                Dispose.
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.Nodes.CustomSelectionNodeViewCustomization">
            <summary>
            View customizer for Custom Selection node model.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Nodes.CustomSelectionNodeViewCustomization.CustomizeView(CoreNodeModels.Input.CustomSelection,Dynamo.Controls.NodeView)">
            <summary>
            Customize the visual appearance of the custom dropdown node.
            </summary>
            <param name="model"></param>
            <param name="nodeView"></param>
        </member>
        <member name="T:CoreNodeModelsWpf.Nodes.DefineDataNodeViewCustomization">
            <summary>
            View customizer for DefineData node model.
            </summary>
        </member>
        <member name="M:CoreNodeModelsWpf.Nodes.DefineDataNodeViewCustomization.CustomizeView(CoreNodeModels.DefineData,Dynamo.Controls.NodeView)">
            <summary>
            Customize the visual appearance of the DefineData node.
            </summary>
            <param name="model">The DefineData model to customize</param>
            <param name="nodeView"></param>
        </member>
        <member name="M:CoreNodeModelsWpf.Nodes.DropDownNodeViewCustomization.DropDownOpened(System.Object,System.EventArgs)">
            <summary>
            When the dropdown is opened, the node's implementation of PopulateItems is called
            </summary>
        </member>
        <member name="T:CoreNodeModelsWpf.SliderViewModel`1">
            <summary>
            The SliderViewModel acts as the converter
            for numeric sliders. By using a view model
            to do the conversion instead of a converter,
            we can do conditional conversion based on the 
            context in which the conversion happens.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ColorPaletteViewModel.SelectedColor">
            <summary>
            This Property will contain the selected color in the CustomColorPicker popup
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ColorPaletteViewModel.SelectedColorValue">
            <summary>
            This property will contain the selected color value in the CustomColorPicker popup
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.ColorPaletteViewModel.IsColorPickerShown">
            <summary>
            When the Color Picker is opened this value will have true otherwise will be false, this helps to control the arrow color in the ToggleButton
            </summary>
        </member>
        <member name="T:Dynamo.Wpf.Properties.CoreNodeModelWpfResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBarChartLabelsValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to Dictionary containing label:value key-pairs
            
            Dictionary&lt;string, double&gt;
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBarChartColorsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of colors for each bar chart category.
            
            List&lt;color&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBarChartDescription">
            <summary>
              Looks up a localized string similar to Create a new Bar Chart.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBarChartSearchTags">
            <summary>
              Looks up a localized string similar to bar;barchart.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBarChartLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of labels for the bar chart categories.
            
            List&lt;string&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBarChartValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list (of lists) to supply values for the bars in each category.
            
            List&lt;var&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBasicLineChartColorsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of colors for each line.
            
            List&lt;color&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBasicLineChartLabelsValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to Dictionary containing label:value key-pairs
            
            Dictionary&lt;string, List&lt;double&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBasicLineChartDescription">
            <summary>
              Looks up a localized string similar to Create a new Basic Line Chart.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBasicLineChartSearchTags">
            <summary>
              Looks up a localized string similar to index;indexvalue;indexvaluelineplot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBasicLineChartLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of string labels for each line to be plotted.
            
            List&lt;string&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsBasicLineChartValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to List of lists each containing double values to be plotted against X-Axis values.
            
            List&lt;List&lt;double&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsHeatSeriesColorsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of colors for each bar chart category.
            
            List&lt;color&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsHeatSeriesLabelsValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to Dictionary containing label:value key-pairs
            
            Dictionary&lt;string, Dictionary&lt;string, double&gt;&gt;
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsHeatSeriesDescription">
            <summary>
              Looks up a localized string similar to Create a heat series plot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsHeatSeriesSearchTags">
            <summary>
              Looks up a localized string similar to heat;heatseries;heatseriesplot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsHeatSeriesValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of lists each containing double values representing items in a column. 
            
            List&lt;List&lt;double&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsHeatSeriesXLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of string labels for the x-axis.
            
            List&lt;string&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsHeatSeriesYLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of string labels for the y-axis.
            
            List&lt;string&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsPieChartColorsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of colors for each segment of the pie chart.
            
            List&lt;color&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsPieChartDescription">
            <summary>
              Looks up a localized string similar to Create a new Pie Chart.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsPieChartSearchTags">
            <summary>
              Looks up a localized string similar to pie;piechart.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsPieChartValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of double values to supply a value for each segment of the pie chart.
            
            List&lt;double&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsPieChartLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of string labels for each segment in the pie chart.
            
            List&lt;string&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsPieChartLabelsValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to Dictionary containing label:value key-pairs
            
            Dictionary&lt;string, double&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsScatterPlotColorsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of colors for each group of points.
            
            List&lt;color&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsScatterPlotLabelsValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to Dictionary containing label:value key-pairs
            
            Dictionary&lt;string, List&lt;List&lt;double&gt;&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsScatterPlotDescription">
            <summary>
              Looks up a localized string similar to Create a scatter plot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsScatterPlotSearchTags">
            <summary>
              Looks up a localized string similar to scatter;scatterplot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsScatterPlotLabelsDataPortToolTip">
            <summary>
              Looks up a localized string similar to A list of string labels for each group of points to be plotted.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsScatterPlotXLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of lists each containing double values representing x-coordinates.
            
            List&lt;List&lt;double&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsScatterPlotYLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of lists each containing double values representing y-coordinates.
            
            List&lt;List&lt;double&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsXYLineChartColorsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of colors for each line in the line plot.
            
            List&lt;color&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsXYLineChartLabelsValuesDataPortToolTip">
             <summary>
               Looks up a localized string similar to Dictionary containing label:value key-pairs
            
            Dictionary&lt;string, List&lt;List&lt;double&gt;&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsXYLineChartDescription">
            <summary>
              Looks up a localized string similar to Create a new XY line plot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsXYLineChartSearchTags">
            <summary>
              Looks up a localized string similar to lineplot;xylineplot.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsXYLineChartLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of string labels for each line to be plotted
            
            List&lt;string&gt;
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsXYLineChartXLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of lists each containing double values representing x-coordinates for each point in a line.
            
            List&lt;List&lt;double&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ChartsXYLineChartYLabelsDataPortToolTip">
             <summary>
               Looks up a localized string similar to A list of lists each containing double values representing x-coordinates for each point in a line.
            
            List&lt;List&lt;double&gt;&gt;.
             </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ColorPaletteUIAdvancedButtonHeader">
            <summary>
              Looks up a localized string similar to Advanced.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ColorPaletteUIRecentColors">
            <summary>
              Looks up a localized string similar to Recent Colors.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ColorPaletteUIStandardButtonHeader">
            <summary>
              Looks up a localized string similar to Standard.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ColorPaletteUIStandardColors">
            <summary>
              Looks up a localized string similar to Standard Colors.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.DateTimeInputToolTip">
            <summary>
              Looks up a localized string similar to Enter time and date in the format &apos;MMMM dd, yyyy h:mm tt&apos;.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.GateClose">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.GateOpen">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.LblDisplay">
            <summary>
              Looks up a localized string similar to Display.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.LblValue">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ProvideDefaultColorsWarningMessage">
            <summary>
              Looks up a localized string similar to Default colors are used. To define custom colors, provide an equal number of colors and labels inputs..
            </summary>
        </member>
        <member name="P:Dynamo.Wpf.Properties.CoreNodeModelWpfResources.ResizeThumbToolTip">
            <summary>
              Looks up a localized string similar to Drag to modify the size of the chart.
            </summary>
        </member>
        <member name="M:DSCore.File.FilenameNodeViewCustomization.readFileButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handler for browse.. button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
