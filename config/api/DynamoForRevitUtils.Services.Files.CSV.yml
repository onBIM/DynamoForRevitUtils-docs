### YamlMime:ManagedReference
items:
- uid: DynamoForRevitUtils.Services.Files.CSV
  commentId: T:DynamoForRevitUtils.Services.Files.CSV
  id: CSV
  parent: DynamoForRevitUtils.Services.Files
  children:
  - DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath(System.String,System.String,System.Boolean,System.Boolean,System.Object,System.Object)
  - DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath(System.String,System.Object[][],System.String)
  langs:
  - csharp
  - vb
  name: CSV
  nameWithType: CSV
  fullName: DynamoForRevitUtils.Services.Files.CSV
  type: Class
  assemblies:
  - DynamoForRevitUtils
  namespace: DynamoForRevitUtils.Services.Files
  summary: Utils methods for read/write CSV files
  example: []
  syntax:
    content: public static class CSV
    content.vb: Public Module CSV
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath(System.String,System.String,System.Boolean,System.Boolean,System.Object,System.Object)
  commentId: M:DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath(System.String,System.String,System.Boolean,System.Boolean,System.Object,System.Object)
  id: ReadFileFromPath(System.String,System.String,System.Boolean,System.Boolean,System.Object,System.Object)
  parent: DynamoForRevitUtils.Services.Files.CSV
  langs:
  - csharp
  - vb
  name: ReadFileFromPath(string, string, bool, bool, object?, object?)
  nameWithType: CSV.ReadFileFromPath(string, string, bool, bool, object?, object?)
  fullName: DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath(string, string, bool, bool, object?, object?)
  type: Method
  assemblies:
  - DynamoForRevitUtils
  namespace: DynamoForRevitUtils.Services.Files
  summary: >-
    Imports data from a CSV (comma separated values) file, put the items into a list and 

    transpose it if needed.
  remarks: >-
    <code class="paramref">cultureInfoObj</code> and <code class="paramref">encodingObj</code> parsed as object to avoid exposing the

    <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> and <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> classes in the Dynamo Library.
  example: []
  syntax:
    content: public static IList? ReadFileFromPath(string filePath, string delimiter, bool transpose, bool readAsString, object? encodingObj = null, object? cultureInfoObj = null)
    parameters:
    - id: filePath
      type: System.String
      description: CSV file to be converted into a list
    - id: delimiter
      type: System.String
      description: CSV delimiter.
    - id: transpose
      type: System.Boolean
      description: Toggle to transpose the imported data
    - id: readAsString
      type: System.Boolean
      description: Choose whether read all file as string or not
    - id: encodingObj
      type: System.Object
      description: <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> as object. Define the encoding to be used for reading the file.
    - id: cultureInfoObj
      type: System.Object
      description: <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> as object. Define the culture to be used for parsing the numbers.
    return:
      type: System.Collections.IList
      description: List containing the items in the CSV file
    content.vb: Public Shared Function ReadFileFromPath(filePath As String, delimiter As String, transpose As Boolean, readAsString As Boolean, encodingObj As Object = Nothing, cultureInfoObj As Object = Nothing) As IList
  overload: DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath*
  seealso:
  - linkType: HRef
    linkId: https://github.com/DynamoDS/Dynamo/blob/master/src/Libraries/DSOffice/Excel.cs
    altText: https://github.com/DynamoDS/Dynamo/blob/master/src/Libraries/DSOffice/Excel.cs
  nameWithType.vb: CSV.ReadFileFromPath(String, String, Boolean, Boolean, Object, Object)
  fullName.vb: DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath(String, String, Boolean, Boolean, Object, Object)
  name.vb: ReadFileFromPath(String, String, Boolean, Boolean, Object, Object)
- uid: DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath(System.String,System.Object[][],System.String)
  commentId: M:DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath(System.String,System.Object[][],System.String)
  id: WriteToFilePath(System.String,System.Object[][],System.String)
  parent: DynamoForRevitUtils.Services.Files.CSV
  langs:
  - csharp
  - vb
  name: WriteToFilePath(string, object[][], string)
  nameWithType: CSV.WriteToFilePath(string, object[][], string)
  fullName: DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath(string, object[][], string)
  type: Method
  assemblies:
  - DynamoForRevitUtils
  namespace: DynamoForRevitUtils.Services.Files
  summary: >-
    Write a list of lists into a file using a comma-separated values 

    format. Outer list represents rows, inner lists represent columns.
  example: []
  syntax:
    content: public static string WriteToFilePath(string filePath, object[][] data, string delimiter = ",")
    parameters:
    - id: filePath
      type: System.String
      description: Path to write to
    - id: data
      type: System.Object[][]
      description: List of lists to write into CSV
    - id: delimiter
      type: System.String
      description: CSV delimiter. The accepted delimiters are ,;:\t|=
    return:
      type: System.String
    content.vb: Public Shared Function WriteToFilePath(filePath As String, data As Object()(), delimiter As String = ",") As String
  overload: DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath*
  seealso:
  - linkType: HRef
    linkId: https://github.com/DynamoDS/Dynamo/blob/master/src/Libraries/DSOffice/Excel.cs
    altText: https://github.com/DynamoDS/Dynamo/blob/master/src/Libraries/DSOffice/Excel.cs
  nameWithType.vb: CSV.WriteToFilePath(String, Object()(), String)
  fullName.vb: DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath(String, Object()(), String)
  name.vb: WriteToFilePath(String, Object()(), String)
references:
- uid: DynamoForRevitUtils.Services.Files
  commentId: N:DynamoForRevitUtils.Services.Files
  isExternal: true
  href: DynamoForRevitUtils.html
  name: DynamoForRevitUtils.Services.Files
  nameWithType: DynamoForRevitUtils.Services.Files
  fullName: DynamoForRevitUtils.Services.Files
  spec.csharp:
  - uid: DynamoForRevitUtils
    name: DynamoForRevitUtils
    isExternal: true
    href: DynamoForRevitUtils.html
  - name: .
  - uid: DynamoForRevitUtils.Services
    name: Services
    isExternal: true
    href: DynamoForRevitUtils.Services.html
  - name: .
  - uid: DynamoForRevitUtils.Services.Files
    name: Files
    isExternal: true
    href: DynamoForRevitUtils.Services.Files.html
  spec.vb:
  - uid: DynamoForRevitUtils
    name: DynamoForRevitUtils
    isExternal: true
    href: DynamoForRevitUtils.html
  - name: .
  - uid: DynamoForRevitUtils.Services
    name: Services
    isExternal: true
    href: DynamoForRevitUtils.Services.html
  - name: .
  - uid: DynamoForRevitUtils.Services.Files
    name: Files
    isExternal: true
    href: DynamoForRevitUtils.Services.Files.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath*
  commentId: Overload:DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath
  isExternal: true
  href: DynamoForRevitUtils.Services.Files.CSV.html#DynamoForRevitUtils_Services_Files_CSV_ReadFileFromPath_System_String_System_String_System_Boolean_System_Boolean_System_Object_System_Object_
  name: ReadFileFromPath
  nameWithType: CSV.ReadFileFromPath
  fullName: DynamoForRevitUtils.Services.Files.CSV.ReadFileFromPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath*
  commentId: Overload:DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath
  isExternal: true
  href: DynamoForRevitUtils.Services.Files.CSV.html#DynamoForRevitUtils_Services_Files_CSV_WriteToFilePath_System_String_System_Object_____System_String_
  name: WriteToFilePath
  nameWithType: CSV.WriteToFilePath
  fullName: DynamoForRevitUtils.Services.Files.CSV.WriteToFilePath
- uid: System.Object[][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[][]
  nameWithType: object[][]
  fullName: object[][]
  nameWithType.vb: Object()()
  fullName.vb: Object()()
  name.vb: Object()()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: (
  - name: )
