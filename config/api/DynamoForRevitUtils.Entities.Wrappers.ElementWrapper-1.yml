### YamlMime:ManagedReference
items:
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
  commentId: T:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
  id: ElementWrapper`1
  parent: DynamoForRevitUtils.Entities.Wrappers
  children:
  - DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.#ctor(Autodesk.Revit.DB.Element,`0)
  - DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.Element
  - DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterAccessor
  - DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterMap
  langs:
  - csharp
  - vb
  name: ElementWrapper<TParamMap>
  nameWithType: ElementWrapper<TParamMap>
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>
  type: Class
  assemblies:
  - DynamoForRevitUtils
  namespace: DynamoForRevitUtils.Entities.Wrappers
  summary: Represents an abstract base class for wrapping Revit elements.
  remarks: >-
    <p>
        Use this class in conjunction with the <xref href="DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap%601" data-throw-if-not-resolved="false"></xref>
        to enhance the way you access element parameters.
    </p>

    <p>
        The <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601" data-throw-if-not-resolved="false"></xref> class represents the Revit Element
        and the <xref href="DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap%601" data-throw-if-not-resolved="false"></xref> represents the parameters of this element.
    </p>

    <p>
        To use these classes together, proceed as follows:
    <ol><li>
            Create a class derived from <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601" data-throw-if-not-resolved="false"></xref> to represent specific characteristics
            of the elements you want to represent.
        </li><li>
            Create properties in <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601" data-throw-if-not-resolved="false"></xref> with primitive Types or
            <xref href="Autodesk.Revit.DB.ElementId" data-throw-if-not-resolved="false"></xref> Type to represent the elements data.
        </li><li>
            Create properties of Type <xref href="DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameter" data-throw-if-not-resolved="false"></xref> in a class derived
            from <xref href="DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap%601" data-throw-if-not-resolved="false"></xref>. It is recommended that properties have the
            same names as in <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601" data-throw-if-not-resolved="false"></xref> created on step one, but it is not required.
        </li><li>
            Use <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601.ParameterAccessor" data-throw-if-not-resolved="false"></xref> within the getters and setters of <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601" data-throw-if-not-resolved="false"></xref>
            properties to retrieve and assign parameter values directly from and to Revit element instances.
        </li></ol>
        This way you will no longer need to worry about fetching parameters from elements every time
        you need to get/set their values.
        Use the properties of the <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601" data-throw-if-not-resolved="false"></xref> normally and their values
        will be automatically get/set from/to the element instances in Revit.
    </p>
  example:
  - >-
    <pre><code class="lang-csharp">public class CableTrayFittingWrapper : ElementWrapper&lt;CableTrayFittingParameters&gt;

    {
        internal CableTrayFittingWrapper(
            Autodesk.Revit.DB.Element element,
            CableTrayFittingParameters parameterMap
        ) : base(element, parameterMap) { }

        public string Comments {
            get =&gt; ParameterAccessor.GetStringValue();
            set =&gt; ParameterAccessor.SetValue(value);
        }

        public bool IDR {
            get =&gt; ParameterAccessor.GetBoolValue();
            set =&gt; ParameterAccessor.SetValue(value);
        }

        public double Elevation {
            get =&gt; ParameterAccessor.GetDoubleValue();
            set =&gt; ParameterAccessor.SetValue(value);
        }

        // Point to a property with other name in the CableTrayFittingParameters
        public ElementId EleId {
            get =&gt; ParameterAccessor.GetElementIdValue(
                nameof(CableTrayFittingParameters.EleIdParam)
            );
            set =&gt; ParameterAccessor.SetValue(
                value, 
                nameof(CableTrayFittingParameters.EleIdParam)
            );
        }
    }</code></pre>
  - >-
    <pre><code class="lang-csharp">public class CableTrayFittingParameters : ElementParameterMap&lt;CableTrayFittingParameters&gt;

    {
        // It is recommended that properties in this class 
        // have the same name to corresponding 
        // properties of ElementWrapper, but is not required.

        // Notice the Type of properties here must be of Type ElementParameter

        public ElementParameter DiffPropName { get; set; }

        public ElementParameter IDR { get; set; }

        public ElementParameter Elevation { get; set; }

        public ElementParameter EleIdParam { get; set; }

        // Constructor made internal to not appear in Dynamo Library, 
        // but still accessible from other classes.
        internal CableTrayFittingParameters() { }

        // Static constructor shown as Dynamo Node in Library.
        // Used to allow users customize parameters used.
        public static CableTrayFittingParameters Create(
            ElementParameter comments,
            ElementParameter idr,
            ElementParameter elevation,
            ElementParameter eleId,
        ) =&gt; new()
        {
            Comments = comments,
            IDR = idr,
            Elevation = elevation,
            EleIdParam = eleId,
        };
    }</code></pre>
  syntax:
    content: >-
      [IsVisibleInDynamoLibrary(false)]

      public abstract class ElementWrapper<TParamMap> : IElementWrapper<TParamMap> where TParamMap : IElementParameterMap
    typeParameters:
    - id: TParamMap
    content.vb: >-
      <IsVisibleInDynamoLibrary(False)>

      Public MustInherit Class ElementWrapper(Of TParamMap As IElementParameterMap) Implements IElementWrapper(Of TParamMap)
  inheritance:
  - System.Object
  derivedClasses:
  - DynamoForRevitUtils.Entities.Wrappers.FamilyInstanceWrapper`1
  implements:
  - DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{{TParamMap}}
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  extensionMethods:
  - System.Object.DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1
  attributes:
  - type: Autodesk.DesignScript.Runtime.IsVisibleInDynamoLibraryAttribute
    ctor: Autodesk.DesignScript.Runtime.IsVisibleInDynamoLibraryAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: ElementWrapper(Of TParamMap)
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap)
  name.vb: ElementWrapper(Of TParamMap)
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.#ctor(Autodesk.Revit.DB.Element,`0)
  commentId: M:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.#ctor(Autodesk.Revit.DB.Element,`0)
  id: '#ctor(Autodesk.Revit.DB.Element,`0)'
  parent: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
  langs:
  - csharp
  - vb
  name: ElementWrapper(Element, TParamMap)
  nameWithType: ElementWrapper<TParamMap>.ElementWrapper(Element, TParamMap)
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.ElementWrapper(Autodesk.Revit.DB.Element, TParamMap)
  type: Constructor
  assemblies:
  - DynamoForRevitUtils
  namespace: DynamoForRevitUtils.Entities.Wrappers
  summary: Constructs a new instance of <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ElementWrapper(Element element, TParamMap parameterMap)
    parameters:
    - id: element
      type: Autodesk.Revit.DB.Element
      description: The <xref href="DynamoForRevitUtils.Entities.Wrappers.ElementWrapper%601.Element" data-throw-if-not-resolved="false"></xref> to be wrapped.
    - id: parameterMap
      type: '{TParamMap}'
      description: The parameter indexers associated with the element.
    content.vb: Public Sub New(element As Element, parameterMap As TParamMap)
  overload: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.#ctor*
  nameWithType.vb: ElementWrapper(Of TParamMap).New(Element, TParamMap)
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).New(Autodesk.Revit.DB.Element, TParamMap)
  name.vb: New(Element, TParamMap)
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.Element
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.Element
  id: Element
  parent: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
  langs:
  - csharp
  - vb
  name: Element
  nameWithType: ElementWrapper<TParamMap>.Element
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.Element
  type: Property
  assemblies:
  - DynamoForRevitUtils
  namespace: DynamoForRevitUtils.Entities.Wrappers
  summary: Represents the Revit Element associated with this wrapper object.
  example: []
  syntax:
    content: public Element Element { get; }
    parameters: []
    return:
      type: Autodesk.Revit.DB.Element
    content.vb: Public ReadOnly Property Element As Element
  overload: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.Element*
  implements:
  - DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{{TParamMap}}.Element
  nameWithType.vb: ElementWrapper(Of TParamMap).Element
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).Element
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterMap
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterMap
  id: ParameterMap
  parent: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
  langs:
  - csharp
  - vb
  name: ParameterMap
  nameWithType: ElementWrapper<TParamMap>.ParameterMap
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.ParameterMap
  type: Property
  assemblies:
  - DynamoForRevitUtils
  namespace: DynamoForRevitUtils.Entities.Wrappers
  summary: >-
    Provides access to the mapping between property names and their associated parameters

    of the Revit element within this wrapper object.
  example: []
  syntax:
    content: public TParamMap ParameterMap { get; }
    parameters: []
    return:
      type: '{TParamMap}'
    content.vb: Public ReadOnly Property ParameterMap As TParamMap
  overload: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterMap*
  implements:
  - DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{{TParamMap}}.ParameterMap
  nameWithType.vb: ElementWrapper(Of TParamMap).ParameterMap
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).ParameterMap
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterAccessor
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterAccessor
  id: ParameterAccessor
  parent: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
  langs:
  - csharp
  - vb
  name: ParameterAccessor
  nameWithType: ElementWrapper<TParamMap>.ParameterAccessor
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.ParameterAccessor
  type: Property
  assemblies:
  - DynamoForRevitUtils
  namespace: DynamoForRevitUtils.Entities.Wrappers
  summary: >-
    Provides access to manipulate and retrieve parameter values of a

    Revit element through the associated element wrapper.
  example: []
  syntax:
    content: protected ElementParameterAccessor<TParamMap> ParameterAccessor { get; }
    parameters: []
    return:
      type: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor{{TParamMap}}
    content.vb: Protected ReadOnly Property ParameterAccessor As ElementParameterAccessor(Of TParamMap)
  overload: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterAccessor*
  nameWithType.vb: ElementWrapper(Of TParamMap).ParameterAccessor
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).ParameterAccessor
references:
- uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap`1
  commentId: T:DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap`1
  isExternal: true
  href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap-1.html
  name: ElementParameterMap<T>
  nameWithType: ElementParameterMap<T>
  fullName: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap<T>
  nameWithType.vb: ElementParameterMap(Of T)
  fullName.vb: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap(Of T)
  name.vb: ElementParameterMap(Of T)
  spec.csharp:
  - uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap`1
    name: ElementParameterMap
    isExternal: true
    href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap`1
    name: ElementParameterMap
    isExternal: true
    href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterMap-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
  commentId: T:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html
  name: ElementWrapper<TParamMap>
  nameWithType: ElementWrapper<TParamMap>
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>
  nameWithType.vb: ElementWrapper(Of TParamMap)
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap)
  name.vb: ElementWrapper(Of TParamMap)
  spec.csharp:
  - uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
    name: ElementWrapper
    isExternal: true
    href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html
  - name: <
  - name: TParamMap
  - name: '>'
  spec.vb:
  - uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1
    name: ElementWrapper
    isExternal: true
    href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TParamMap
  - name: )
- uid: Autodesk.Revit.DB.ElementId
  commentId: T:Autodesk.Revit.DB.ElementId
  parent: Autodesk.Revit.DB
  isExternal: true
  name: ElementId
  nameWithType: ElementId
  fullName: Autodesk.Revit.DB.ElementId
- uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameter
  commentId: T:DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameter
  parent: DynamoForRevitUtils.Entities.ParametersHandlers
  isExternal: true
  href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameter.html
  name: ElementParameter
  nameWithType: ElementParameter
  fullName: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameter
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterAccessor
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterAccessor
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_ElementWrapper_1_ParameterAccessor
  name: ParameterAccessor
  nameWithType: ElementWrapper<TParamMap>.ParameterAccessor
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.ParameterAccessor
  nameWithType.vb: ElementWrapper(Of TParamMap).ParameterAccessor
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).ParameterAccessor
- uid: DynamoForRevitUtils.Entities.Wrappers
  commentId: N:DynamoForRevitUtils.Entities.Wrappers
  isExternal: true
  href: DynamoForRevitUtils.html
  name: DynamoForRevitUtils.Entities.Wrappers
  nameWithType: DynamoForRevitUtils.Entities.Wrappers
  fullName: DynamoForRevitUtils.Entities.Wrappers
  spec.csharp:
  - uid: DynamoForRevitUtils
    name: DynamoForRevitUtils
    isExternal: true
    href: DynamoForRevitUtils.html
  - name: .
  - uid: DynamoForRevitUtils.Entities
    name: Entities
    isExternal: true
    href: DynamoForRevitUtils.Entities.html
  - name: .
  - uid: DynamoForRevitUtils.Entities.Wrappers
    name: Wrappers
    isExternal: true
    href: DynamoForRevitUtils.Entities.Wrappers.html
  spec.vb:
  - uid: DynamoForRevitUtils
    name: DynamoForRevitUtils
    isExternal: true
    href: DynamoForRevitUtils.html
  - name: .
  - uid: DynamoForRevitUtils.Entities
    name: Entities
    isExternal: true
    href: DynamoForRevitUtils.Entities.html
  - name: .
  - uid: DynamoForRevitUtils.Entities.Wrappers
    name: Wrappers
    isExternal: true
    href: DynamoForRevitUtils.Entities.Wrappers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{{TParamMap}}
  commentId: T:DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{`0}
  parent: DynamoForRevitUtils.Entities.Wrappers
  definition: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1
  href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html
  name: IElementWrapper<TParamMap>
  nameWithType: IElementWrapper<TParamMap>
  fullName: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper<TParamMap>
  nameWithType.vb: IElementWrapper(Of TParamMap)
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper(Of TParamMap)
  name.vb: IElementWrapper(Of TParamMap)
  spec.csharp:
  - uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1
    name: IElementWrapper
    isExternal: true
    href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html
  - name: <
  - name: TParamMap
  - name: '>'
  spec.vb:
  - uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1
    name: IElementWrapper
    isExternal: true
    href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TParamMap
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1
  commentId: M:DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1(System.Object)
  parent: DynamoForRevitUtils.Services.GenericServices.ObjectServices
  definition: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1(System.Object)
  href: DynamoForRevitUtils.Services.GenericServices.ObjectServices.html#DynamoForRevitUtils_Services_GenericServices_ObjectServices_TryCast__1_System_Object_
  name: TryCast<T>(object)
  nameWithType: ObjectServices.TryCast<T>(object)
  fullName: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast<T>(object)
  nameWithType.vb: ObjectServices.TryCast(Of T)(Object)
  fullName.vb: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast(Of T)(Object)
  name.vb: TryCast(Of T)(Object)
  spec.csharp:
  - uid: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1(System.Object)
    name: TryCast
    isExternal: true
    href: DynamoForRevitUtils.Services.GenericServices.ObjectServices.html#DynamoForRevitUtils_Services_GenericServices_ObjectServices_TryCast__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1(System.Object)
    name: TryCast
    isExternal: true
    href: DynamoForRevitUtils.Services.GenericServices.ObjectServices.html#DynamoForRevitUtils_Services_GenericServices_ObjectServices_TryCast__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Autodesk.Revit.DB
  commentId: N:Autodesk.Revit.DB
  isExternal: true
  name: Autodesk.Revit.DB
  nameWithType: Autodesk.Revit.DB
  fullName: Autodesk.Revit.DB
  spec.csharp:
  - uid: Autodesk
    name: Autodesk
    isExternal: true
  - name: .
  - uid: Autodesk.Revit
    name: Revit
    isExternal: true
  - name: .
  - uid: Autodesk.Revit.DB
    name: DB
    isExternal: true
  spec.vb:
  - uid: Autodesk
    name: Autodesk
    isExternal: true
  - name: .
  - uid: Autodesk.Revit
    name: Revit
    isExternal: true
  - name: .
  - uid: Autodesk.Revit.DB
    name: DB
    isExternal: true
- uid: DynamoForRevitUtils.Entities.ParametersHandlers
  commentId: N:DynamoForRevitUtils.Entities.ParametersHandlers
  isExternal: true
  href: DynamoForRevitUtils.html
  name: DynamoForRevitUtils.Entities.ParametersHandlers
  nameWithType: DynamoForRevitUtils.Entities.ParametersHandlers
  fullName: DynamoForRevitUtils.Entities.ParametersHandlers
  spec.csharp:
  - uid: DynamoForRevitUtils
    name: DynamoForRevitUtils
    isExternal: true
    href: DynamoForRevitUtils.html
  - name: .
  - uid: DynamoForRevitUtils.Entities
    name: Entities
    isExternal: true
    href: DynamoForRevitUtils.Entities.html
  - name: .
  - uid: DynamoForRevitUtils.Entities.ParametersHandlers
    name: ParametersHandlers
    isExternal: true
    href: DynamoForRevitUtils.Entities.ParametersHandlers.html
  spec.vb:
  - uid: DynamoForRevitUtils
    name: DynamoForRevitUtils
    isExternal: true
    href: DynamoForRevitUtils.html
  - name: .
  - uid: DynamoForRevitUtils.Entities
    name: Entities
    isExternal: true
    href: DynamoForRevitUtils.Entities.html
  - name: .
  - uid: DynamoForRevitUtils.Entities.ParametersHandlers
    name: ParametersHandlers
    isExternal: true
    href: DynamoForRevitUtils.Entities.ParametersHandlers.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1
  commentId: T:DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html
  name: IElementWrapper<TParamMap>
  nameWithType: IElementWrapper<TParamMap>
  fullName: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper<TParamMap>
  nameWithType.vb: IElementWrapper(Of TParamMap)
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper(Of TParamMap)
  name.vb: IElementWrapper(Of TParamMap)
  spec.csharp:
  - uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1
    name: IElementWrapper
    isExternal: true
    href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html
  - name: <
  - name: TParamMap
  - name: '>'
  spec.vb:
  - uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1
    name: IElementWrapper
    isExternal: true
    href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TParamMap
  - name: )
- uid: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1(System.Object)
  commentId: M:DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1(System.Object)
  isExternal: true
  href: DynamoForRevitUtils.Services.GenericServices.ObjectServices.html#DynamoForRevitUtils_Services_GenericServices_ObjectServices_TryCast__1_System_Object_
  name: TryCast<T>(object)
  nameWithType: ObjectServices.TryCast<T>(object)
  fullName: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast<T>(object)
  nameWithType.vb: ObjectServices.TryCast(Of T)(Object)
  fullName.vb: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast(Of T)(Object)
  name.vb: TryCast(Of T)(Object)
  spec.csharp:
  - uid: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1(System.Object)
    name: TryCast
    isExternal: true
    href: DynamoForRevitUtils.Services.GenericServices.ObjectServices.html#DynamoForRevitUtils_Services_GenericServices_ObjectServices_TryCast__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: DynamoForRevitUtils.Services.GenericServices.ObjectServices.TryCast``1(System.Object)
    name: TryCast
    isExternal: true
    href: DynamoForRevitUtils.Services.GenericServices.ObjectServices.html#DynamoForRevitUtils_Services_GenericServices_ObjectServices_TryCast__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: DynamoForRevitUtils.Services.GenericServices.ObjectServices
  commentId: T:DynamoForRevitUtils.Services.GenericServices.ObjectServices
  parent: DynamoForRevitUtils.Services.GenericServices
  isExternal: true
  href: DynamoForRevitUtils.Services.GenericServices.ObjectServices.html
  name: ObjectServices
  nameWithType: ObjectServices
  fullName: DynamoForRevitUtils.Services.GenericServices.ObjectServices
- uid: DynamoForRevitUtils.Services.GenericServices
  commentId: N:DynamoForRevitUtils.Services.GenericServices
  isExternal: true
  href: DynamoForRevitUtils.html
  name: DynamoForRevitUtils.Services.GenericServices
  nameWithType: DynamoForRevitUtils.Services.GenericServices
  fullName: DynamoForRevitUtils.Services.GenericServices
  spec.csharp:
  - uid: DynamoForRevitUtils
    name: DynamoForRevitUtils
    isExternal: true
    href: DynamoForRevitUtils.html
  - name: .
  - uid: DynamoForRevitUtils.Services
    name: Services
    isExternal: true
    href: DynamoForRevitUtils.Services.html
  - name: .
  - uid: DynamoForRevitUtils.Services.GenericServices
    name: GenericServices
    isExternal: true
    href: DynamoForRevitUtils.Services.GenericServices.html
  spec.vb:
  - uid: DynamoForRevitUtils
    name: DynamoForRevitUtils
    isExternal: true
    href: DynamoForRevitUtils.html
  - name: .
  - uid: DynamoForRevitUtils.Services
    name: Services
    isExternal: true
    href: DynamoForRevitUtils.Services.html
  - name: .
  - uid: DynamoForRevitUtils.Services.GenericServices
    name: GenericServices
    isExternal: true
    href: DynamoForRevitUtils.Services.GenericServices.html
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.Element
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.Element
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_ElementWrapper_1_Element
  name: Element
  nameWithType: ElementWrapper<TParamMap>.Element
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.Element
  nameWithType.vb: ElementWrapper(Of TParamMap).Element
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).Element
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.#ctor*
  commentId: Overload:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.#ctor
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_ElementWrapper_1__ctor_Autodesk_Revit_DB_Element__0_
  name: ElementWrapper
  nameWithType: ElementWrapper<TParamMap>.ElementWrapper
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.ElementWrapper
  nameWithType.vb: ElementWrapper(Of TParamMap).New
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).New
  name.vb: New
- uid: Autodesk.Revit.DB.Element
  commentId: T:Autodesk.Revit.DB.Element
  parent: Autodesk.Revit.DB
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: Autodesk.Revit.DB.Element
- uid: '{TParamMap}'
  commentId: '!:TParamMap'
  definition: TParamMap
  name: TParamMap
  nameWithType: TParamMap
  fullName: TParamMap
- uid: TParamMap
  name: TParamMap
  nameWithType: TParamMap
  fullName: TParamMap
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.Element*
  commentId: Overload:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.Element
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_ElementWrapper_1_Element
  name: Element
  nameWithType: ElementWrapper<TParamMap>.Element
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.Element
  nameWithType.vb: ElementWrapper(Of TParamMap).Element
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).Element
- uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{{TParamMap}}.Element
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{`0}.Element
  parent: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{{TParamMap}}
  definition: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1.Element
  href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_IElementWrapper_1_Element
  name: Element
  nameWithType: IElementWrapper<TParamMap>.Element
  fullName: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper<TParamMap>.Element
  nameWithType.vb: IElementWrapper(Of TParamMap).Element
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper(Of TParamMap).Element
- uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1.Element
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1.Element
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_IElementWrapper_1_Element
  name: Element
  nameWithType: IElementWrapper<TParamMap>.Element
  fullName: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper<TParamMap>.Element
  nameWithType.vb: IElementWrapper(Of TParamMap).Element
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper(Of TParamMap).Element
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterMap*
  commentId: Overload:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterMap
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_ElementWrapper_1_ParameterMap
  name: ParameterMap
  nameWithType: ElementWrapper<TParamMap>.ParameterMap
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.ParameterMap
  nameWithType.vb: ElementWrapper(Of TParamMap).ParameterMap
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).ParameterMap
- uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{{TParamMap}}.ParameterMap
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{`0}.ParameterMap
  parent: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper{{TParamMap}}
  definition: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1.ParameterMap
  href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_IElementWrapper_1_ParameterMap
  name: ParameterMap
  nameWithType: IElementWrapper<TParamMap>.ParameterMap
  fullName: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper<TParamMap>.ParameterMap
  nameWithType.vb: IElementWrapper(Of TParamMap).ParameterMap
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper(Of TParamMap).ParameterMap
- uid: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1.ParameterMap
  commentId: P:DynamoForRevitUtils.Entities.Wrappers.IElementWrapper`1.ParameterMap
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_IElementWrapper_1_ParameterMap
  name: ParameterMap
  nameWithType: IElementWrapper<TParamMap>.ParameterMap
  fullName: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper<TParamMap>.ParameterMap
  nameWithType.vb: IElementWrapper(Of TParamMap).ParameterMap
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.IElementWrapper(Of TParamMap).ParameterMap
- uid: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterAccessor*
  commentId: Overload:DynamoForRevitUtils.Entities.Wrappers.ElementWrapper`1.ParameterAccessor
  isExternal: true
  href: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper-1.html#DynamoForRevitUtils_Entities_Wrappers_ElementWrapper_1_ParameterAccessor
  name: ParameterAccessor
  nameWithType: ElementWrapper<TParamMap>.ParameterAccessor
  fullName: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper<TParamMap>.ParameterAccessor
  nameWithType.vb: ElementWrapper(Of TParamMap).ParameterAccessor
  fullName.vb: DynamoForRevitUtils.Entities.Wrappers.ElementWrapper(Of TParamMap).ParameterAccessor
- uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor{{TParamMap}}
  commentId: T:DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor{`0}
  parent: DynamoForRevitUtils.Entities.ParametersHandlers
  definition: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor`1
  href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor-1.html
  name: ElementParameterAccessor<TParamMap>
  nameWithType: ElementParameterAccessor<TParamMap>
  fullName: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor<TParamMap>
  nameWithType.vb: ElementParameterAccessor(Of TParamMap)
  fullName.vb: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor(Of TParamMap)
  name.vb: ElementParameterAccessor(Of TParamMap)
  spec.csharp:
  - uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor`1
    name: ElementParameterAccessor
    isExternal: true
    href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor-1.html
  - name: <
  - name: TParamMap
  - name: '>'
  spec.vb:
  - uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor`1
    name: ElementParameterAccessor
    isExternal: true
    href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TParamMap
  - name: )
- uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor`1
  commentId: T:DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor`1
  isExternal: true
  href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor-1.html
  name: ElementParameterAccessor<TParamMap>
  nameWithType: ElementParameterAccessor<TParamMap>
  fullName: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor<TParamMap>
  nameWithType.vb: ElementParameterAccessor(Of TParamMap)
  fullName.vb: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor(Of TParamMap)
  name.vb: ElementParameterAccessor(Of TParamMap)
  spec.csharp:
  - uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor`1
    name: ElementParameterAccessor
    isExternal: true
    href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor-1.html
  - name: <
  - name: TParamMap
  - name: '>'
  spec.vb:
  - uid: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor`1
    name: ElementParameterAccessor
    isExternal: true
    href: DynamoForRevitUtils.Entities.ParametersHandlers.ElementParameterAccessor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TParamMap
  - name: )
